{"version":3,"sources":["Pages/ETF_Description/ETF_Descriptions/DescriptionTable.jsx","Pages/ETF_Description/ETF_Holdings/PieChartModal.jsx","Pages/ETF_Description/ETF_Holdings/HoldingsTable.jsx","Pages/ETF_Description/PNL/PnlTable.jsx","Pages/ETF_Description/ETF_Same_Issuer/SameIssuerTable.jsx","Pages/ETF_Description/ETF_Similar_Asset_Management/SimilarAssetUnderManagement.jsx","Pages/ETF_Description/ETF_Same_Industry/SameIndustryTable.jsx","Pages/ETF_Description/ETF_Description.jsx","Routes/EtfDescRoutes.jsx"],"names":["DescriptionTable","props","DescriptionData","useState","order","setTableOrder","orderType","setOrderType","useEffect","Object","keys","sort","Card","text","bg","Header","Body","className","Table","size","striped","bordered","hover","variant","onClick","reverse","map","key","PieChartModal","data","element","show","setShow","handleClose","Button","Modal","onHide","closeButton","Title","Footer","HoldingsTable","ETF","startDate","tableData","setTableData","searchString","setSearchString","filterData","setFilterData","isLoading","setLoading","Axios","get","then","catch","err","console","log","setTimeout","length","re","RegExp","escapeRegExp","filter","result","test","TickerSymbol","Loader","name","onChange","debounce","e","target","value","leading","sortedData","orderBy","Array","isArray","TickerName","TickerWeight","PnlTable","res","style","width","Date","SameIssuerTable","IssuerName","setIsLoading","etfTicker","ETFName","TotalAssetsUnderMgmt","SimilarAssetUnderManagement","SimilarTotalAsstUndMgmt","index","SameIndustryTable","EtfDbCategory","ETF_Description","state","HoldingsData","SameIssuerETFs","EtfsWithSameEtfDbCategory","OHLCDailyData","PNLOverDates","LoadingStatement","magnitudeOfArbitrage","fetchEtfdesc","ETFDataObject","setState","Issuer","ETFdbCategory","this","match","params","prevProps","prevPropsETF","prevPropsStartDate","React","Component","compose","connect","EtfDescRoutes","useSelector","navbar","ProtectedRoute","path","component","from","to"],"mappings":"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","file":"static/js/6.8b206899.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport \"../Styles/styles.css\";\n\nconst DescriptionTable = (props) => {\n  const { DescriptionData } = props;\n\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    if (typeof DescriptionData === \"object\") {\n      const order = Object.keys(DescriptionData).sort();\n      setTableOrder(order);\n    }\n  }, [DescriptionData]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(DescriptionData).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(DescriptionData).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  return (\n    <Card text=\"light\" bg=\"dark\">\n      <Card.Header>\n        ETF Description\n      </Card.Header>\n      <Card.Body className=\"padding-0 overflow-auto half-height\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Name\n              </th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof DescriptionData === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key && key}</td>\n                  <td>{DescriptionData[key] && DescriptionData[key]} </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DescriptionTable;\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../../../Common_Components/PieChart\";\n\nconst PieChartModal = ({ data, element }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button\n        className=\"margin-left-auto padding-1px\"\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={handleShow}\n      >\n        PieChart\n      </Button>\n\n      {show && (\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>ETF Holdings</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"margin-auto\">\n            <CommonPieChart data={data} element=\"TickerWeight\" />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default PieChartModal;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PieChartModal from \"./PieChartModal\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst HoldingsTable = (props) => {\n  const { ETF, startDate } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (startDate && ETF) {\n      Axios.get(`/api/ETfDescription/getHoldingsData/${ETF}/${startDate}`)\n        .then(({ data }) => {\n          setTableData([...data]);\n          setFilterData([...data]);\n          setLoading(false);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [ETF, startDate]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.TickerSymbol);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"TickerSymbol\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"TickerSymbol\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Card text=\"light\" bg=\"dark\">\n          <Card.Header className=\"flex-row\">\n            ETF Holdings\n            <input\n              className=\"margin-left-auto d-inline-block\"\n              name=\"search\"\n              onChange={debounce(handleSearchChange, 500, { leading: true })}\n              value={searchString}\n            />\n            <PieChartModal data={tableData} element={\"TickerWeight\"} />\n          </Card.Header>\n\n          <Card.Body className=\"padding-0 overflow-auto half-height\">\n            <Table size=\"sm\" striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"cursor-pointer\" onClick={changeOrder}>\n                    Symbol\n                  </th>\n                  <th>TickerName</th>\n                  <th>TickerWeight</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.isArray(filterData) &&\n                  filterData.map((data) => (\n                    <tr key={data.TickerSymbol}>\n                      <td>{data.TickerSymbol}</td>\n                      <td>{data.TickerName && data.TickerName}</td>\n                      <td> {data.TickerWeight && data.TickerWeight} </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default HoldingsTable;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Card, Table } from \"react-bootstrap\";\nimport \"../Styles/styles.css\";\n\nconst PnlTable = (props) => {\n  const { ETF } = props;\n\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\n      `/api/PastArbitrageData/CommonDataAcrossEtf/${ETF}`\n    )\n      .then((res) => setTableData(res.data))\n      .catch((err) => console.log(err));\n  }, [ETF]);\n\n  return (\n    <Card style={{width:\"100%\"}} bg=\"dark\" text=\"light\">\n      <Card.Header>PNL Table</Card.Header>\n      <Card.Body className=\"padding-0 overflow-auto half-height\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\">Date</th>\n              <th># R.Buy</th>\n              <th># R.Sell</th>\n              <th># T.Buy</th>\n              <th># T.Sell</th>\n              <th>% R.Buy</th>\n              <th>% R.Sell</th>\n              <th>Buy Return%</th>\n              <th>Sell Return%</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(tableData) &&\n              tableData.map((data) => {\n                return (\n                  <tr key={data.Date}>\n                    <td>{data.Date}</td>\n                    <td>{data[\"# R.Buy\"]}</td>\n                    <td>{data[\"# R.Sell\"]}</td>\n                    <td>{data[\"# T.Buy\"]}</td>\n                    <td>{data[\"# T.Sell\"]}</td>\n                    <td>{data[\"% R.Buy\"]}</td>\n                    <td>{data[\"% R.Sell\"]}</td>\n                    <td className={data[\"Buy Return%\"] < 0 ? \"red\" : \"green\"}>\n                      {data[\"Buy Return%\"]}\n                    </td>\n                    <td className={data[\"Sell Return%\"] < 0 ? \"red\" : \"green\"}>\n                      {data[\"Sell Return%\"]}\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PnlTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst SameIssuerTable = (props) => {\n  const { IssuerName } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (IssuerName) {\n      Axios.get(`/api/ETfDescription/getETFWithSameIssuer/${IssuerName}`)\n        .then(({ data }) => {\n          setTableData(data);\n          setFilterData(data);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [IssuerName]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.etfTicker);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  return (\n    <Card bg=\"dark\" text=\"light\">\n      <Card.Header className=\"flex-row\">\n        ETF in Same Issuer\n        <input\n          className=\"margin-left-auto d-inline-block\"\n          name=\"search\"\n          onChange={debounce(handleSearchChange, 500, { leading: true })}\n          value={searchString}\n        />\n      </Card.Header>\n\n      <Card.Body className=\"padding-0  overflow-auto half-height\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Table size=\"sm\" striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th className=\"cursor-pointer\" onClick={changeOrder}>\n                  Symbol\n                </th>\n                <th>ETF Name</th>\n                <th>TotalAssetsUnderMgmt</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Array.isArray(filterData) &&\n                filterData.map(\n                  ({ ETFName, TotalAssetsUnderMgmt, etfTicker }) => (\n                    <tr key={etfTicker}>\n                      <td>{etfTicker && etfTicker}</td>\n                      <td>{ETFName && ETFName}</td>\n                      <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                    </tr>\n                  )\n                )}\n            </tbody>\n          </Table>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SameIssuerTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { escapeRegExp } from \"lodash\";\nimport orderBy from \"lodash/orderBy\";\n\nconst SimilarAssetUnderManagement = (props) => {\n  const { SimilarTotalAsstUndMgmt } = props;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    const sortedData = orderBy(SimilarTotalAsstUndMgmt, [\"etfTicker\"], [\"asc\"]);\n\n    setOrderType(\"DSC\");\n    setTableData(sortedData);\n  }, [SimilarAssetUnderManagement]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(\n        SimilarTotalAsstUndMgmt,\n        [\"etfTicker\"],\n        [\"asc\"]\n      );\n\n      setOrderType(\"DSC\");\n      setTableData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(\n        SimilarTotalAsstUndMgmt,\n        [\"etfTicker\"],\n        [\"desc\"]\n      );\n      setOrderType(\"ASC\");\n      setTableData(sortedData);\n    }\n  };\n\n  return (\n    <Card bg=\"dark\" text=\"light\">\n      <Card.Header>\n        Similar Asset under Management\n      </Card.Header>\n      <Card.Body className=\"padding-0 overflow-auto half-height\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Symbol\n              </th>\n              <th>ETF Name</th>\n              <th>Total Asset</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(tableData) &&\n              tableData.map(\n                ({ ETFName, TotalAssetsUnderMgmt, etfTicker }, index) => (\n                  <tr key={`etfTicker${index}`}>\n                    <td>{etfTicker && etfTicker}</td>\n                    <td>{ETFName && ETFName}</td>\n                    <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                  </tr>\n                )\n              )}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SimilarAssetUnderManagement;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst SameIndustryTable = (props) => {\n  const { EtfDbCategory } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (EtfDbCategory) {\n      Axios.get(`/api/ETfDescription/getETFsWithSameETFdbCategory/${EtfDbCategory}`)\n        .then(({ data }) => {\n          setTableData(data);\n          setFilterData(data);\n          setIsLoading(false)\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [EtfDbCategory]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.etfTicker);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Card bg=\"dark\" text=\"white\">\n          <Card.Header className=\"flex-row\">\n            ETF in Same Industry\n            <input\n              className=\"margin-left-auto d-inline-block\"\n              name=\"search\"\n              onChange={debounce(handleSearchChange, 500, { leading: true })}\n              value={searchString}\n            />\n          </Card.Header>\n          <Card.Body className=\"padding-0 overflow-auto half-height\">\n            <Table size=\"sm\" striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"cursor-pointer\" onClick={changeOrder}>\n                    Symbol\n                  </th>\n                  <th>ETF Name</th>\n                  <th>TotalAssetsUnderMgmt</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.isArray(filterData) &&\n                  filterData.map(\n                    ({ ETFName, TotalAssetsUnderMgmt, etfTicker }) => (\n                      <tr key={etfTicker}>\n                        <td>{etfTicker && etfTicker}</td>\n                        <td>{ETFName && ETFName}</td>\n                        <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                      </tr>\n                    )\n                  )}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default SameIndustryTable;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { DescriptionTable } from \"./ETF_Descriptions\";\nimport { ETFHoldings } from \"./ETF_Holdings\";\nimport { PNL } from \"./PNL\";\nimport { EtfSameIssuer } from \"./ETF_Same_Issuer\";\nimport { SimilarAssetUnderManagement } from \"./ETF_Similar_Asset_Management\";\nimport { EtfSameIndustry } from \"./ETF_Same_Industry\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { Loader } from \"../../Common_Components/Loader\";\nimport { CommonNavBar } from \"../../Common_Components/NavBar\";\nimport \"./Styles/styles.css\";\n\nclass ETF_Description extends React.Component {\n  state = {\n    DescriptionData: null,\n    HoldingsData: \"\",\n    SameIssuerETFs: \"\",\n    IssuerName: null,\n    SimilarTotalAsstUndMgmt: \"\",\n    EtfsWithSameEtfDbCategory: \"\",\n    EtfDbCategory: null,\n    OHLCDailyData: \"\",\n    PNLOverDates: \"\",\n    LoadingStatement: \"Loading.. PNL for \" + this.props.ETF,\n    magnitudeOfArbitrage: \"\",\n  };\n\n  fetchEtfdesc = (ETF, startDate) => {\n    if (ETF && startDate) {\n      Axios.get(`/api/ETfDescription/EtfData/${ETF}/${startDate}`)\n        .then((res) => {\n          const { ETFDataObject, SimilarTotalAsstUndMgmt } = res.data;\n          this.setState({\n            ...this.state,\n            DescriptionData: ETFDataObject,\n            SimilarTotalAsstUndMgmt: SimilarTotalAsstUndMgmt,\n            IssuerName: ETFDataObject.Issuer,\n            EtfDbCategory: ETFDataObject.ETFdbCategory,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  componentDidMount() {\n    const { startDate, ETF } = this.props.match.params;\n    this.fetchEtfdesc(ETF, startDate);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      ETF: prevPropsETF,\n      startDate: prevPropsStartDate,\n    } = prevProps.match.params;\n    const { ETF, startDate } = this.props.match.params;\n\n    if (prevPropsETF !== ETF || prevPropsStartDate !== startDate) {\n      this.fetchEtfdesc(ETF, startDate);\n    }\n  }\n\n  render() {\n    const {\n      DescriptionData,\n      IssuerName,\n      SimilarTotalAsstUndMgmt,\n      EtfDbCategory,\n    } = this.state;\n\n    const { startDate, ETF } = this.props.match.params;\n    return (\n      <>\n        <CommonNavBar />\n        <div className=\"container-fluid font-size-sm\">\n          <div className=\"row\">\n            \n            <div className=\"col-md-3 col-lg-3 col-sm-12 padding-0\">\n              {DescriptionData ? (\n                <DescriptionTable DescriptionData={DescriptionData} />\n              ) : (\n                <Loader />\n              )}\n            </div>\n            \n            <div className=\"col-md-4 col-lg-4 col-sm-12 padding-0\">\n              <ETFHoldings ETF={ETF} startDate={startDate} />\n            </div>\n            \n            <div className=\"col-md-5 col-lg-5 col-sm-12 padding-0\">\n              <PNL ETF={ETF} />\n            </div>\n            \n            <div className=\"col-md-4 col-lg-4 col-sm-12 padding-0\">\n              <EtfSameIssuer IssuerName={IssuerName} />\n            </div>\n\n            <div className=\"col-md-4 col-lg-4 col-sm-12 padding-0\">\n              {SimilarTotalAsstUndMgmt && (\n              <SimilarAssetUnderManagement\n                SimilarTotalAsstUndMgmt={SimilarTotalAsstUndMgmt}\n              />\n              )}\n            </div>\n\n            <div className=\"col-md-4 col-lg-4 col-sm-12 padding-0\">\n              {EtfDbCategory && <EtfSameIndustry EtfDbCategory={EtfDbCategory} />}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default compose(connect(null, null))(ETF_Description);\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ETF_Description from \"../Pages/ETF_Description/ETF_Description\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { useSelector } from \"react-redux\";\n\nconst EtfDescRoutes = () => {\n  const { ETF, startDate } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/ETF-Description/:ETF/:startDate\"\n        component={ETF_Description}\n      />\n      <Redirect\n      \n      from=\"/ETF-Description/:ETF\"\n      to={`/ETF-Description/:ETF/${startDate}`}\n    />\n      <Redirect\n      \n        from=\"/ETF-Description\"\n        to={`/ETF-Description/${ETF}/${startDate}`}\n      />\n    </Switch>\n  );\n};\n\nexport default EtfDescRoutes;\n"],"sourceRoot":""}