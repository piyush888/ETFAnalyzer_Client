{"version":3,"sources":["Utilities/AuthContext.js","Common_Components/SignIn/SignInForm.jsx","Routes/ProtectedRoute.jsx","Pages/ETF_Description/ETF_Descriptions/DescriptionTable.jsx","Common_Components/PieChart/CommonPieChart.jsx","Pages/ETF_Description/ETF_Holdings/PieChartModal.jsx","Common_Components/Loader/Loader.jsx","Pages/ETF_Description/ETF_Holdings/HoldingsTable.jsx","Pages/ETF_Description/PNL/PnlTable.jsx","Pages/ETF_Description/ETF_Same_Issuer/SameIssuerTable.jsx","Pages/ETF_Description/ETF_Similar_Asset_Management/SimilarAssetUnderManagement.jsx","Pages/ETF_Description/ETF_Same_Industry/SameIndustryTable.jsx","Pages/ETF_Description/ETF_Description.jsx","Routes/EtfDescRoutes.jsx","Common_Components/NavBar/etfSelectOptions.js","Common_Components/NavBar/NavBarMain.jsx","Common_Components/NavBar/NavBarActions.js","Pages/Historical_Arbitrage/EtfArbitrageTable.jsx","Pages/Historical_Arbitrage/DailyChangeUnderlying.jsx","Component/LineChartForHistArb.js","Component/StockCharts/CandleStickChartWithMACDIndicator.js","Component/StockCharts/updatingDataWrapper.js","Component/StockCharts/Chart.js","Component/StockPriceChart.js","Component/CombinedPieCharts.jsx","Component/Table.js","Component/ScatterPlot.js","Pages/Historical_Arbitrage/Historical_Arbitrage_Main.jsx","Routes/HistArbiageRoutes.jsx","Pages/Live_Arbitrage_Single/LiveStatusWindow.jsx","Pages/Live_Arbitrage_Single/LiveArbitrageTable.jsx","Pages/Live_Arbitrage_Single/Live_Arbitrage_Main.jsx","Routes/LiveArbitrageSingleRoutes.jsx","Pages/Live_Arbitrage/Live_Arbitrage_Table.jsx","Pages/Live_Arbitrage/Live_Arbitrage_All.jsx","Routes/Live_Arbitrage_All.jsx","Routes/AuthenticatedRoutes.jsx","Utilities/userPool.js","Common_Components/SignUp/SignUpForm.jsx","Utilities/AuthProvider.jsx","App/App.jsx","Redux/authReducer.js","Common_Components/NavBar/NavBarReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["AuthContext","React","createContext","AuthContextProvider","Provider","Consumer","SignInForm","useContext","authenticate","getSession","history","useHistory","useState","email","setEmail","password","setPassword","useEffect","then","session","push","className","Form","onSubmit","event","preventDefault","data","catch","err","console","error","Group","controlId","Label","Control","value","onChange","e","target","type","placeholder","Text","Check","label","Button","variant","ProtectedRoute","Component","component","rest","exp","setLoggedIn","log","render","props","DescriptionTable","DescriptionData","order","setTableOrder","orderType","setOrderType","Object","keys","sort","Card","Header","Body","Table","size","striped","bordered","hover","onClick","reverse","map","key","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","convertData","element","convertedData","entries","forEach","CommonPieChart","state","chartname","activeIndex","COLORS","onPieEnter","index","setState","prevProps","this","tempData","width","height","activeShape","dataKey","onMouseEnter","entry","length","PureComponent","PieChartModal","show","setShow","handleClose","Modal","onHide","closeButton","Title","Footer","spinnerStyle","fontSize","Loader","style","HoldingsTable","ETF","startDate","tableData","setTableData","searchString","setSearchString","filterData","setFilterData","isLoading","setLoading","Axios","get","setTimeout","re","RegExp","escapeRegExp","filter","result","test","TickerSymbol","debounce","leading","sortedData","orderBy","Array","isArray","TickerName","TickerWeight","PnlTable","res","Date","SameIssuerTable","IssuerName","setIsLoading","etfTicker","ETFName","TotalAssetsUnderMgmt","SimilarAssetUnderManagement","SimilarTotalAsstUndMgmt","SameIndustryTable","EtfDbCategory","ETF_Description","HoldingsData","SameIssuerETFs","EtfsWithSameEtfDbCategory","OHLCDailyData","PNLOverDates","LoadingStatement","magnitudeOfArbitrage","fetchEtfdesc","ETFDataObject","Issuer","ETFdbCategory","Row","Col","xs","md","compose","connect","navbar","EtfDescRoutes","useSelector","path","from","to","etfSelectOptions","NavBarMain","logout","useParams","location","useLocation","dispatch","useDispatch","routeName","pathname","split","etfName","toUpperCase","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","Link","color","as","eventKey","marginRight","backgroundColor","values","labelField","valueField","options","noDataLabel","inline","FormControl","moment","format","date","EtfArbitrageTable","undefined","someJSON","Time","cls","getRowsData","DailyChangeUnderlyingFunc","DailyChangeUnderlying","symbol","DailyChangepct","volume","LineChartForHistArb","padding","top","right","left","bottom","dot","macdAppearance","macd","signal","divergence","mouseEdgeAppearance","textFill","strokeOpacity","strokeWidth","arrowWidth","CandleStickChartWithMACDIndicator","initialData","ratio","ema26","ema","windowSize","merge","c","accessor","ema12","macdCalculator","fast","slow","smaVolume50","sma","sourcePath","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","margin","seriesName","yExtents","high","low","axisAt","orient","showTicks","outerTickSize","ticks","at","displayFormat","yAccessor","itemType","edgeAt","close","open","origin","with","LabelAnnotation","when","usingProps","fontFamily","opacity","text","yScale","datum","w","h","tickFormat","timeFormat","rectRadius","appearance","defaultProps","fitWidth","ChartComponent","UpdatingComponentHOC","slice","speed","onKeyPress","bind","document","addEventListener","interval","clearInterval","removeEventListener","keyCode","which","func","max","delta","min","setInterval","ref","displayName","getDisplayName","updatingDataWrapper","didupdate","nextProps","DataCopy","CombinedPieCharts","dialogClassName","etfmoversDictCount","highestChangeDictCount","stringConstructor","constructor","arrayConstructor","objectConstructor","whatIsIt","object","RenderRow","k","i","RenderRowClickable","submitFn","AppTable","getKeys","MainKeys","unshift","getHeader","Key1","row","clickableTable","ScatterPlot","unit","cursor","strokeDasharray","HistoricalArbitrage","etfArbitrageTableData","historicalArbitrageData","scatterPlotData","etfPriceData","ArbitrageCumSum","parseDate","timeParse","fetchData","JSON","parse","etfhistoricaldata","PNLStatementForTheDay","tsvParse","etfPrices","parseData","SignalCategorization","etfUnderlyingPerformance","underlyingPerformance","parseFloat","parseInt","match","params","HistArbiageRoutes","LiveStatusWindow","HighPrice","OpenPrice","ClosePrice","LowPrice","CurrentTime","LiveColor","ETFStatus","Signal","SignalStrength","LiveArbitrage","LiveSpread","TableStyling","LiveArbitrageTable","Live_Arbitrage_Single","Full_Day_Arbitrage_Data","Full_Day_Prices","LiveVWPrice","pnlstatementforday","ArbitrageLineChart","dataFetchInterval","getSeconds","UpdateArbitragDataTables","fetchETFLiveData","intervalId","axios","Arbitrage","Prices","appendToPreviousTable","SignalInfo","Strength","TickVolume","LiveArbitrageSingleRoutes","Live_Arbitrage_All_Table","expandedRows","setExpandedRows","isSortedBy","setSorted","changeOrder","getClassNameForSortIcon","col","renderItem","itemRows","rowId","currentExpandedRows","newExpandedRows","includes","concat","handleRowClick","colspan","bsPrefix","toFixed","callback","delay","savedCallback","useRef","current","useInterval","href","class","selected","Live_Arbitrage_All","LiveArbitrageAllEtf","LiveArbitrageAllRoutes","AuthenticatedRoutes","userPool","CognitoUserPool","UserPoolId","ClientId","SignUpForm","signUp","initialState","reducer","action","AuthProvider","useReducer","Username","Password","a","Promise","resolve","reject","user","CognitoUser","Pool","authDetails","AuthenticationDetails","authenticateUser","onSuccess","onFailure","newPasswordRequired","getCurrentUser","getUserAttributes","attributes","results","attribute","Name","Value","token","getIdToken","getJwtToken","headers","Authorization","signOut","children","LoginRoute","App","exact","isLoggedIn","authReducer","NavBarReducer","rootReducer","combineReducers","auth","devTools","applyMiddleware","thunk","store","createStore","ReactDOM","getElementById"],"mappings":"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AC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,KAAM,MAAS,KAC5B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,KAAM,MAAS,KAC5B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QA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","file":"static/js/main.707bc281.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AuthContext = React.createContext();\n\nexport const AuthContextProvider = AuthContext.Provider;\nexport const AuthContextConsumer = AuthContext.Consumer;\n\nexport default AuthContext;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../../Utilities/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst SignInForm = () => {\n  const { authenticate, getSession } = useContext(AuthContext);\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    getSession().then((session) => history.push(\"/ETF-Description\"));\n  }, []);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    authenticate(email, password)\n      .then((data) => {\n        history.push(\"/ETF-Description\");\n      })\n      .catch((err) => {\n        console.error(\"Failed to login!\", err);\n      });\n  };\n  return (\n    <div className=\"bg-color-dark padding-top-20vh height-100vh\">\n      <div className=\"margin-left-auto margin-right-auto width-30em\">\n        <Form onSubmit={onSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n              placeholder=\"Enter email\"\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInForm;\n","import React, { useContext, useState } from \"react\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport AuthContext from \"../Utilities/AuthContext\";\n\nconst ProtectedRoute = ({ component: Component, exp, ...rest }) => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const { getSession } = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    getSession()\n      .then((session) => {\n        console.log(session);\n        setLoggedIn(true);\n      })\n      .catch((err) => history.push(\"/login\"));\n  }, []);\n\n  return (\n    <>\n      {true ? (\n        <Route\n          {...rest}\n          render={(props) => {\n            return <Component {...props} />;\n          }}\n        />\n      ) : (\n        <div>loading...</div>\n      )}\n    </>\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\n\nconst DescriptionTable = (props) => {\n  const { DescriptionData } = props;\n\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    if (typeof DescriptionData === \"object\") {\n      const order = Object.keys(DescriptionData).sort();\n      setTableOrder(order);\n    }\n  }, [DescriptionData]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(DescriptionData).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(DescriptionData).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        ETF Description\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Name\n              </th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof DescriptionData === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key && key}</td>\n                  <td>{DescriptionData[key] && DescriptionData[key]} </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DescriptionTable;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${value}`}</text>\n    </g>\n  );\n};\n\nconst convertData = (data = {}, element = \"\") => {\n  const convertedData = [];\n  Object.entries(data).forEach(([key, value]) =>\n    convertedData.push({ name: key, value: value[element] })\n  );\n  return convertedData;\n};\n\nclass CommonPieChart extends PureComponent {\n  state = {\n    data: [],\n    chartname: \"\",\n    activeIndex: 0,\n    COLORS: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { data, element } = this.props;\n\n    if (data !== prevProps.data && typeof data === \"object\") {\n      const tempData = convertData(data, element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.data === \"object\") {\n      const tempData = convertData(this.props.data, this.props.element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <PieChart width={350} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={this.state.data}\n          cx={175}\n          cy={150}\n          innerRadius={25}\n          outerRadius={90}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell\n              key={index}\n              fill={this.state.COLORS[index % this.state.COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default CommonPieChart;\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../../../Common_Components/PieChart\";\n\nconst PieChartModal = ({ data, element }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button\n        className=\"margin-left-auto padding-1px\"\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={handleShow}\n      >\n        PieChart\n      </Button>\n\n      {show && (\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>ETF Holdings</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"margin-auto\">\n            <CommonPieChart data={data} element=\"TickerWeight\" />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default PieChartModal;\n","import React from \"react\";\n\nconst spinnerStyle = {\n\tfontSize:'14px'\n};\n\nconst Loader = () => {\n  return (\n    <div className=\"loader center\">\n      <i className=\"fa fa-spinner fa-spin\" style={spinnerStyle}></i>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PieChartModal from \"./PieChartModal\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst HoldingsTable = (props) => {\n  const { ETF, startDate } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (startDate && ETF) {\n      Axios.get(`/ETfDescription/getHoldingsData/${ETF}/${startDate}`)\n        .then(({ data }) => {\n          setTableData([...data]);\n          setFilterData([...data]);\n          setLoading(false);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [ETF, startDate]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.TickerSymbol);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"TickerSymbol\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"TickerSymbol\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Card>\n          <Card.Header className=\"text-white bg-color-dark flex-row\">\n            ETF Holdings\n            <input\n              className=\"margin-left-auto d-inline-block\"\n              name=\"search\"\n              onChange={debounce(handleSearchChange, 500, { leading: true })}\n              value={searchString}\n            />\n            <PieChartModal data={tableData} element={\"TickerWeight\"} />\n          </Card.Header>\n\n          <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n            <Table size=\"sm\" striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"cursor-pointer\" onClick={changeOrder}>\n                    Symbol\n                  </th>\n                  <th>TickerName</th>\n                  <th>TickerWeight</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.isArray(filterData) &&\n                  filterData.map((data) => (\n                    <tr key={data.TickerSymbol}>\n                      <td>{data.TickerSymbol}</td>\n                      <td>{data.TickerName && data.TickerName}</td>\n                      <td> {data.TickerWeight && data.TickerWeight} </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default HoldingsTable;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Card, Table } from \"react-bootstrap\";\n\nconst PnlTable = (props) => {\n  const { ETF } = props;\n\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\n      `/PastArbitrageData/CommonDataAcrossEtf/${ETF}`\n    )\n      .then((res) => setTableData(res.data))\n      .catch((err) => console.log(err));\n  }, [ETF]);\n\n  return (\n    <Card style={{width:\"100%\"}}>\n      <Card.Header className=\"text-white bg-color-dark\">PNL Table</Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\">Date</th>\n              <th># R.Buy</th>\n              <th># R.Sell</th>\n              <th># T.Buy</th>\n              <th># T.Sell</th>\n              <th>% R.Buy</th>\n              <th>% R.Sell</th>\n              <th>Buy Return%</th>\n              <th>Sell Return%</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(tableData) &&\n              tableData.map((data) => {\n                return (\n                  <tr key={data.Date}>\n                    <td>{data.Date}</td>\n                    <td>{data[\"# R.Buy\"]}</td>\n                    <td>{data[\"# R.Sell\"]}</td>\n                    <td>{data[\"# T.Buy\"]}</td>\n                    <td>{data[\"# T.Sell\"]}</td>\n                    <td>{data[\"% R.Buy\"]}</td>\n                    <td>{data[\"% R.Sell\"]}</td>\n                    <td className={data[\"Buy Return%\"] < 0 ? \"red\" : \"green\"}>\n                      {data[\"Buy Return%\"]}\n                    </td>\n                    <td className={data[\"Sell Return%\"] < 0 ? \"red\" : \"green\"}>\n                      {data[\"Sell Return%\"]}\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PnlTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst SameIssuerTable = (props) => {\n  const { IssuerName } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (IssuerName) {\n      Axios.get(`/ETfDescription/getETFWithSameIssuer/${IssuerName}`)\n        .then(({ data }) => {\n          setTableData(data);\n          setFilterData(data);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [IssuerName]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.etfTicker);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark flex-row\">\n        ETF in Same Issuer\n        <input\n          className=\"margin-left-auto d-inline-block\"\n          name=\"search\"\n          onChange={debounce(handleSearchChange, 500, { leading: true })}\n          value={searchString}\n        />\n      </Card.Header>\n\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Table size=\"sm\" striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th className=\"cursor-pointer\" onClick={changeOrder}>\n                  Symbol\n                </th>\n                <th>ETF Name</th>\n                <th>TotalAssetsUnderMgmt</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Array.isArray(filterData) &&\n                filterData.map(\n                  ({ ETFName, TotalAssetsUnderMgmt, etfTicker }) => (\n                    <tr key={etfTicker}>\n                      <td>{etfTicker && etfTicker}</td>\n                      <td>{ETFName && ETFName}</td>\n                      <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                    </tr>\n                  )\n                )}\n            </tbody>\n          </Table>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SameIssuerTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { escapeRegExp } from \"lodash\";\nimport orderBy from \"lodash/orderBy\";\n\nconst SimilarAssetUnderManagement = (props) => {\n  const { SimilarTotalAsstUndMgmt } = props;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    const sortedData = orderBy(SimilarTotalAsstUndMgmt, [\"etfTicker\"], [\"asc\"]);\n\n    setOrderType(\"DSC\");\n    setTableData(sortedData);\n  }, [SimilarAssetUnderManagement]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(\n        SimilarTotalAsstUndMgmt,\n        [\"etfTicker\"],\n        [\"asc\"]\n      );\n\n      setOrderType(\"DSC\");\n      setTableData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(\n        SimilarTotalAsstUndMgmt,\n        [\"etfTicker\"],\n        [\"desc\"]\n      );\n      setOrderType(\"ASC\");\n      setTableData(sortedData);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        Similar Asset under Management\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Symbol\n              </th>\n              <th>ETF Name</th>\n              <th>Total Asset</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(tableData) &&\n              tableData.map(\n                ({ ETFName, TotalAssetsUnderMgmt, etfTicker }, index) => (\n                  <tr key={`etfTicker${index}`}>\n                    <td>{etfTicker && etfTicker}</td>\n                    <td>{ETFName && ETFName}</td>\n                    <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                  </tr>\n                )\n              )}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SimilarAssetUnderManagement;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst SameIndustryTable = (props) => {\n  const { EtfDbCategory } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (EtfDbCategory) {\n      Axios.get(`/ETfDescription/getETFsWithSameETFdbCategory/${EtfDbCategory}`)\n        .then(({ data }) => {\n          setTableData(data);\n          setFilterData(data);\n          setIsLoading(false)\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [EtfDbCategory]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.etfTicker);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Card>\n          <Card.Header className=\"text-white bg-color-dark flex-row\">\n            ETF in Same Industry : Technology Equities\n            <input\n              className=\"margin-left-auto d-inline-block\"\n              name=\"search\"\n              onChange={debounce(handleSearchChange, 500, { leading: true })}\n              value={searchString}\n            />\n          </Card.Header>\n          <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n            <Table size=\"sm\" striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"cursor-pointer\" onClick={changeOrder}>\n                    Symbol\n                  </th>\n                  <th>ETF Name</th>\n                  <th>TotalAssetsUnderMgmt</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.isArray(filterData) &&\n                  filterData.map(\n                    ({ ETFName, TotalAssetsUnderMgmt, etfTicker }) => (\n                      <tr key={etfTicker}>\n                        <td>{etfTicker && etfTicker}</td>\n                        <td>{ETFName && ETFName}</td>\n                        <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                      </tr>\n                    )\n                  )}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default SameIndustryTable;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { DescriptionTable } from \"./ETF_Descriptions\";\nimport { ETFHoldings } from \"./ETF_Holdings\";\nimport { PNL } from \"./PNL\";\nimport { EtfSameIssuer } from \"./ETF_Same_Issuer\";\nimport { SimilarAssetUnderManagement } from \"./ETF_Similar_Asset_Management\";\nimport { EtfSameIndustry } from \"./ETF_Same_Industry\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { Loader } from \"../../Common_Components/Loader\";\n\nclass ETF_Description extends React.Component {\n  state = {\n    DescriptionData: null,\n    HoldingsData: \"\",\n    SameIssuerETFs: \"\",\n    IssuerName: null,\n    SimilarTotalAsstUndMgmt: \"\",\n    EtfsWithSameEtfDbCategory: \"\",\n    EtfDbCategory: null,\n    OHLCDailyData: \"\",\n    PNLOverDates: \"\",\n    LoadingStatement: \"Loading.. PNL for \" + this.props.ETF,\n    magnitudeOfArbitrage: \"\",\n  };\n\n  fetchEtfdesc = (ETF, startDate) => {\n    if (ETF && startDate) {\n      Axios.get(`/ETfDescription/EtfData/${ETF}/${startDate}`)\n        .then((res) => {\n          const { ETFDataObject, SimilarTotalAsstUndMgmt } = res.data;\n          this.setState({\n            ...this.state,\n            DescriptionData: ETFDataObject,\n            SimilarTotalAsstUndMgmt: SimilarTotalAsstUndMgmt,\n            IssuerName: ETFDataObject.Issuer,\n            EtfDbCategory: ETFDataObject.ETFdbCategory,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    const { startDate, ETF } = this.props;\n    this.fetchEtfdesc(ETF, startDate);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { startDate, ETF } = this.props;\n    if (prevProps.ETF !== ETF || prevProps.startDate !== startDate) {\n      this.fetchEtfdesc(ETF, startDate);\n    }\n  }\n\n  render() {\n    const {\n      DescriptionData,\n      IssuerName,\n      SimilarTotalAsstUndMgmt,\n      EtfDbCategory,\n    } = this.state;\n\n    const { startDate, ETF } = this.props;\n    return (\n      <Row>\n        <Col xs={12} md={12}>\n          <Row>\n            <Col xs={12} md={3}>\n              {DescriptionData ? (\n                <DescriptionTable DescriptionData={DescriptionData} />\n              ) : (\n                <Loader />\n              )}\n            </Col>\n\n            {/*\n        <Col xs={12} md={8}>\n          <Card>\n            <Card.Header className=\"text-white BlackHeaderForModal\">Price Chart</Card.Header>\n            <Card.Body style={{'backgroundColor':'#292b2c'}}>\n              <ChartComponent data={this.state.OHLCDailyData} />\n            </Card.Body>\n          </Card>\n        </Col>\n      */}\n\n            <Col xs={12} md={3}>\n              <ETFHoldings ETF={ETF} startDate={startDate} />\n            </Col>\n\n            <Col xs={12} md={6}>\n              <PNL ETF={ETF} />\n            </Col>\n\n            <Col xs={12} md={4}>\n              <EtfSameIssuer IssuerName={IssuerName} />\n            </Col>\n\n            <Col xs={12} md={4}>\n              {SimilarTotalAsstUndMgmt && (\n                <SimilarAssetUnderManagement\n                  SimilarTotalAsstUndMgmt={SimilarTotalAsstUndMgmt}\n                />\n              )}\n            </Col>\n\n            <Col xs={12} md={4}>\n              {EtfDbCategory && (\n                <EtfSameIndustry EtfDbCategory={EtfDbCategory} />\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ETF: state.navbar.ETF,\n    startDate: state.navbar.startDate,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default compose(connect(mapStateToProps, null))(ETF_Description);\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ETF_Description from \"../Pages/ETF_Description/ETF_Description\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { useSelector } from \"react-redux\";\n\nconst EtfDescRoutes = () => {\n  const { ETF, startDate } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/ETF-Description/:ETF/:startDate\"\n        component={ETF_Description}\n      />\n      <Redirect\n        from=\"/ETF-Description\"\n        to={`/ETF-Description/${ETF}/${startDate}`}\n      />\n    </Switch>\n  );\n};\n\nexport default EtfDescRoutes;\n","export const etfSelectOptions = [\n    { \"element\": \"AMLP\", \"index\": 0 },\n    { \"element\": \"ARKG\", \"index\": 1 },\n    { \"element\": \"BBH\", \"index\": 2 },\n    { \"element\": \"BBRE\", \"index\": 3 },\n    { \"element\": \"DIA\", \"index\": 4 },\n    { \"element\": \"DLN\", \"index\": 5 },\n    { \"element\": \"ERX\", \"index\": 6 },\n    { \"element\": \"ESGU\", \"index\": 7 },\n    { \"element\": \"EWQ\", \"index\": 8 },\n    { \"element\": \"FBT\", \"index\": 9 },\n    { \"element\": \"FCOM\", \"index\": 10 },\n    { \"element\": \"FDIS\", \"index\": 11 },\n    { \"element\": \"FDN\", \"index\": 12 },\n    { \"element\": \"FENY\", \"index\": 13 },\n    { \"element\": \"FEX\", \"index\": 14 },\n    { \"element\": \"FHLC\", \"index\": 15 },\n    { \"element\": \"FIDU\", \"index\": 16 },\n    { \"element\": \"FIVG\", \"index\": 17 },\n    { \"element\": \"FIW\", \"index\": 18 },\n    { \"element\": \"FNCL\", \"index\": 19 },\n    { \"element\": \"FNX\", \"index\": 20 },\n    { \"element\": \"FREL\", \"index\": 21 },\n    { \"element\": \"FSTA\", \"index\": 22 },\n    { \"element\": \"FTA\", \"index\": 23 },\n    { \"element\": \"FTCS\", \"index\": 24 },\n    { \"element\": \"FTEC\", \"index\": 25 },\n    { \"element\": \"FUTY\", \"index\": 26 },\n    { \"element\": \"FXG\", \"index\": 27 },\n    { \"element\": \"FXH\", \"index\": 28 },\n    { \"element\": \"FXL\", \"index\": 29 },\n    { \"element\": \"FXU\", \"index\": 30 },\n    { \"element\": \"GSLC\", \"index\": 31 },\n    { \"element\": \"GUSH\", \"index\": 32 },\n    { \"element\": \"IAT\", \"index\": 33 },\n    { \"element\": \"IBB\", \"index\": 34 },\n    { \"element\": \"ICF\", \"index\": 35 },\n    { \"element\": \"IDU\", \"index\": 36 },\n    { \"element\": \"IEV\", \"index\": 37 },\n    { \"element\": \"IGE\", \"index\": 38 },\n    { \"element\": \"IGM\", \"index\": 39 },\n    { \"element\": \"IGV\", \"index\": 40 },\n    { \"element\": \"IHE\", \"index\": 41 },\n    { \"element\": \"IHF\", \"index\": 42 },\n    { \"element\": \"IHI\", \"index\": 43 },\n    { \"element\": \"IJH\", \"index\": 44 },\n    { \"element\": \"IJJ\", \"index\": 45 },\n    { \"element\": \"IJK\", \"index\": 46 },\n    { \"element\": \"IJR\", \"index\": 47 },\n    { \"element\": \"IJS\", \"index\": 48 },\n    { \"element\": \"IJT\", \"index\": 49 },\n    { \"element\": \"ITA\", \"index\": 50 },\n    { \"element\": \"ITB\", \"index\": 51 },\n    { \"element\": \"IUSG\", \"index\": 52 },\n    { \"element\": \"IUSV\", \"index\": 53 },\n    { \"element\": \"IVE\", \"index\": 54 },\n    { \"element\": \"IVOG\", \"index\": 55 },\n    { \"element\": \"IVOO\", \"index\": 56 },\n    { \"element\": \"IVV\", \"index\": 57 },\n    { \"element\": \"IVW\", \"index\": 58 },\n    { \"element\": \"IWP\", \"index\": 59 },\n    { \"element\": \"IWS\", \"index\": 60 },\n    { \"element\": \"IYC\", \"index\": 61 },\n    { \"element\": \"IYE\", \"index\": 62 },\n    { \"element\": \"IYF\", \"index\": 63 },\n    { \"element\": \"IYG\", \"index\": 64 },\n    { \"element\": \"IYH\", \"index\": 65 },\n    { \"element\": \"IYJ\", \"index\": 66 },\n    { \"element\": \"IYK\", \"index\": 67 },\n    { \"element\": \"IYM\", \"index\": 68 },\n    { \"element\": \"IYR\", \"index\": 69 },\n    { \"element\": \"IYT\", \"index\": 70 },\n    { \"element\": \"IYW\", \"index\": 71 },\n    { \"element\": \"IYZ\", \"index\": 72 },\n    { \"element\": \"JKD\", \"index\": 73 },\n    { \"element\": \"JKE\", \"index\": 74 },\n    { \"element\": \"JNUG\", \"index\": 75 },\n    { \"element\": \"KBE\", \"index\": 76 },\n    { \"element\": \"KBWB\", \"index\": 77 },\n    { \"element\": \"KIE\", \"index\": 78 },\n    { \"element\": \"KRE\", \"index\": 79 },\n    { \"element\": \"LABU\", \"index\": 80 },\n    { \"element\": \"MDY\", \"index\": 81 },\n    { \"element\": \"MDYG\", \"index\": 82 },\n    { \"element\": \"MDYV\", \"index\": 83 },\n    { \"element\": \"MGC\", \"index\": 84 },\n    { \"element\": \"MGK\", \"index\": 85 },\n    { \"element\": \"MGV\", \"index\": 86 },\n    { \"element\": \"MLPA\", \"index\": 87 },\n    { \"element\": \"MLPX\", \"index\": 88 },\n    { \"element\": \"MTUM\", \"index\": 89 },\n    { \"element\": \"NAIL\", \"index\": 90 },\n    { \"element\": \"NOBL\", \"index\": 91 },\n    { \"element\": \"NUGT\", \"index\": 92 },\n    { \"element\": \"OEF\", \"index\": 93 },\n    { \"element\": \"OIH\", \"index\": 94 },\n    { \"element\": \"PBW\", \"index\": 95 },\n    { \"element\": \"PEJ\", \"index\": 96 },\n    { \"element\": \"PEY\", \"index\": 97 },\n    { \"element\": \"PHO\", \"index\": 98 },\n    { \"element\": \"PJP\", \"index\": 99 },\n    { \"element\": \"PNQI\", \"index\": 100 },\n    { \"element\": \"PPA\", \"index\": 101 },\n    { \"element\": \"PSCH\", \"index\": 102 },\n    { \"element\": \"PSCT\", \"index\": 103 },\n    { \"element\": \"PSI\", \"index\": 104 },\n    { \"element\": \"PSJ\", \"index\": 105 },\n    { \"element\": \"PTH\", \"index\": 106 },\n    { \"element\": \"PWB\", \"index\": 107 },\n    { \"element\": \"PWV\", \"index\": 108 },\n    { \"element\": \"QLD\", \"index\": 109 },\n    { \"element\": \"QQQ\", \"index\": 110 },\n    { \"element\": \"QTEC\", \"index\": 111 },\n    { \"element\": \"REM\", \"index\": 112 },\n    { \"element\": \"REZ\", \"index\": 113 },\n    { \"element\": \"RHS\", \"index\": 114 },\n    { \"element\": \"ROM\", \"index\": 115 },\n    { \"element\": \"RPV\", \"index\": 116 },\n    { \"element\": \"RSP\", \"index\": 117 },\n    { \"element\": \"RWL\", \"index\": 118 },\n    { \"element\": \"RWR\", \"index\": 119 },\n    { \"element\": \"RYH\", \"index\": 120 },\n    { \"element\": \"RYT\", \"index\": 121 },\n    { \"element\": \"RYU\", \"index\": 122 },\n    { \"element\": \"SCHD\", \"index\": 123 },\n    { \"element\": \"SCHG\", \"index\": 124 },\n    { \"element\": \"SCHH\", \"index\": 125 },\n    { \"element\": \"SCHM\", \"index\": 126 },\n    { \"element\": \"SCHV\", \"index\": 127 },\n    { \"element\": \"SCHX\", \"index\": 128 },\n    { \"element\": \"SKYY\", \"index\": 129 },\n    { \"element\": \"SLY\", \"index\": 130 },\n    { \"element\": \"SLYG\", \"index\": 131 },\n    { \"element\": \"SLYV\", \"index\": 132 },\n    { \"element\": \"SMH\", \"index\": 133 },\n    { \"element\": \"SOXL\", \"index\": 134 },\n    { \"element\": \"SOXX\", \"index\": 135 },\n    { \"element\": \"SPLG\", \"index\": 136 },\n    { \"element\": \"SPLV\", \"index\": 137 },\n    { \"element\": \"SPMD\", \"index\": 138 },\n    { \"element\": \"SPSM\", \"index\": 139 },\n    { \"element\": \"SPXU\", \"index\": 140 },\n    { \"element\": \"SPY\", \"index\": 141 },\n    { \"element\": \"SPYD\", \"index\": 142 },\n    { \"element\": \"SPYG\", \"index\": 143 },\n    { \"element\": \"SPYV\", \"index\": 144 },\n    { \"element\": \"SRVR\", \"index\": 145 },\n    { \"element\": \"SSO\", \"index\": 146 },\n    { \"element\": \"SUSA\", \"index\": 147 },\n    { \"element\": \"SUSL\", \"index\": 148 },\n    { \"element\": \"TDIV\", \"index\": 149 },\n    { \"element\": \"TECL\", \"index\": 150 },\n    { \"element\": \"TQQQ\", \"index\": 151 },\n    { \"element\": \"USMV\", \"index\": 152 },\n    { \"element\": \"USSG\", \"index\": 153 },\n    { \"element\": \"VAW\", \"index\": 154 },\n    { \"element\": \"VBK\", \"index\": 155 },\n    { \"element\": \"VCR\", \"index\": 156 },\n    { \"element\": \"VDC\", \"index\": 157 },\n    { \"element\": \"VDE\", \"index\": 158 },\n    { \"element\": \"VFH\", \"index\": 159 },\n    { \"element\": \"VGT\", \"index\": 160 },\n    { \"element\": \"VHT\", \"index\": 161 },\n    { \"element\": \"VIOO\", \"index\": 162 },\n    { \"element\": \"VIS\", \"index\": 163 },\n    { \"element\": \"VLUE\", \"index\": 164 },\n    { \"element\": \"VNQ\", \"index\": 165 },\n    { \"element\": \"VO\", \"index\": 166 },\n    { \"element\": \"VOE\", \"index\": 167 },\n    { \"element\": \"VOO\", \"index\": 168 },\n    { \"element\": \"VOOG\", \"index\": 169 },\n    { \"element\": \"VOOV\", \"index\": 170 },\n    { \"element\": \"VOT\", \"index\": 171 },\n    { \"element\": \"VOX\", \"index\": 172 },\n    { \"element\": \"VPU\", \"index\": 173 },\n    { \"element\": \"VTV\", \"index\": 174 },\n    { \"element\": \"VUG\", \"index\": 175 },\n    { \"element\": \"VV\", \"index\": 176 },\n    { \"element\": \"XAR\", \"index\": 177 },\n    { \"element\": \"XBI\", \"index\": 178 },\n    { \"element\": \"XHB\", \"index\": 179 },\n    { \"element\": \"XHE\", \"index\": 180 },\n    { \"element\": \"XLB\", \"index\": 181 },\n    { \"element\": \"XLC\", \"index\": 182 },\n    { \"element\": \"XLE\", \"index\": 183 },\n    { \"element\": \"XLF\", \"index\": 184 },\n    { \"element\": \"XLI\", \"index\": 185 },\n    { \"element\": \"XLK\", \"index\": 186 },\n    { \"element\": \"XLP\", \"index\": 187 },\n    { \"element\": \"XLRE\", \"index\": 188 },\n    { \"element\": \"XLU\", \"index\": 189 },\n    { \"element\": \"XLV\", \"index\": 190 },\n    { \"element\": \"XLY\", \"index\": 191 },\n    { \"element\": \"XME\", \"index\": 192 },\n    { \"element\": \"XMLV\", \"index\": 193 },\n    { \"element\": \"XMMO\", \"index\": 194 },\n    { \"element\": \"XNTK\", \"index\": 195 },\n    { \"element\": \"XOP\", \"index\": 196 },\n    { \"element\": \"XRT\", \"index\": 197 },\n    { \"element\": \"XSD\", \"index\": 198 },\n    { \"element\": \"XSLV\", \"index\": 199 },\n];","import React, { useEffect } from \"react\";\nimport {\n  Nav,\n  Navbar,\n  Form,\n  NavDropdown,\n  FormControl,\n  Button,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeNavbarStartDate, changeNavbarEtfName } from \"./NavBarActions\";\nimport Select from \"react-dropdown-select\";\nimport { etfSelectOptions } from \"./etfSelectOptions\";\nimport AuthContext from \"../../Utilities/AuthContext\";\n\nconst NavBarMain = (props) => {\n  const { logout } = useContext(AuthContext);\n  const params = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { ETF, startDate } = useSelector((state) => state.navbar);\n\n  // useEffect(() => {\n  //   const routeName = location.pathname.split(\"/\");\n  //   console.log(ETF)\n  //   if (routeName[1] === \"ETF-Description\") {\n  //     const etfName = routeName[2] ? routeName[2].toUpperCase() : \"XLK\";\n  //     if (etfName !== ETF || routeName[3] !== startDate) {\n  //       console.log(etfName, ETF)\n  //       history.push(`/ETF-Description/${ETF}/${startDate}`);\n  //     }\n  //   }\n  //   if (routeName[1] === \"historical-arbitrage\") {\n  //     const etfName = routeName[2] ? routeName[2].toUpperCase() : \"XLK\";\n  //     if (etfName !== ETF || routeName[3] !== startDate) {\n  //       // history.push(`/historical-arbitrage/${ETF}/${startDate}`);\n  //     }\n  //   }\n  // }, [ETF, startDate]);\n\n  useEffect(() => {\n    const routeName = location.pathname.split(\"/\");\n\n    if (routeName[1] === \"ETF-Description\") {\n      const etfName = routeName[2] ? routeName[2].toUpperCase() : \"XLK\";\n      if (etfName !== ETF || routeName[3] !== startDate) {\n        dispatch({\n          type: changeNavbarEtfName,\n\n          payload: { value: etfName },\n        });\n        dispatch({\n          type: changeNavbarStartDate,\n          payload: { value: routeName[3] },\n        });\n      }\n    }\n    if (routeName[1] === \"historical-arbitrage\") {\n      const etfName = routeName[2] ? routeName[2].toUpperCase() : \"XLK\";\n      if (etfName !== ETF || routeName[3] !== startDate) {\n        dispatch({\n          type: changeNavbarEtfName,\n\n          payload: { value: etfName },\n        });\n        dispatch({\n          type: changeNavbarStartDate,\n          payload: { value: routeName[3] },\n        });\n      }\n    }\n    if (routeName[1] === \"live-arbitrage-single\") {\n      const etfName = routeName[2] ? routeName[2].toUpperCase() : \"XLK\";\n      if (etfName !== ETF) {\n        dispatch({\n          type: changeNavbarEtfName,\n\n          payload: { value: etfName },\n        });\n      }\n    }\n  }, [location]);\n\n  const handleDateChange = (e) => {\n    const date = moment(e.target.value, \"YYYY-MM-DD\").format(\"YYYYMMDD\");\n    dispatch({ type: changeNavbarStartDate, payload: { value: date } });\n  };\n\n  const handleEtfChange = (ETF) =>\n    dispatch({ type: changeNavbarEtfName, payload: { value: ETF[0].element } });\n\n  return (\n    <Navbar className=\"bg-color-dark\" variant=\"dark\" expand=\"lg\">\n      {/* <Navbar.Brand href=\"#home\">Etf-Analyzer</Navbar.Brand> */}\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link\n            style={{ color: \"white\" }}\n            as={Link}\n            to=\"/ETF-Description\"\n            eventKey=\"ETF-Description\"\n          >\n            ETF-Description\n          </Nav.Link>\n          <Nav.Link\n            style={{ color: \"white\" }}\n            as={Link}\n            to=\"/historical-arbitrage\"\n            eventKey=\"Historical\"\n          >\n            Historical Arbitrage\n          </Nav.Link>\n          <Nav.Link\n            style={{ color: \"white\" }}\n            as={Link}\n            to=\"/live-arbitrage-single\"\n            eventKey=\"Live-Arbitrage\"\n          >\n            Live-Arbitrage (Focus)\n          </Nav.Link>\n          <Nav.Link\n            style={{ color: \"white\" }}\n            as={Link}\n            to=\"/Live-Arbitrage\"\n            eventKey=\"Live-Arbitrage\"\n          >\n            Live-Arbitrage\n          </Nav.Link>\n        </Nav>\n        <Select\n          style={{\n            color: \"black\",\n            width: \"150px\",\n            marginRight: \"20px\",\n            backgroundColor: \"white\",\n          }}\n          values={[{ element: `${ETF}`, index: 0 }]}\n          placeholder=\"Select ETFs\"\n          labelField={\"element\"}\n          valueField={\"element\"}\n          options={etfSelectOptions}\n          onChange={handleEtfChange}\n          noDataLabel=\"No matches found\"\n        />\n\n        <span>&nbsp;&nbsp;</span>\n        <Form inline>\n          <FormControl\n            value={moment(startDate, \"YYYYMMDD\").format(\"YYYY-MM-DD\")}\n            type=\"date\"\n            placeholder=\"Start Date\"\n            className=\"mr-sm-2\"\n            onChange={handleDateChange}\n          />\n        </Form>\n        <Button\n          variant=\"primary\"\n          type=\"button\"\n          onClick={() => {\n            logout();\n            history.push(\"/login\");\n          }}\n        >\n          Log Out\n        </Button>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBarMain;\n","export const changeNavbarEtfName = \"CHANGE_NAVBAR_ETF_NAME\";\nexport const changeNavbarStartDate = \"CHANGE_NAVBAR_START_DATE\";\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst EtfArbitrageTable = (props) => {\n  if (props.data == {} || props.data == undefined) {\n    return \"Loading\";\n  }\n\n  const { data } = props;\n\n  const getKeys = function (someJSON) {\n    return Object.keys(someJSON);\n  };\n\n  const getRowsData = () => {\n    var Time = getKeys(props.data.Time);\n\n    return Time.map((key, index) => {\n      //console.log(key);\n      let cls = \"\";\n      if (props.data[\"Over Bought/Sold\"][key] == \"Over Bought\") {\n        cls = \"Green\";\n      } else if (props.data[\"Over Bought/Sold\"][key] == \"Over Sold\") {\n        cls = \"Red\";\n      } else {\n        cls = \"\";\n      }\n      return (\n        <tr key={index}>\n          <td className={cls}>{props.data[\"Time\"][key]}</td>\n          <td className={cls}>{props.data[\"Arbitrage in $\"][key]}</td>\n          <td className={cls}>{props.data[\"$Spread\"][key]}</td>\n          <td className={cls}>{props.data[\"Absolute Arbitrage\"][key]}</td>\n          <td className={cls}>{props.data[\"Over Bought/Sold\"][key]}</td>\n          <td>{props.data[\"ETFMover%1_ticker\"][key]}</td>\n          <td>{props.data[\"Change%1_ticker\"][key]}</td>\n          <td>{props.data[\"T\"][key]}</td>\n          <td>{props.data[\"T+1\"][key]}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <Table\n      size=\"sm\"\n      striped\n      bordered\n      hover\n      variant=\"dark\"\n      className=\"font-size-sm\"\n    >\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>$Arbitrage</th>\n          <th>$Spread</th>\n          <th>$Absolute Arbitrage</th>\n          <th>Over Bought/Sold</th>\n          <th>Etf Mover</th>\n          <th>Most Change%</th>\n          <th>T</th>\n          <th>T+1</th>\n        </tr>\n      </thead>\n      <tbody>{getRowsData()}</tbody>\n    </Table>\n  );\n};\n\nexport default EtfArbitrageTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { escapeRegExp } from \"lodash\";\nimport orderBy from \"lodash/orderBy\";\n\nimport \"./Styles/arbitrage.css\";\n\nconst DailyChangeUnderlyingFunc = (props) => {\n  console.log(props);\n  const DailyChangeUnderlying = props.data;\n  console.log(DailyChangeUnderlying);\n  return (\n      <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" >\n                Ticker\n              </th>\n              <th>Daily Change %</th>\n              <th>Volume</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof DailyChangeUnderlying === \"object\"  &&\n              DailyChangeUnderlying.data.map(\n                ({ symbol, DailyChangepct, volume }, index) => (\n                  <tr key={`symbol${index}`}>\n                    <td>{symbol && symbol}</td>\n                    <td>{DailyChangepct && DailyChangepct}</td>\n                    <td>{volume && volume}</td>\n                  </tr>\n                )\n              )}\n          </tbody>\n        </Table>\n   );\n};\n\nexport default DailyChangeUnderlyingFunc;\n","import React, { useState } from \"react\";\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Brush, Legend, ResponsiveContainer} from 'recharts';\n\n\nconst LineChartForHistArb = (props) => {\n  const { data } = props;\n  console.log(\"Kshitiz\");\n  console.log(props);\n  return (\n    <ResponsiveContainer width=\"100%\" height={280} padding={{ top: 0, right: 0, left: 0, bottom: 0 }}>\n      <LineChart data={data}>\n        <XAxis className=\"recharts-cartesian-axis-tick\" dataKey=\"Time\" />\n        <YAxis className=\"recharts-cartesian-axis-tick\" />\n        <Tooltip />\n        <Legend />\n        <Brush dataKey='Time' height={30} stroke=\"#8884d8\"/>\n        <Line type=\"monotone\" dataKey=\"Arbitrage in $\" stroke=\"#8884d8\" dot={false} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default LineChartForHistArb;\n","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tAreaSeries,\n\tCandlestickSeries,\n\tLineSeries,\n\tMACDSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tMACDTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, macd, sma } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\n\nimport { LabelAnnotation,Annotate, Label } from \"react-stockcharts/lib/annotation\";\n\nconst macdAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfill: {\n\t\tdivergence: \"#4682B4\"\n\t},\n};\n\nconst mouseEdgeAppearance = {\n\ttextFill: \"#542605\",\n\tstroke: \"#05233B\",\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tarrowWidth: 5,\n\tfill: \"#BCDEFA\",\n};\n\n\nclass CandleStickChartWithMACDIndicator extends React.Component {\n\trender() {\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst smaVolume50 = sma()\n\t\t\t.id(3)\n\t\t\t.options({\n\t\t\t\twindowSize: 50,\n\t\t\t\tsourcePath: \"volume\",\n\t\t\t})\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\n\t\t\t.accessor(d => d.smaVolume50);\n\n\t\tconst calculatedData = smaVolume50(macdCalculator(ema12(ema26(initialData))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst longAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"green\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D1\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.low),\n\t\t};\n\n\t\tconst shortAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"red\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D3\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.high),\n\t\t};\n\n\t\treturn (\n\t\t\t<ChartCanvas height={600}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 20, bottom: 30 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t>\n\t\t\t\t<Chart id={1} height={400}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema26.accessor(), ema12.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<LineSeries yAccessor={ema26.accessor()} stroke={ema26.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()}/>\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema26.accessor()} fill={ema26.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema12.accessor()} fill={ema12.stroke()} />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close}\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#A2F5BF\" : \"#F9ACAA\"}\n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#0B4228\" : \"#6A1B19\"}\n\t\t\t\t\t\ttextFill={d => d.close > d.open ? \"#0B4228\" : \"#420806\"}\n\t\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\tarrowWidth={2}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema26.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema26.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema26.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema12.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema12.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema12.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Sold\"}\n\t\t\t\t\t\tusingProps={longAnnotationProps} />\n\t\t\t\t\t\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Bought\"}\n\t\t\t\t\t\tusingProps={shortAnnotationProps} />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2} height={150}\n\t\t\t\t\tyExtents={[d => d.volume, smaVolume50.accessor()]}\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={3} height={150}\n\t\t\t\t\tyExtents={macdCalculator.accessor()}\n\t\t\t\t\torigin={(w, h) => [0, h - 150]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={2} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")}\n\t\t\t\t\t\trectRadius={5}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<MACDSeries yAccessor={d => d.macd}\n\t\t\t\t\t\t{...macdAppearance} />\n\t\t\t\t\t<MACDTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.macd}\n\t\t\t\t\t\toptions={macdCalculator.options()}\n\t\t\t\t\t\tappearance={macdAppearance}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor stroke=\"#FFFFFF\" />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithMACDIndicator.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithMACDIndicator.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithMACDIndicator = fitWidth(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithMACDIndicator;\n","\nimport React from \"react\";\n\nfunction getDisplayName(ChartComponent) {\n\tconst name = ChartComponent.displayName || ChartComponent.name || \"ChartComponent\";\n\treturn name;\n}\n\nexport default function updatingDataWrapper(ChartComponent) {\n\tconst LENGTH = 130;\n\n\tclass UpdatingComponentHOC extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tlength: LENGTH,\n\t\t\t\tdata: this.props.data.slice(0, LENGTH),\n\t\t\t};\n\t\t\tthis.speed = 1000;\n\t\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t\t}\n\t\tcomponentDidMount() {\n\t\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tcomponentWillUnmount() {\n\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tonKeyPress(e) {\n\t\t\tconst keyCode = e.which;\n\t\t\tconsole.log(keyCode);\n\t\t\tswitch (keyCode) {\n\t\t\tcase 50: {\n\t\t\t\t\t// 2 (50) - Start alter data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 80:\n\t\t\t\t\t// P (80)\n\t\t\tcase 49: {\n\t\t\t\t\t// 1 (49) - Start Push data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 27: {\n\t\t\t\t\t// ESC (27) - Clear interval\n\t\t\t\tthis.func = null;\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 107: {\n\t\t\t\t\t// + (107) - increase the this.speed\n\t\t\t\tthis.speed = Math.max(this.speed / 2, 50);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 109:\n\t\t\tcase 189: {\n\t\t\t\t\t// - (189, 109) - reduce the this.speed\n\t\t\t\tconst delta = Math.min(this.speed, 1000);\n\t\t\t\tthis.speed = this.speed + delta;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t\tif (this.func) {\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tconsole.log(\"this.speed  = \", this.speed);\n\t\t\t\tthis.interval = setInterval(this.func, this.speed);\n\t\t\t}\n\t\t}\n\t\trender() {\n\t\t\tconst { type } = this.props;\n\t\t\tconst { data } = this.state;\n\n\t\t\treturn <ChartComponent ref=\"component\" data={data} type={type} />;\n\t\t}\n\t}\n\tUpdatingComponentHOC.defaultProps = {\n\t\ttype: \"svg\",\n\t};\n\tUpdatingComponentHOC.displayName = `updatingDataWrapper(${ getDisplayName(ChartComponent) })`;\n\n\treturn UpdatingComponentHOC;\n}","\nimport CandleStickChartWithMACDIndicator from \"./CandleStickChartWithMACDIndicator\";\nimport updatingDataWrapper from \"./updatingDataWrapper\";\n\nconst CandleStickChartWithUpdatingData = updatingDataWrapper(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithUpdatingData;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Chart from './StockCharts/Chart';\nimport CandleStickChartWithMACDIndicator from './StockCharts/CandleStickChartWithMACDIndicator';\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nclass ChartComponent extends React.Component {\n\t\n\tstate={\n\t\tdata: this.props.data,\n\t\tdidupdate:false\n\t}\n\t\n\tshouldComponentUpdate(nextProps) {\n\t  // You don't have to do this check first, but it can help prevent an unneeded render\n\t  \tif (nextProps.data.data !== this.state.data && nextProps.data.data!==undefined) {\n\t\t\tvar DataCopy =  this.state.data;\n\t  \t\tDataCopy = nextProps.data.data;\n\t  \t\tthis.setState({ \n\t  \t\t\tdata:DataCopy,\n\t  \t\t\tdidupdate:true\n\t  \t\t});\n\t  \t\treturn true\n\t  \t}\n\t  \treturn false\n\t}\n\n\trender() {\n\t\tif (this.state.data == '') {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\t\tif (this.state.didupdate){\n\t\t\tconsole.log(this.state.data);\n\t\t\treturn (\n\t\t\t<CandleStickChartWithMACDIndicator data={this.state.data} />\n\t\t\t)\t\n\t\t\tthis.state.didupdate=false;\n\t\t}\n\t}\n}\n\nexport default ChartComponent;","import React, { useState } from \"react\";\nimport { Button, Modal, Row, Card, Col } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../Common_Components/PieChart\";\n\nconst CombinedPieCharts = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  console.log(props);\n  return (\n    <>\n      <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\n        Etf Movers\n      </Button>\n\n      <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Underlying Holdings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col xs={12} md={12}>\n              <Card>\n                <Card.Header className=\"CustomCardHeader text-white CustomBackGroundColor\">\n                  Holdings\n                </Card.Header>\n                <Card.Body className=\"CustomCardBody text-white\">\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Etf Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.etfmoversDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Market Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.highestChangeDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CombinedPieCharts;\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../static/css/TableStyle.css'\r\n\r\nvar stringConstructor = \"test\".constructor;\r\nvar arrayConstructor = [].constructor;\r\nvar objectConstructor = ({}).constructor;\r\n\r\nfunction whatIsIt(object) {\r\n  if (object === null) {\r\n    return \"null\";\r\n  }\r\n  if (object === undefined) {\r\n    return \"undefined\";\r\n  }\r\n  if (object.constructor === stringConstructor) {\r\n    return \"String\";\r\n  }\r\n  if (object.constructor === arrayConstructor) {\r\n    return \"Array\";\r\n  }\r\n  if (object.constructor === objectConstructor) {\r\n    return \"Object\";\r\n  }\r\n  return \"don't know\";\r\n}\r\n\r\nconst AppTable = (props) => {\r\n  // getting all te keys to the json data to diectly fetch the data later\r\n  const getKeys = function(someJSON){\r\n    return Object.keys(someJSON);\r\n  }\r\n\r\n  const MainKeys = getKeys(props.data);\r\n  \r\n  // getting the headings for the heading of the table\r\n  const getHeader = function(){\r\n    // console.log(whatIsIt(props.data[MainKeys[0]]));\r\n    var keys = (whatIsIt(props.data[MainKeys[0]]) === \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    keys.unshift(\"\");\r\n    // console.log(keys);\r\n    return keys.map((key, index)=>{\r\n      // console.log(key);\r\n      return <th key={key}>{key}</th>\r\n    })\r\n  }\r\n  \r\n  // getting data for each of the rows\r\n  const getRowsData = function(){\r\n    // var keys = (whatIsIt(props.data[MainKeys[0]]) != \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    return MainKeys.map((Key1, index) => {\r\n      var row = (typeof(props.data[Key1]) == Object) ? props.data[Key1].values() : props.data[Key1];\r\n      // console.log(row);\r\n    \r\n      if (props.clickableTable=='True'){\r\n        //console.log(\"Clickable was called\");\r\n        return <RenderRowClickable k={Key1} key={index} data={row} submitFn={props.submitFn}/>\r\n      } else{\r\n        //console.log(\"None-Clickable was called\");\r\n        return <RenderRow k={Key1} key={index} data={row} />\r\n      }\r\n    }) \r\n  }\r\n  \r\n  const TableStyling = {\r\n    fontSize: '13px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n      <Table size=\"sm\" striped bordered hover variant=\"dark\" style={TableStyling}>\r\n      <thead className=\"TableHead\">\r\n        <tr>{getHeader()}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {getRowsData()}\r\n      </tbody>\r\n      </Table>\r\n    </div>          \r\n  );\r\n}\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRow = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRowClickable = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr onClick={() => props.submitFn(props.k)}>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppTable","\nimport React from 'react';\nimport {ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\nclass ScatterPlot extends React.Component {\n  \n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n        <ScatterChart width={550} height={260}>\n          <CartesianGrid />\n          <XAxis stroke=\"#58FF33\" dataKey={'Net Asset Value Change%'} type=\"number\" name='Net Asset Value Chage %' unit='%'/>\n          <YAxis stroke=\"#58FF33\" dataKey={'ETF Change Price %'} type=\"number\" name='ETF Change Price %' unit='%'/>\n          <Scatter name='A school' data={this.props.data} fill='#3336FF'/>\n          <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n        </ScatterChart>\n      );\n      \n  }\n}\n\nexport default ScatterPlot;","import React from \"react\";\nimport Axios from \"axios\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Table from \"react-bootstrap/Table\";\n// Code to display chaer\nimport { tsvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport \"./Styles/arbitrage.css\";\nimport EtfArbitrageTable from \"./EtfArbitrageTable\";\n\nimport DailyChangeUnderlyingFunc from \"./DailyChangeUnderlying\";\n\nimport LineChartForHistArb from \"../../Component/LineChartForHistArb\";\nimport ChartComponent from \"../../Component/StockPriceChart\";\nimport CombinedPieCharts from \"../../Component/CombinedPieCharts\";\nimport AppTable from \"../../Component/Table\";\nimport ScatterPlot from \"../../Component/ScatterPlot\";\nimport { connect } from \"react-redux\";\nimport { Loader } from \"../../Common_Components/Loader\";\n\nclass HistoricalArbitrage extends React.Component {\n  state = {\n    etfArbitrageTableData: null,\n    historicalArbitrageData: \"\",\n    scatterPlotData: \"\",\n    etfmoversDictCount: null,\n    etfPriceData: \"\",\n    ArbitrageCumSum: \"\",\n    highestChangeDictCount: null,\n    isLoading: true,\n  };\n  parseDate = timeParse(\"%Y-%m-%d %H:%M:%S\");\n\n  parseData(parse) {\n    return function (d) {\n      d.date = parse(d.date);\n      d['Over Bought/Sold'] = d['Over Bought/Sold'];\n      d.open = +parseFloat(d.open);\n      d.high = +parseFloat(d.high);\n      d.low = +parseFloat(d.low);\n      d.close = +parseFloat(d.close);\n      d.volume = +parseInt(d.volume);\n\n      return d;\n    };\n  }\n\n  fetchData = (ETF, startDate) => {\n    if (ETF && startDate) {\n      Axios.get(`/PastArbitrageData/${ETF}/${startDate}`)\n        .then(({ data }) =>\n          this.setState({\n            etfArbitrageTableData: JSON.parse(data.etfhistoricaldata),\n            PNLStatementForTheDay: JSON.parse(data.PNLStatementForTheDay),\n            etfPriceData: {\n              data: tsvParse(data.etfPrices, this.parseData(this.parseDate)),\n            },\n            scatterPlotData: JSON.parse(data.scatterPlotData),\n            etfmoversDictCount: JSON.parse(data.etfmoversDictCount),\n            highestChangeDictCount: JSON.parse(data.highestChangeDictCount),\n            SignalCategorization: (\n              <AppTable data={JSON.parse(data.SignalCategorization)} />\n            ),\n            ArbitrageCumSum: data.ArbitrageCumSum,\n            isLoading: false,\n          })\n        )\n        .then((err) => console.log(err));\n    }\n  };\n\n  etfUnderlyingPerformance = (ETF, startDate) => {\n    if (ETF && startDate) {\n      Axios.get(`/PastArbitrageData/DailyChange/${ETF}/${startDate}`).then(\n        (res) => {\n          console.log(res);\n          this.setState({\n            underlyingPerformance: res,\n          });\n        }\n      );\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    const { startDate, ETF } = this.props;\n    if (prevProps.ETF !== ETF || prevProps.startDate !== startDate) {\n      this.state.isLoading = true;\n      this.fetchData(ETF, startDate);\n      this.etfUnderlyingPerformance(ETF, startDate);\n    }\n  }\n\n  componentDidMount() {\n    const { ETF, startDate } = this.props;\n    this.state.isLoading = true;\n    this.fetchData(ETF, startDate);\n    this.etfUnderlyingPerformance(ETF, startDate);\n  }\n\n  render() {\n    const { ETF, startDate } = this.props.match.params;\n    return (\n      <div>\n        <Row>\n          <Col className=\"etfArbitrageTable\" xs={12} md={5}>\n            <Card>\n              <Card.Header className=\" text-white bg-color-dark flex-row\">\n                <span>\n                  Histortical Data {this.props.ETF} {this.props.startDate}\n                </span>\n\n                <div className=\"margin-left-auto\">\n                  <CombinedPieCharts\n                    etfmoversDictCount={this.state.etfmoversDictCount}\n                    highestChangeDictCount={this.state.highestChangeDictCount}\n                  />\n                </div>\n              </Card.Header>\n              <Card.Body className=\"BlackHeaderForModal\">\n                {this.state.isLoading ? (\n                  <Loader />\n                ) : (\n                  <div className=\"FullPageDiv\">\n                    <EtfArbitrageTable\n                      data={this.state.etfArbitrageTableData}\n                    />\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col xs={12} md={7}>\n            <Row>\n              <Col xs={12} md={5}>\n                <Row>\n                  <Col xs={12} md={12}>\n                    <Card className=\"CustomCard\">\n                      <Card.Header className=\"CustomCardHeader text-white\">\n                        Arb Time Series\n                      </Card.Header>\n                      <Card.Body className=\"CustomCardBody text-white\">\n                        {this.state.isLoading ? (\n                          <Loader />\n                        ) : (\n                          <LineChartForHistArb\n                            data={this.state.ArbitrageCumSum}\n                          />\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </Col>\n\n                  <Col xs={12} md={12}>\n                    <Card className=\"CustomCard\">\n                      <Card.Header className=\"CustomCardHeader text-white\">\n                        Signal Performance\n                      </Card.Header>\n                      <Card.Body className=\"CustomCardBody text-white\">\n                        {this.state.isLoading ? (\n                          <Loader />\n                        ) : (\n                          <Table\n                            size=\"sm\"\n                            striped\n                            bordered\n                            hover\n                            variant=\"dark\"\n                            className=\"font-size-sm\"\n                          >\n                            <tbody>\n                              {typeof this.state.PNLStatementForTheDay ===\n                                \"object\" &&\n                                Object.entries(\n                                  this.state.PNLStatementForTheDay\n                                ).map(([key, value]) => (\n                                  <tr key={key}>\n                                    <td>{key}</td>\n                                    <td>{value}</td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                          </Table>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </Col>\n\n                  <Col xs={12} md={12}>\n                    <Card className=\"CustomCard\">\n                      <Card.Header className=\"CustomCardHeader text-white\">\n                        Signal Stats\n                      </Card.Header>\n                      <Card.Body className=\"CustomCardBody text-white\">\n                        {this.state.isLoading ? (\n                          <Loader />\n                        ) : (\n                          this.state.SignalCategorization\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </Col>\n\n                  <Col xs={12} md={12}>\n                      <Card className=\"CustomCard smallHeightTable\"> \n                        <Card.Header className=\"CustomCardHeader text-white CustomBackGroundColor\">\n                          Underlyings Daily Change\n                        </Card.Header>\n                        <Card.Body className=\"CustomCardBody padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n                        {this.state.isLoading ? (\n                            <Loader />\n                            ) : (\n                            <DailyChangeUnderlyingFunc data={this.state.underlyingPerformance}/>\n                            )}\n                        </Card.Body>\n                    </Card>\n                  </Col>\n                </Row>\n              </Col>\n\n              <Col xs={12} md={7}>\n                <Row>\n                  <Col xs={12} md={12}>\n                    <Card>\n                      <Card.Header className=\"modalCustomHeader text-white CustomBackGroundColor\">\n                        Price Chart\n                      </Card.Header>\n                      <Card.Body className=\"BlackHeaderForModal\">\n                        <ChartComponent data={this.state.etfPriceData} />\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                  <Col xs={12} md={12}>\n                    <Card className=\"CustomCard\">\n                      <Card.Header className=\"CustomCardHeader text-white\">\n                        ETF Change % Vs NAV change %\n                      </Card.Header>\n                      <Card.Body className=\"CustomCardBody text-white\">\n                        <ScatterPlot data={this.state.scatterPlotData} />\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ETF: state.navbar.ETF,\n    startDate: state.navbar.startDate,\n  };\n};\n\nexport default connect(mapStateToProps, null)(HistoricalArbitrage);\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { HistoricalArbitrage } from \"../Pages/Historical_Arbitrage\";\nimport { useSelector } from \"react-redux\";\n\nconst HistArbiageRoutes = () => {\n  const { ETF, startDate } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/historical-arbitrage/:ETF/:startDate\"\n        component={HistoricalArbitrage}\n      />\n      <Redirect\n        from=\"/historical-arbitrage\"\n        to={`/historical-arbitrage/${ETF}/${startDate}`}\n      />\n    </Switch>\n  );\n};\n\nexport default HistArbiageRoutes;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../../static/css/Live_Arbitrage.css\";\n\nconst LiveStatusWindow = (props) => {\n  return (\n    <Card className=\"CustomCard\">\n      <Card.Header className=\"CustomCardHeader text-white\">\n        <span className=\"h4 pull-left pr-2\"></span>\n        H: <span className=\"text-muted\">{props.HighPrice} </span>\n        O: <span className=\"text-muted\">{props.OpenPrice} </span>\n        C: <span className=\"text-muted\">{props.ClosePrice} </span>\n        L: <span className=\"text-muted\">{props.LowPrice} </span>\n        <div>\n          Time: <span className=\"text-muted\">{props.CurrentTime}</span>\n        </div>\n      </Card.Header>\n\n      <Card.Body className=\"CustomCardBody text-white\">\n        <div>\n          <h5>\n            <span className={props.LiveColor}>\n              ETF Status: {props.ETFStatus}\n            </span>\n          </h5>\n        </div>\n        <div>\n          <h5>\n            <span className={props.LiveColor}>Signal: {props.Signal}</span>\n          </h5>\n        </div>\n        <div>\n          <span className={props.LiveColor}>\n            Strength: {props.SignalStrength}\n          </span>\n        </div>\n\n        <div>\n          <span className=\"\">$ Arbitrage: {props.LiveArbitrage}</span>\n        </div>\n        <div>\n          <span className=\"\">$ Spread: {props.LiveSpread}</span>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LiveStatusWindow;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\n\nconst TableStyling = {\n  fontSize: \"13px\",\n};\n\nconst LiveArbitrageTable = (props) => {\n  \n  if (props.data[\"Arbitrage in $\"] == undefined) {\n    console.log(props.data);\n    return \"Loading\";\n  }\n  const getKeys = function (someJSON) {\n    return Object.keys(someJSON);\n  };\n\n  const getRowsData = () => {\n    var Time = getKeys(props.data.Time).reverse();\n    console.log(\"Time\");\n    console.log(Time);\n    return Time.map((key, index) => {\n      // console.log(key);\n      let cls = \"\";\n\n      if (props.data[\"Over Bought/Sold\"][key] == \"Over Bought\") {\n        cls = \"Green\";\n      } else if (props.data[\"Over Bought/Sold\"][key] == \"Over Sold\") {\n        cls = \"Red\";\n      } else {\n        cls = \"\";\n      }\n\n      return (\n        <tr key={index}>\n          <td className={cls}>{props.data[\"Time\"][key]}</td>\n          <td className={cls}>{props.data[\"Arbitrage in $\"][key]}</td>\n          <td className={cls}>{props.data[\"ETF Trading Spread in $\"][key]}</td>\n          <td className={cls}>{props.data['Magnitude of Arbitrage'][key]}</td>\n          <td className={cls}>{props.data['Over Bought/Sold'][key]}</td>\n          <td>{props.data['Price'][key]}</td>\n          <td>{props.data['ETF Change Price %'][key]}</td>\n          <td>{props.data[\"TickVolume\"][key]}</td>\n          <td>{props.data[\"ETFMover%1_ticker\"][key]}</td>\n          <td>{props.data[\"Change%1_ticker\"][key]}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className=\"Table\">\n      <Table\n        size=\"sm\"\n        striped\n        bordered\n        hover\n        variant=\"dark\"\n        style={TableStyling}\n      >\n        <thead className=\"TableHead\">\n          <tr>\n            <td>Time</td>\n            <td>$Arbitrage</td>\n            <td>$Spread</td>\n            <td>$Absolute Arbitrage</td>\n            <td>Over Bought/Sold</td>\n            <td>Price</td>\n            <td>T</td>\n            <td>TickVolume</td>\n            <th>Etf Mover</th>\n            <th>Most Change%</th>\n          </tr>\n        </thead>\n        <tbody>{getRowsData()}</tbody>\n      </Table>\n    </div>\n  );\n};\n\n\nexport default LiveArbitrageTable;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport { tsvParse, csvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport Card from \"react-bootstrap/Card\";\nimport ChartComponent from \"../../Component/StockPriceChart\";\nimport ScatterPlot from \"../../Component/ScatterPlot\";\nimport AppTable from \"../../Component/Table.js\";\nimport LiveStatusWindow from \"./LiveStatusWindow\";\nimport \"../../static/css/Live_Arbitrage.css\";\nimport { connect } from \"react-redux\";\n\nimport CombinedPieCharts from \"../../Component/CombinedPieCharts\";\nimport LiveArbitrageTable from \"./LiveArbitrageTable\";\nimport LineChartForHistArb from \"../../Component/LineChartForHistArb\";\nimport { Loader } from \"../../Common_Components/Loader\";\n\nclass Live_Arbitrage_Single extends React.Component {\n  state = {\n    Full_Day_Arbitrage_Data: {},\n    Full_Day_Prices: \"\",\n    scatterPlotData: \"\",\n    LiveArbitrage: \"\",\n    LiveSpread: \"\",\n    // Prices\n    LiveVWPrice: \"\",\n    OpenPrice: \"\",\n    ClosePrice: \"\",\n    HighPrice: \"\",\n    LowPrice: \"\",\n    parseDate: timeParse(\"%Y-%m-%d %H:%M:%S\"),\n    CurrentTime: \"\",\n    // Signal\n    ETFStatus: \"\",\n    Signal: \"\",\n    SignalStrength: \"\",\n    pnlstatementforday: \"\",\n    LiveColor: \"\",\n    ArbitrageLineChart: \"\",\n    etfmoversDictCount: \"\",\n    highestChangeDictCount: \"\",\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.state.isLoading = true;\n    this.fetchETFLiveData();\n    this.UpdateArbitragDataTables(false);\n    this.intervalId = this.dataFetchInterval();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.ETF !== this.props.ETF) {\n      this.state.isLoading = true;\n      clearInterval(this.intervalId);\n      this.fetchETFLiveData();\n      this.UpdateArbitragDataTables(false);\n      this.intervalId = this.dataFetchInterval();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  dataFetchInterval = () =>\n    setInterval(() => {\n      if (new Date().getSeconds() == 8) {\n        this.UpdateArbitragDataTables(true);\n        this.fetchETFLiveData();\n      }\n    }, 1000);\n\n  fetchETFLiveData() {\n    const { ETF } = this.props;\n    if (ETF) {\n      axios.get(`/ETfLiveArbitrage/Single/${ETF}`).then((res) => {\n        this.setState({\n          Full_Day_Arbitrage_Data: JSON.parse(res.data.Arbitrage),\n          Full_Day_Prices: {\n            data: tsvParse(\n              res.data.Prices,\n              this.parseData(this.state.parseDate)\n            ),\n          },\n          pnlstatementforday: (\n            <AppTable data={JSON.parse(res.data.pnlstatementforday)} />\n          ),\n          SignalCategorization: (\n            <AppTable data={JSON.parse(res.data.SignalCategorization)} />\n          ),\n          scatterPlotData: (\n            <ScatterPlot data={JSON.parse(res.data.scatterPlotData)} />\n          ),\n          ArbitrageLineChart: res.data.ArbitrageLineChart,\n          etfmoversDictCount: JSON.parse(res.data.etfmoversDictCount),\n          highestChangeDictCount: JSON.parse(res.data.highestChangeDictCount),\n          isLoading: false,\n        });\n      });\n    }\n  }\n\n  UpdateArbitragDataTables(appendToPreviousTable) {\n    const { ETF } = this.props;\n    if (ETF) {\n      axios.get(`/ETfLiveArbitrage/Single/UpdateTable/${ETF}`).then((res) => {\n        if (appendToPreviousTable) {\n          console.log(\"Append To Previous table\");\n        } else {\n          this.setState({\n            LiveArbitrage: res.data.Arbitrage[\"Arbitrage in $\"][0],\n            LiveSpread: res.data.Arbitrage[\"ETF Trading Spread in $\"][0],\n            CurrentTime: res.data.Arbitrage[\"Time\"][0],\n            LiveVWPrice: res.data.Prices[\"VWPrice\"][0],\n            OpenPrice: res.data.Prices[\"open\"][0],\n            ClosePrice: res.data.Prices[\"close\"][0],\n            HighPrice: res.data.Prices[\"high\"][0],\n            LowPrice: res.data.Prices[\"low\"][0],\n            ETFStatus: res.data.SignalInfo.ETFStatus,\n            Signal: res.data.SignalInfo.Signal,\n            SignalStrength: res.data.SignalInfo.Strength,\n            LiveColor:\n              res.data.Arbitrage[\"Arbitrage in $\"][0] < 0\n                ? \"text-success\"\n                : res.data.Arbitrage[\"Arbitrage in $\"][0] == 0\n                ? \"text-muted\"\n                : \"text-danger\",\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col xs={12} md={5}>\n          <Card>\n            <Card.Header className=\"text-white bg-color-dark flex-row\">\n              Live Arbitrage {this.props.ETF}\n              <div className=\"margin-left-auto\">\n                <CombinedPieCharts\n                  etfmoversDictCount={this.state.etfmoversDictCount}\n                  highestChangeDictCount={this.state.highestChangeDictCount}\n                />\n              </div>\n            </Card.Header>\n            <Card.Body className=\"BlackHeaderForModal\">\n              {this.state.isLoading ? (\n                <Loader />\n              ) : (\n                <div className=\"FullPageDiv\">\n                  <LiveArbitrageTable\n                    data={this.state.Full_Day_Arbitrage_Data}\n                  />\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xs={12} md={3}>\n          <Row>\n            <Col xs={12} md={12}>\n              <LiveStatusWindow\n                HighPrice={this.state.HighPrice}\n                OpenPrice={this.state.OpenPrice}\n                ClosePrice={this.state.ClosePrice}\n                LowPrice={this.state.LowPrice}\n                SignalStrength={this.state.SignalStrength}\n                CurrentTime={this.state.CurrentTime}\n                ETFStatus={this.state.ETFStatus}\n                Signal={this.state.Signal}\n                LiveArbitrage={this.state.LiveArbitrage}\n                LiveSpread={this.state.LiveSpread}\n                LiveColor={this.state.LiveColor}\n              />\n            </Col>\n\n            <Col xs={12} md={12}>\n              <Card className=\"CustomCard\">\n                <Card.Header className=\"CustomCardHeader text-white\">\n                  Arb Time Series\n                </Card.Header>\n                {this.state.isLoading ? (\n                  <Loader />\n                ) : (\n                  <Card.Body className=\"CustomCardBody text-white\">\n                    <LineChartForHistArb data={this.state.ArbitrageLineChart} />\n                  </Card.Body>\n                )}\n              </Card>\n            </Col>\n\n            <Col xs={12} md={12}>\n              <Card className=\"CustomCard\">\n                <Card.Header className=\"CustomCardHeader text-white\">\n                  Signal Performace\n                </Card.Header>\n                {this.state.isLoading ? (\n                  <Loader />\n                ) : (\n                  <Card.Body className=\"CustomCardBody text-white\">\n                    {this.state.pnlstatementforday}\n                  </Card.Body>\n                )}\n              </Card>\n            </Col>\n\n            <Col xs={12} md={12}>\n              <Card className=\"CustomCard\">\n                <Card.Header className=\"CustomCardHeader text-white\">\n                  Signal Stats\n                </Card.Header>\n                {this.state.isLoading ? (\n                  <Loader />\n                ) : (\n                  <Card.Body className=\"CustomCardBody text-white\">\n                    {this.state.SignalCategorization}\n                  </Card.Body>\n                )}\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col xs={12} md={4}>\n          <div className=\"DescriptionTable3\">\n            <Card>\n              <Card.Header className=\"modalCustomHeader text-white CustomBackGroundColor\">\n                Price Chart\n              </Card.Header>\n              <Card.Body className=\"BlackHeaderForModal\">\n                <ChartComponent data={this.state.Full_Day_Prices} />\n              </Card.Body>\n            </Card>\n          </div>\n\n          <Card className=\"CustomCard\">\n            <Card.Header className=\"CustomCardHeader text-white\">\n              ETF Change % Vs NAV change %\n            </Card.Header>\n            {this.state.isLoading ? (\n              <Loader />\n            ) : (\n              <Card.Body className=\"CustomCardBody text-white\">\n                {this.state.scatterPlotData}\n              </Card.Body>\n            )}\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n\n  // Parse Data For Stock Price Chart\n  parseData(parse) {\n    return function (d) {\n      d.date = parse(d.date);\n      d.open = +parseFloat(d.open);\n      d.high = +parseFloat(d.high);\n      d.low = +parseFloat(d.low);\n      d.close = +parseFloat(d.close);\n      d.volume = +parseInt(d.TickVolume);\n\n      return d;\n    };\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ETF: state.navbar.ETF,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Live_Arbitrage_Single);\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Live_Arbitrage_Single } from \"../Pages/Live_Arbitrage_Single\";\nimport { useSelector } from \"react-redux\";\n\nconst LiveArbitrageSingleRoutes = () => {\n  const { ETF } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/live-arbitrage-single/:ETF\"\n        component={Live_Arbitrage_Single}\n      />\n      <Redirect\n        from=\"/live-arbitrage-single\"\n        to={`/live-arbitrage-single/${ETF}`}\n      />\n    </Switch>\n  );\n};\n\nexport default LiveArbitrageSingleRoutes;\n","import React, { useState } from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Card, Table } from \"react-bootstrap\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Loader } from \"../../Common_Components/Loader\";\n\nconst Live_Arbitrage_All_Table = (props) => {\n\n  const [tableData, setTableData] = useState([]);\n  const [expandedRows, setExpandedRows] = useState([])\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  // const [filterStringArb, setFilterStringArb] = useState();\n  // const [filterStringAbsArb, setFilterStringAbsArb] = useState();\n  // const [filterStringSpread, setFilterStringSpread] = useState();\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSortedBy, setSorted] = useState(\"\");\n  // const inputArb = useRef(null);\n  // const inputAbsArb = useRef(null);\n  // const inputSpread = useRef(null);\n\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  useEffect(() => {\n    if (tableData.length < 1) {\n      Axios.get(\n        `/ETfLiveArbitrage/AllTickers`\n      ).then(({ data }) => {\n        setTableData(data);\n        setFilterData(data);\n        setIsLoading(false)\n      })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.symbol);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     if (filterStringArb.length < 1 && tableData.length !== 0) {\n  //       return setFilterData(tableData);\n  //     }\n  //     if (tableData.length !== 0) {\n  //       let values = filterStringArb.split(',')\n  //       const col = values[0]\n  //       const binop = values[1]\n  //       const filval = values[2]\n\n  //     }\n  //   }, 300);\n  // }, [filterStringArb]);\n\n  // const handleFilterChange = (e) => {\n  //   setFilterStringArb(e.target.value);\n  // };\n\n  const changeOrder = (e) => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [e], [\"asc\"]);\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n      setSorted(e);\n    }\n    else if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [e], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n      setSorted(e);\n    }\n  };\n\n  const getClassNameForSortIcon = (col) => {\n    if (isSortedBy === col) {\n      if (orderType === \"ASC\") {\n        return \"fas fa-sort-down\";\n      }\n      else if (orderType === \"DSC\") {\n        return \"fas fa-sort-up\";\n      }\n    }\n    else {\n      return \"fas fa-sort\";\n    }\n  }\n\n  useInterval(() => {\n    // Your custom logic here\n    if (new Date().getSeconds() === 8) {\n      // callDataAPI()\n      Axios.get(\n        `/api/ETfLiveArbitrage/AllTickers`\n      )\n        .then((res) => setTableData(res.data))\n        .catch((err) => console.log(err));\n    }\n  }, 1000);\n\n\n  function handleRowClick(rowId) {\n    const currentExpandedRows = expandedRows;\n    const isRowCurrentlyExpanded = currentExpandedRows.includes(rowId);\n\n    const newExpandedRows = isRowCurrentlyExpanded ?\n      currentExpandedRows.filter(id => id !== rowId) :\n      currentExpandedRows.concat(rowId);\n    setExpandedRows(newExpandedRows);\n  };\n\n  function renderItem(data) {\n    const clickCallback = () => handleRowClick(data.symbol);\n    const itemRows = [\n      <tr onClick={clickCallback} key={data.symbol}>\n        <td>{data.symbol}</td>\n        <td className={data[\"Arbitrage in $\"] < 0 ? \"red\" : \"green\"}>\n          {data[\"Arbitrage in $\"]}\n        </td>\n        <td>{data[\"Absolute Arbitrage\"]}</td>\n        <td>{data[\"ETF Price\"]}</td>\n        <td className={data[\"ETF Change Price %\"] < 0 ? \"red\" : \"green\"}>\n          {data[\"ETF Change Price %\"]}\n        </td>\n        <td>{data[\"ETF Trading Spread in $\"]}</td>\n        <td>{data[\"Net Asset Value Change%\"]}</td>\n      </tr>\n    ];\n\n    if (expandedRows.includes(data.symbol)) {\n      itemRows.push(\n        <tr>\n          <td colspan=\"7\">\n            <Table striped hover variant=\"dark\" bsPrefix=\"innerTable\">\n              <thead>\n                <tr>\n                  <th className=\"cursor-pointer\">Top</th>\n                  <th>ETF Mover</th>\n                  <th>Moved By</th>\n                  <th>Change in Holding</th>\n                  <th>Changed by</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr key={\"row-expanded-\" + data.id}>\n                  <td> #1 </td>\n                  <td>{data[\"ETFMover%1\"][0]}</td>\n                  <td className={data[\"ETFMover%1\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"ETFMover%1\"][1].toFixed(3)}</td>\n                  <td>{data[\"Change%1\"][0]}</td>\n                  <td className={data[\"ETFMover%1\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"Change%1\"][1].toFixed(3)}</td>\n                </tr>\n                <tr key={\"row-expanded-\" + data.id}>\n                  <td> #2 </td>\n                  <td>{data[\"ETFMover%2\"][0]}</td>\n                  <td className={data[\"ETFMover%2\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"ETFMover%2\"][1].toFixed(3)}</td>\n                  <td>{data[\"Change%2\"][0]}</td>\n                  <td className={data[\"Change%2\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"Change%2\"][1].toFixed(3)}</td>\n                </tr>\n                <tr key={\"row-expanded-\" + data.id}>\n                  <td> #3 </td>\n                  <td>{data[\"ETFMover%3\"][0]}</td>\n                  <td className={data[\"ETFMover%3\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"ETFMover%3\"][1].toFixed(3)}</td>\n                  <td>{data[\"Change%3\"][0]}</td>\n                  <td className={data[\"Change%3\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"Change%3\"][1].toFixed(3)}</td>\n                </tr>\n                <tr key={\"row-expanded-\" + data.id}>\n                  <td> #4 </td>\n                  <td>{data[\"ETFMover%4\"][0]}</td>\n                  <td className={data[\"ETFMover%4\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"ETFMover%4\"][1].toFixed(3)}</td>\n                  <td>{data[\"Change%4\"][0]}</td>\n                  <td className={data[\"Change%4\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"Change%4\"][1].toFixed(3)}</td>\n                </tr>\n                <tr key={\"row-expanded-\" + data.id}>\n                  <td> #5 </td>\n                  <td>{data[\"ETFMover%5\"][0]}</td>\n                  <td className={data[\"ETFMover%5\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"ETFMover%5\"][1].toFixed(3)}</td>\n                  <td>{data[\"Change%5\"][0]}</td>\n                  <td className={data[\"Change%5\"][1].toFixed(3) < 0 ? \"red\" : \"green\"}>{data[\"Change%5\"][1].toFixed(3)}</td>\n                </tr>\n              </tbody>\n            </Table>\n          </td>\n        </tr>\n      );\n    }\n\n    return itemRows;\n  }\n\n  return (\n    <Card style={{ width: '100vh', height: '94vh' }}>\n      <Card.Header className=\"text-white bg-color-dark flex-row\">Live Arbitrage All ETFs\n        <input\n          className=\"margin-left-auto d-inline-block\"\n          name=\"search\"\n          onChange={debounce(handleSearchChange, 500, { leading: true })}\n          value={searchString}\n          placeholder=\"Enter ETF to Search\"\n        />\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table className=\"overflow-auto\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\">symbol\n                <a href=\"#\">\n                  <i class={getClassNameForSortIcon(\"symbol\")} onClick={() => changeOrder(\"symbol\")}></i>\n                </a>\n              </th>\n              <th className=\"cursor-pointer\">Arbitrage in $\n                <a href=\"#\">\n                  <i class={getClassNameForSortIcon(\"Arbitrage in $\")} onClick={() => changeOrder(\"Arbitrage in $\")}></i>\n                </a>\n                <form class=\"form-inline\">\n                  <div class=\"input-group mb-1 mr-sm-1\">\n                    <select class=\"custom-select mb-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\n                      <option selected>Choose...</option>\n                      <option value=\"=\">=</option>\n                      <option value=\"!=\">!=</option>\n                      <option value=\">\">&gt;</option>\n                      <option value=\">=\">&gt;=</option>\n                      <option value=\"<\">&lt;</option>\n                      <option value=\"<=\">&lt;=</option>\n                    </select>\n                    <input \n                    type=\"text\" \n                    class=\"form-control mb-1 mr-sm-2\" \n                    id=\"inlineFormInputGroupUsername2\" \n                    placeholder=\"Arbitrage Value\"\n                    // onChange={debounce(handleFilterChange, 500, { leading: true })}\n                    // value={\"Arbitrage in $,\"+inputArb.value+\",\"+filterStringArb}\n                    />\n                  </div>\n                </form>\n              </th>\n              <th className=\"cursor-pointer\">Absolute Arbitrage\n                <a href=\"#\">\n                  <i class={getClassNameForSortIcon(\"Absolute Arbitrage\")} onClick={() => changeOrder(\"Absolute Arbitrage\")}></i>\n                </a>\n                <form class=\"form-inline\">\n                  <div class=\"input-group mb-1 mr-sm-1\">\n                    <select class=\"custom-select mb-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\n                      <option selected>Choose...</option>\n                      <option value=\"=\">=</option>\n                      <option value=\"!=\">!=</option>\n                      <option value=\">\">&gt;</option>\n                      <option value=\">=\">&gt;=</option>\n                      <option value=\"<\">&lt;</option>\n                      <option value=\"<=\">&lt;=</option>\n                    </select>\n                    <input type=\"text\" class=\"form-control mb-1 mr-sm-2\" id=\"inlineFormCustomArbitrageAbs\" placeholder=\"Arbitrage Value\"/>\n                  </div>\n                </form>\n              </th>\n              <th className=\"cursor-pointer\">ETF Price\n                <a href=\"#\">\n                  <i class={getClassNameForSortIcon(\"ETF Price\")} onClick={() => changeOrder(\"ETF Price\")}></i>\n                </a>\n              </th>\n              <th className=\"cursor-pointer\">ETF Change Price %\n                <a href=\"#\">\n                  <i class={getClassNameForSortIcon(\"ETF Change Price %\")} onClick={() => changeOrder(\"ETF Change Price %\")}></i>\n                </a>\n              </th>\n              <th className=\"cursor-pointer\">ETF Trading Spread in $\n                <a href=\"#\">\n                  <i class={getClassNameForSortIcon(\"ETF Trading Spread in $\")} onClick={() => changeOrder(\"ETF Trading Spread in $\")}></i>\n                </a>\n                <form class=\"form-inline\">\n                  <div class=\"input-group mb-1 mr-sm-1\">\n                    <select class=\"custom-select mb-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\n                      <option selected>Choose...</option>\n                      <option value=\"=\">=</option>\n                      <option value=\"!=\">!=</option>\n                      <option value=\">\">&gt;</option>\n                      <option value=\">=\">&gt;=</option>\n                      <option value=\"<\">&lt;</option>\n                      <option value=\"<=\">&lt;=</option>\n                    </select>\n                    <input type=\"text\" class=\"form-control mb-1 mr-sm-2\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Arbitrage Value\"/>\n                  </div>\n                </form>\n              </th>\n              <th className=\"cursor-pointer\">Net Asset Value Change%\n                <a href=\"#\">\n                  <i class={getClassNameForSortIcon(\"Net Asset Value Change%\")} onClick={() => changeOrder(\"Net Asset Value Change%\")}></i>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(filterData) &&\n              filterData.map((data) => {\n                return (\n                  <>{renderItem(data)}</>\n                );\n              })}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Live_Arbitrage_All_Table;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport { tsvParse, csvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\n\nimport './Styles/Live_Arbitrage_All.css';\nimport Live_Arbitrage_All_Table from './Live_Arbitrage_Table';\n\nimport { connect } from \"react-redux\";\n\n\nclass Live_Arbitrage_All extends React.Component {\n  state = {\n    LiveArbitrageAllEtf : ''\n  };\n\n  render() {\n    return (\n        <Row>\n          <Col xs={12} md={5}>\n            <Live_Arbitrage_All_Table data={this.state.LiveArbitrageAllEtf || []} />\n          </Col>\n        </Row>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ETF: state.navbar.ETF,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Live_Arbitrage_All);\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Live_Arbitrage_All } from \"../Pages/Live_Arbitrage\";\n\nconst LiveArbitrageAllRoutes = () => {\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/Live-Arbitrage\"\n        component={Live_Arbitrage_All}\n      />\n    </Switch>\n  );\n};\n\nexport default LiveArbitrageAllRoutes;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport EtfDescRoutes from \"./EtfDescRoutes\";\nimport { CommonNavBar } from \"../Common_Components/NavBar\";\nimport HistArbiageRoutes from \"./HistArbiageRoutes\";\nimport LiveArbitrageSingleRoutes from \"./LiveArbitrageSingleRoutes\";\nimport LiveArbitrageAllRoutes from \"./Live_Arbitrage_All\";\n\nconst AuthenticatedRoutes = () => {\n  return (\n    <>\n      <CommonNavBar />\n      <Route path=\"/ETF-Description\" component={EtfDescRoutes} />\n      <Route\n        path=\"/live-arbitrage-single\"\n        component={LiveArbitrageSingleRoutes}\n      />\n      <Route path=\"/Live-Arbitrage\" component={LiveArbitrageAllRoutes}/>\n      <Route path=\"/historical-arbitrage\" component={HistArbiageRoutes} />\n    </>\n  );\n};\n\nexport default AuthenticatedRoutes;\n","import { CognitoUserPool } from \"amazon-cognito-identity-js\";\n\nconst poolData = {\n  UserPoolId: \"us-east-1_rLN94MOu0\",\n  ClientId: \"5fhruc7d6tfo0o1kr41ltfass5\",\n};\n\nconst userPool = new CognitoUserPool(poolData);\n\nexport default userPool;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport userPool from \"../../Utilities/userPool\";\n\nconst SignUpForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    userPool.signUp(email, password, [email], null, (err, data) => {\n      if (err) console.error(err);\n      console.log(data);\n    });\n  };\n  return (\n    <div className=\"bg-color-dark padding-top-20vh height-100vh\">\n      <div className=\"margin-left-auto margin-right-auto width-30em\">\n        <Form onSubmit={onSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n              placeholder=\"Enter email\"\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import React from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport { AuthContextProvider } from \"./AuthContext\";\nimport { useReducer } from \"react\";\nimport Pool from \"./userPool\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    default: {\n      return state;\n    }\n  }\n};\n\nconst AuthProvider = (props) => {\n  const [authData, authDispatch] = useReducer(reducer, initialState);\n\n  const authenticate = async (Username, Password) =>\n    await new Promise((resolve, reject) => {\n      console.log(Username, Password);\n      const user = new CognitoUser({ Username, Pool });\n      const authDetails = new AuthenticationDetails({ Username, Password });\n\n      user.authenticateUser(authDetails, {\n        onSuccess: (data) => {\n          console.log(\"onSuccess:\", data);\n          resolve(data);\n        },\n\n        onFailure: (err) => {\n          console.error(\"onFailure:\", err);\n          reject(err);\n        },\n\n        newPasswordRequired: (data) => {\n          console.log(\"newPasswordRequired:\", data);\n          resolve(data);\n        },\n      });\n    });\n  const getSession = async () =>\n    await new Promise((resolve, reject) => {\n      const user = Pool.getCurrentUser();\n      if (user) {\n        user.getSession(async (err, session) => {\n          if (err) {\n            reject();\n          } else {\n            const attributes = await new Promise((resolve, reject) => {\n              user.getUserAttributes((err, attributes) => {\n                if (err) {\n                  reject(err);\n                } else {\n                  const results = {};\n\n                  for (let attribute of attributes) {\n                    const { Name, Value } = attribute;\n                    results[Name] = Value;\n                  }\n\n                  resolve(results);\n                }\n              });\n            });\n\n            const token = session.getIdToken().getJwtToken();\n\n            resolve({\n              user,\n              headers: {\n                Authorization: token,\n              },\n              ...session,\n              ...attributes,\n            });\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n    if (user) {\n      user.signOut();\n    }\n  };\n\n  return (\n    <AuthContextProvider\n      value={{\n        authenticate,\n        getSession,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContextProvider>\n  );\n};\n\nexport default AuthProvider;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { SignInForm } from \"../Common_Components/SignIn\";\nimport AuthenticatedRoutes from \"../Routes/AuthenticatedRoutes\";\nimport ProtectedRoute from \"../Routes/ProtectedRoute\";\nimport SignUpForm from \"../Common_Components/SignUp/SignUpForm\";\nimport \"./App.css\";\nimport AuthProvider from \"../Utilities/AuthProvider\";\n\nconst LoginRoute = ({ component: Component, exp, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        false ? (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location },\n            }}\n          />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nclass App extends React.Component {\n  render() {\n    return (\n      <AuthProvider>\n        <div>\n          <Router>\n            <Switch>\n              <Route exact path=\"/signup\" component={SignUpForm} />\n              <LoginRoute exact path=\"/login\" component={SignInForm} />\n              <ProtectedRoute path=\"/\" component={AuthenticatedRoutes} />\n            </Switch>\n          </Router>\n        </div>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  isLoggedIn: true,\n};\n\nconst authReducer = (state = initialState, action) => {\n  if (action.type === \"LOGIN_SUCCESS\") {\n    state = { ...initialState, ...action.payload, isLoggedIn: true };\n    return state;\n  }\n  if (action.type === \"LOGOUT_SUCCESS\") {\n    state = { ...initialState };\n    return state;\n  }\n\n  return state;\n};\n\nexport default authReducer;\n","import { changeNavbarStartDate, changeNavbarEtfName } from \"./NavBarActions\";\n\nconst initialState = {\n  startDate: \"20200608\",\n  ETF: \"XLK\",\n};\n\nconst NavBarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case changeNavbarStartDate: {\n      return { ...state, startDate: action.payload.value };\n    }\n\n    case changeNavbarEtfName: {\n      return { ...state, ETF: action.payload.value };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default NavBarReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport NavBarReducer from \"../Common_Components/NavBar/NavBarReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  navbar: NavBarReducer,\n});\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./rootReducer\";\n\nconst devTools =\n  process.env.NODE_ENV === \"production\"\n    ? applyMiddleware(thunk)\n    : composeWithDevTools(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, devTools);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./static/css/style.css\";\n\nimport App from \"./App/App.jsx\";\nimport { store } from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}