{"version":3,"sources":["Component/LineChartForHistArb.js","Component/ScatterPlott.js","Common_Components/PieChart/CommonPieChart.jsx","Component/CombinedPieCharts.jsx","Component/StockCharts/CandleStickChartWithMACDIndicator.js","Component/StockPriceChart.js","Common_Components/Loader/Loader.jsx","Pages/Live_Arbitrage_Single/LiveStatusWindow.jsx","Pages/Live_Arbitrage_Single/LiveArbitrageTable.jsx","Pages/Live_Arbitrage_Single/Live_Arbitrage_Main.jsx","Routes/LiveArbitrageSingleRoutes.jsx"],"names":["LineChartForHistArb","props","data","length","width","height","padding","top","right","left","bottom","strokeDasharray","className","dataKey","stroke","type","dot","ScatterPlot","this","style","name","unit","fill","cursor","React","Component","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","r","convertData","element","convertedData","Object","entries","forEach","key","push","CommonPieChart","state","chartname","activeIndex","COLORS","onPieEnter","index","setState","prevProps","tempData","activeShape","onMouseEnter","map","entry","PureComponent","CombinedPieCharts","useState","show","setShow","handleClose","Button","variant","size","onClick","Modal","dialogClassName","onHide","Header","closeButton","Title","Body","Row","Col","xs","md","Card","etfmoversDictCount","highestChangeDictCount","Footer","macdAppearance","macd","signal","divergence","mouseEdgeAppearance","textFill","strokeOpacity","strokeWidth","arrowWidth","CandleStickChartWithMACDIndicator","initialData","ratio","ema26","ema","id","options","windowSize","merge","c","accessor","ema12","macdCalculator","fast","slow","smaVolume50","sma","sourcePath","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","margin","seriesName","yExtents","high","low","tickStroke","axisAt","orient","showTicks","outerTickSize","ticks","at","displayFormat","format","yAccessor","itemType","edgeAt","close","open","origin","e","console","log","with","LabelAnnotation","when","usingProps","fontFamily","fontSize","opacity","text","yScale","datum","volume","w","h","tickFormat","timeFormat","rectRadius","appearance","defaultProps","fitWidth","ChartComponent","Array","isArray","spinnerStyle","Loader","LiveStatusWindow","bg","HighPrice","OpenPrice","ClosePrice","LowPrice","CurrentTime","LiveColor","ETFStatus","Signal","SignalStrength","LiveArbitrage","LiveSpread","last_minute_signal","LiveArbitrageTable","Table","striped","bordered","hover","cls","Time","Arbitrage_in_$","ETF_Trading_Spread_in_$","Magnitude_of_Arbitrage","toFixed","ETF_Price","Live_Arbitrage_Single","Full_Day_Arbitrage_Data","Full_Day_Prices","scatterPlotData","Prices","LiveVWPrice","pnlstatementforday","ArbitrageLineChart","CandlestickSignals","isLoading","parseDate","timeParse","dataFetchInterval","setInterval","Date","getSeconds","UpdateArbitragDataTables","updateAnotherData","fetchETFLiveData","match","params","ETF","clearInterval","intervalId","axios","get","then","res","lastArbitrage","Arbitrage","slice","pop","reverse","tsvParse","parseData","SignalCategorization","SignalInfo","Strength","last","catch","err","VWPrice","Magnitude","parse","parseFloat","parseInt","TickVolume","LiveArbitrageSingleRoutes","useSelector","navbar","ProtectedRoute","path","component","from","to"],"mappings":"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","file":"static/js/6.c8396f0f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Brush,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst LineChartForHistArb = (props) => {\n  const { data } = props;\n \n  return (\n    <>\n      {data.length ? (\n        <ResponsiveContainer\n          width=\"100%\"\n          height={280}\n          padding={{ top: 0, right: 0, left: 0, bottom: 0 }}\n        >\n          <LineChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis className=\"recharts-cartesian-axis-tick\" dataKey=\"Time\" stroke=\"#58FF33\"/>\n            <YAxis className=\"recharts-cartesian-axis-tick\" stroke=\"#58FF33\"/>\n            <Tooltip />\n            <Legend />\n            <Brush dataKey=\"Time\" height={30} stroke=\"#8884d8\" />\n            <Line\n              type=\"monotone\"\n              dataKey=\"Arbitrage in $\"\n              stroke=\"#8884d8\"\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n};\n\nexport default LineChartForHistArb;\n","import React from \"react\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nclass ScatterPlot extends React.Component {\n  render() {\n    const { data } = this.props;\n    return (\n      <div style={{ width: \"100%\", height: 240 }}>\n        <ResponsiveContainer>\n          <ScatterChart>\n            <CartesianGrid />\n            <XAxis\n              stroke=\"#58FF33\"\n              dataKey={\"Net Asset Value Change%\"}\n              type=\"number\"\n              name=\"Net Asset Value Chage %\"\n              unit=\"%\"\n            />\n            <YAxis\n              stroke=\"#58FF33\"\n              dataKey={\"ETF Change Price %\"}\n              type=\"number\"\n              name=\"ETF Change Price %\"\n              unit=\"%\"\n            />\n            <Scatter name=\"A school\" data={data} fill=\"#3336FF\" />\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n          </ScatterChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nexport default ScatterPlot;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${value}`}</text>\n    </g>\n  );\n};\n\nconst convertData = (data = {}, element = \"\") => {\n  const convertedData = [];\n  Object.entries(data).forEach(([key, value]) =>\n    convertedData.push({ name: key, value: value[element] })\n  );\n  return convertedData;\n};\n\nclass CommonPieChart extends PureComponent {\n  state = {\n    data: [],\n    chartname: \"\",\n    activeIndex: 0,\n    COLORS: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { data, element } = this.props;\n\n    if (data !== prevProps.data && typeof data === \"object\") {\n      const tempData = convertData(data, element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.data === \"object\") {\n      const tempData = convertData(this.props.data, this.props.element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <PieChart width={350} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={this.state.data}\n          cx={175}\n          cy={150}\n          innerRadius={25}\n          outerRadius={90}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell\n              key={index}\n              fill={this.state.COLORS[index % this.state.COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default CommonPieChart;\n","import React, { useState } from \"react\";\nimport { Button, Modal, Row, Card, Col } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../Common_Components/PieChart\";\n\nconst CombinedPieCharts = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\n        Etf Movers\n      </Button>\n\n      <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Underlying Holdings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col xs={12} md={12}>\n              <Card>\n                <Card.Header className=\"CustomCardHeader text-white CustomBackGroundColor\">\n                  Holdings\n                </Card.Header>\n                <Card.Body className=\"CustomCardBody text-white\">\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Etf Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.etfmoversDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Market Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.highestChangeDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CombinedPieCharts;\n","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tAreaSeries,\n\tCandlestickSeries,\n\tLineSeries,\n\tMACDSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tMACDTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, macd, sma } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\n\nimport { LabelAnnotation,Annotate, Label } from \"react-stockcharts/lib/annotation\";\n\nconst macdAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfill: {\n\t\tdivergence: \"#4682B4\"\n\t},\n};\n\nconst mouseEdgeAppearance = {\n\ttextFill: \"#542605\",\n\tstroke: \"#05233B\",\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tarrowWidth: 5,\n\tfill: \"#BCDEFA\",\n};\n\n\nclass CandleStickChartWithMACDIndicator extends React.Component {\n\trender() {\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst smaVolume50 = sma()\n\t\t\t.id(3)\n\t\t\t.options({\n\t\t\t\twindowSize: 50,\n\t\t\t\tsourcePath: \"volume\",\n\t\t\t})\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\n\t\t\t.accessor(d => d.smaVolume50);\n\n\t\tconst calculatedData = smaVolume50(macdCalculator(ema12(ema26(initialData))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst longAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"green\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D1\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.low),\n\t\t};\n\n\t\tconst shortAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"red\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D3\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.high),\n\t\t};\n\n\t\tconst colorOfEMA = {\n\t\t\tfill: \"red\"\n\t\t}\n\n\t\treturn (\n\t\t\t<ChartCanvas height={550}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 5, bottom: 5 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t>\n\t\t\t\t<Chart id={1} height={300}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema26.accessor(), ema12.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<LineSeries yAccessor={ema26.accessor()} stroke={ema26.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()}/>\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema26.accessor()} fill={ema26.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema12.accessor()} fill={ema12.stroke()} />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close}\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#A2F5BF\" : \"#F9ACAA\"}\n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#0B4228\" : \"#6A1B19\"}\n\t\t\t\t\t\ttextFill={d => d.close > d.open ? \"#0B4228\" : \"#420806\"}\n\t\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\tarrowWidth={2}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema26.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema26.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema26.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema12.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema12.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema12.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Sold\"}\n\t\t\t\t\t\tusingProps={longAnnotationProps} />\n\t\t\t\t\t\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Bought\"}\n\t\t\t\t\t\tusingProps={shortAnnotationProps} />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2} height={100}\n\t\t\t\t\tyExtents={[d => d.volume, smaVolume50.accessor()]}\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={3} height={100}\n\t\t\t\t\tyExtents={macdCalculator.accessor()}\n\t\t\t\t\torigin={(w, h) => [0, h - 150]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={2} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%H:%M\")}\n\t\t\t\t\t\trectRadius={5}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<MACDSeries yAccessor={d => d.macd}\n\t\t\t\t\t\t{...macdAppearance} />\n\t\t\t\t\t<MACDTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.macd}\n\t\t\t\t\t\toptions={macdCalculator.options()}\n\t\t\t\t\t\tappearance={macdAppearance}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor stroke=\"#FFFFFF\" />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithMACDIndicator.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithMACDIndicator.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithMACDIndicator = fitWidth(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithMACDIndicator;\n","import React from \"react\";\n\nimport CandleStickChartWithMACDIndicator from \"./StockCharts/CandleStickChartWithMACDIndicator\";\n\nconst ChartComponent = ({ data }) => {\n \n  if (Array.isArray(data)) {\n    return <CandleStickChartWithMACDIndicator data={data} />;\n  } else {\n    return <></>;\n  }\n};\n\nexport default ChartComponent;\n","import React from \"react\";\n\nconst spinnerStyle = {\n  fontSize:'14px',\n  \n};\n\nconst Loader = () => {\n  return (\n    <div className=\"loader center\">\n      <i className=\"fa fa-spinner fa-spin\" style={spinnerStyle}></i>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../../static/css/Live_Arbitrage.css\";\n\nconst LiveStatusWindow = (props) => {\n  return (\n    <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n      <Card.Header>\n        <div>\n          <span className=\"h4\"></span>\n          H: <span className=\"text-muted\">{props.HighPrice} </span>\n          O: <span className=\"text-muted\">{props.OpenPrice} </span>\n          C: <span className=\"text-muted\">{props.ClosePrice} </span>\n          L: <span className=\"text-muted\">{props.LowPrice} </span>\n        </div>\n        <div>\n          Time: <span className=\"text-muted\">{props.CurrentTime}</span>\n        </div>\n      </Card.Header>\n\n      <Card.Body>\n        <div>\n          <span className={props.LiveColor} style={{ fontSize: \"15px\" }}>\n            ETF Status: {props.ETFStatus}\n          </span>\n        </div>\n        <div>\n          <span className={props.LiveColor} style={{ fontSize: \"15px\" }}>\n            Signal: {props.Signal}\n          </span>\n        </div>\n        <div>\n          <span className={props.LiveColor} style={{ fontSize: \"15px\" }}>\n            Strength: {props.SignalStrength}\n          </span>\n        </div>\n\n        <div>\n          <span className=\"\">$ Arbitrage: {props.LiveArbitrage}</span>\n        </div>\n        <div>\n          <span className=\"\">$ Spread: {props.LiveSpread}</span>\n        </div>\n        <div>\n          <span className=\"\">\n            Candlestick Observed: {props.last_minute_signal}\n          </span>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LiveStatusWindow;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst LiveArbitrageTable = ({ data }) => {\n  return (\n    <div className=\"Table\">\n      <Table size=\"sm\" striped bordered hover variant=\"dark\">\n        <thead className=\"TableHead\">\n          <tr>\n            <th>Time</th>\n            <th>$Arbitrage</th>\n            <th>$Spread</th>\n            <th>$Absolute Arbitrage</th>\n            <th>Over Bought/Sold</th>\n            <th>Price</th>\n            <th>T</th>\n            <th>TickVolume</th>\n            <th>Etf Mover</th>\n            <th>Most Change%</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Array.isArray(data) &&\n            data.map((data, index) => {\n              let cls = \"\";\n              if (data[\"Over_Bought/Sold\"] == \"Over Bought\") {\n                cls = \"red\";\n              } else if (data[\"Over_Bought/Sold\"] == \"Over Sold\") {\n                cls = \"green\";\n              }\n              return (\n                <tr className={cls} key={index}>\n                  <td>{data.Time}</td>\n                  <td>{data.Arbitrage_in_$}</td>\n                  <td>{data.ETF_Trading_Spread_in_$}</td>\n                  <td>\n                    {(data.Magnitude_of_Arbitrage &&\n                      data.Magnitude_of_Arbitrage.toFixed(5)) ||\n                      null}\n                  </td>\n                  <td>{data[\"Over_Bought/Sold\"]}</td>\n                  <td>{data.ETF_Price}</td>\n                  <td>{data[\"ETF_Change_Price_%\"]}</td>\n                  <td>{data[\"TickVolume\"]}</td>\n                  <td>{data[\"ETFMover%1_ticker\"]}</td>\n                  <td>{data[\"Change%1_ticker\"]}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default LiveArbitrageTable;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { tsvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport ChartComponent from \"../../Component/StockPriceChart\";\nimport LiveStatusWindow from \"./LiveStatusWindow\";\nimport \"../../static/css/Live_Arbitrage.css\";\nimport CombinedPieCharts from \"../../Component/CombinedPieCharts\";\nimport LiveArbitrageTable from \"./LiveArbitrageTable\";\nimport LineChartForHistArb from \"../../Component/LineChartForHistArb\";\nimport { Loader } from \"../../Common_Components/Loader\";\nimport ScatterPlot from \"../../Component/ScatterPlott\";\nimport { CommonNavBar } from \"../../Common_Components/NavBar\";\nimport \"./Styles/style.css\";\nimport { last } from \"lodash\";\n\nclass Live_Arbitrage_Single extends React.Component {\n  state = {\n    Full_Day_Arbitrage_Data: [],\n    Full_Day_Prices: null,\n    scatterPlotData: \"\",\n    LiveArbitrage: \"\",\n    LiveSpread: \"\",\n    Prices: {},\n    LiveVWPrice: \"\",\n    OpenPrice: \"\",\n    ClosePrice: \"\",\n    HighPrice: \"\",\n    LowPrice: \"\",\n    CurrentTime: \"\",\n    ETFStatus: \"\",\n    Signal: \"\",\n    SignalStrength: \"\",\n    pnlstatementforday: \"\",\n    LiveColor: \"\",\n    ArbitrageLineChart: \"\",\n    etfmoversDictCount: \"\",\n    highestChangeDictCount: \"\",\n    CandlestickSignals: [],\n    isLoading: true,\n  };\n  parseDate = timeParse(\"%Y-%m-%d %H:%M:%S\");\n\n  componentDidMount() {\n    this.fetchETFLiveData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.ETF !== this.props.match.params.ETF) {\n      this.state.isLoading = true;\n      clearInterval(this.intervalId);\n      this.fetchETFLiveData();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  dataFetchInterval = () =>\n    setInterval(() => {\n      if (new Date().getSeconds() == 8) {\n        this.UpdateArbitragDataTables();\n        this.updateAnotherData();\n      }\n    }, 100);\n\n  fetchETFLiveData() {\n    const { ETF } = this.props.match.params;\n\n    if (ETF) {\n      axios\n        .get(`/api/ETfLiveArbitrage/Single/${ETF}`)\n        .then((res) => {\n          const lastArbitrage = res.data.Arbitrage.slice(-1).pop();\n          this.intervalId = this.dataFetchInterval();\n          this.setState({\n            ...this.state,\n            Full_Day_Arbitrage_Data: [...res.data.Arbitrage].reverse(),\n            Full_Day_Prices: tsvParse(\n              res.data.Prices,\n              this.parseData(this.parseDate)\n            ),\n\n            pnlstatementforday: res.data.pnlstatementforday,\n            SignalCategorization: res.data.SignalCategorization,\n            scatterPlotData: res.data.scatterPlotData,\n            ArbitrageLineChart: res.data.ArbitrageLineChart,\n            etfmoversDictCount: res.data.etfmoversDictCount,\n            highestChangeDictCount: res.data.highestChangeDictCount,\n            CandlestickSignals: res.data.CandlestickSignals,\n            last_minute_signal: res.data.last_minute_signal,\n            ETFStatus: res.data.SignalInfo.ETFStatus,\n            Signal: res.data.SignalInfo.Signal,\n            SignalStrength: res.data.SignalInfo.Strength,\n            LiveArbitrage: lastArbitrage[\"Arbitrage_in_$\"],\n            LiveSpread: lastArbitrage[\"ETF_Trading_Spread_in_$\"],\n            CurrentTime: last.Time,\n            isLoading: false,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  UpdateArbitragDataTables() {\n    const { ETF } = this.props.match.params;\n    const tempArray = this.state.Full_Day_Prices;\n    if (ETF) {\n      axios\n        .get(`/api/ETfLiveArbitrage/Single/UpdateTable/${ETF}`)\n        .then((res) => {\n          this.setState({\n            ...this.state,\n            Full_Day_Arbitrage_Data:\n              this.state.Full_Day_Arbitrage_Data[0].Time !==\n              res.data.Arbitrage.Time\n                ? [res.data.Arbitrage, ...this.state.Full_Day_Arbitrage_Data]\n                : [...this.state.Full_Day_Arbitrage_Data],\n\n            ArbitrageLineChart: [\n              ...this.state.ArbitrageLineChart,\n              {\n                \"Arbitrage in $\": res.data.Arbitrage[\"Arbitrage_in_$\"],\n                Time: res.data.Arbitrage.Time,\n              },\n            ],\n            scatterPlotData: [\n              ...this.state.scatterPlotData,\n              {\n                \"ETF Change Price %\": res.data.Arbitrage[\"ETF_Change_Price_%\"],\n                \"Net Asset Value Change%\":\n                  res.data.Arbitrage[\"Net_Asset_Value_Change%\"],\n              },\n            ],\n            LiveArbitrage: res.data.Arbitrage[\"Arbitrage_in_$\"],\n            LiveSpread: res.data.Arbitrage[\"ETF_Trading_Spread_in_$\"],\n            CurrentTime: res.data.Arbitrage.Time,\n            LiveVWPrice: res.data.Prices.VWPrice,\n            OpenPrice: res.data.Prices.open,\n            ClosePrice: res.data.Prices.close,\n            HighPrice: res.data.Prices.high,\n            LowPrice: res.data.Prices.low,\n            ETFStatus: res.data.SignalInfo.ETFStatus,\n            Signal: res.data.SignalInfo.Signal,\n            SignalStrength: res.data.SignalInfo.Strength,\n            LiveColor:\n              res.data.Arbitrage[\"Arbitrage_in_$\"] > 0\n                ? \"text-danger\"\n                : res.data.Arbitrage[\"Arbitrage_in_$\"] == 0\n                ? \"text-muted\"\n                : \"text-success\",\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  updateAnotherData() {\n    const { ETF } = this.props.match.params;\n\n    if (ETF) {\n      axios\n        .get(`/api/ETfLiveArbitrage/Single/SignalAndCandle/${ETF}`)\n        .then((res) => {\n          this.setState({\n            ...this.state,\n            CandlestickSignals: [...res.data.CandlestickSignals],\n            SignalCategorization: [...res.data.SignalCategorization],\n            pnlstatementforday: { ...res.data.pnlstatementforday },\n            last_minute_signal: res.data.last_minute_signal,\n            Full_Day_Prices: tsvParse(\n              res.data.Prices,\n              this.parseData(this.parseDate)\n            ),\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  render() {\n    const { ETF } = this.props.match.params;\n    const {\n      HighPrice,\n      OpenPrice,\n      ClosePrice,\n      LowPrice,\n      SignalStrength,\n      CurrentTime,\n      ETFStatus,\n      Signal,\n      LiveArbitrage,\n      LiveSpread,\n      LiveColor,\n      scatterPlotData,\n      SignalCategorization,\n      pnlstatementforday,\n      last_minute_signal,\n      etfmoversDictCount,\n      Full_Day_Arbitrage_Data,\n      highestChangeDictCount,\n      isLoading,\n      CandlestickSignals,\n      Full_Day_Prices,\n    } = this.state;\n\n    return (\n      <>\n        <CommonNavBar />\n        <div className=\"container-fluid font-size-sm\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 col-md-8 col-sm-12 padding-0\">\n                  <div className=\"FullPageDiv\" style={{ height: \"92vh\" }}>\n                    <Card bg=\"dark\" text=\"white\">\n                      <Card.Header className=\"flex-row\">\n                        <span>Live Arbitrage {ETF}</span>\n                        <div className=\"margin-left-auto\">\n                          <CombinedPieCharts\n                            etfmoversDictCount={etfmoversDictCount}\n                            highestChangeDictCount={highestChangeDictCount}\n                          />\n                        </div>\n                      </Card.Header>\n                      <Card.Body className=\"padding-1px overflow-auto\">\n                        {isLoading ? (\n                          <Loader />\n                        ) : (\n                          <LiveArbitrageTable data={Full_Day_Arbitrage_Data} />\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </div>\n                </div>\n\n                <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                      <LiveStatusWindow\n                        HighPrice={HighPrice}\n                        OpenPrice={OpenPrice}\n                        ClosePrice={ClosePrice}\n                        LowPrice={LowPrice}\n                        SignalStrength={SignalStrength}\n                        CurrentTime={CurrentTime}\n                        ETFStatus={ETFStatus}\n                        Signal={Signal}\n                        LiveArbitrage={LiveArbitrage}\n                        LiveSpread={LiveSpread}\n                        LiveColor={LiveColor}\n                        last_minute_signal={last_minute_signal}\n                      />\n                    </div>\n\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                      <Card className=\"height-100\" bg=\"dark\" text=\"white\">\n                        <Card.Header>\n                          Alpha Candle Stick Pattern Signals\n                        </Card.Header>\n\n                        <Card.Body className=\"padding-1px overflow-auto\">\n                          <Table\n                            size=\"sm\"\n                            striped\n                            bordered\n                            hover\n                            variant=\"dark\"\n                          >\n                            <thead>\n                              <tr>\n                                <th>Candle Type</th>\n                                <th>Last Occurrence</th>\n                                <th>Trade Signal</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {CandlestickSignals.map((data, index) => (\n                                <tr key={index}>\n                                  <td>{data[0]}</td>\n                                  <td>{data[1]}</td>\n                                  <td>{data[2]}</td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        </Card.Body>\n                      </Card>\n                    </div>\n\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                      <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                        <Card.Header>Arbitrage Spread</Card.Header>\n                        <Card.Body className=\"padding-1px\">\n                          {this.state.isLoading ? (\n                            <Loader />\n                          ) : (\n                            <Table\n                              size=\"sm\"\n                              striped\n                              bordered\n                              hover\n                              variant=\"dark\"\n                            >\n                              <thead>\n                                <tr>\n                                  <th>Magnitude</th>\n                                  <th># Buy Sign</th>\n                                  <th>Buy Ret</th>\n                                  <th># Sell Sign</th>\n                                  <th>Sell Ret</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {Array.isArray(SignalCategorization) &&\n                                  SignalCategorization.map((data, index) => (\n                                    <tr key={index}>\n                                      <td>{data.Magnitude}</td>\n                                      <td>{data[\"# Buy Sign\"]}</td>\n                                      <td>{data[\"Buy Ret\"]}</td>\n                                      <td>{data[\"# Sell Sign\"]}</td>\n                                      <td>{data[\"Sell Ret\"]}</td>\n                                    </tr>\n                                  ))}\n                              </tbody>\n                            </Table>\n                          )}\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                  <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                    <Card.Header>Price Chart</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      <ChartComponent data={Full_Day_Prices} />\n                    </Card.Body>\n                  </Card>\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                  <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                    <Card.Header>Arb Time Series</Card.Header>\n\n                    <Card.Body className=\"padding-1px\">\n                      {this.state.isLoading ? (\n                        <Loader />\n                      ) : (\n                        <LineChartForHistArb\n                          data={this.state.ArbitrageLineChart}\n                        />\n                      )}\n                    </Card.Body>\n                  </Card>\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n                  <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                    <Card.Header>ETF Change % Vs NAV change %</Card.Header>\n\n                    <Card.Body className=\"padding-1px\">\n                      {this.state.isLoading ? (\n                        <Loader />\n                      ) : (\n                        <ScatterPlot data={scatterPlotData} />\n                      )}\n                    </Card.Body>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  // Parse Data For Stock Price Chart\n  parseData(parse) {\n    return function (d) {\n      d.date = parse(d.date);\n      d.open = +parseFloat(d.open);\n      d.high = +parseFloat(d.high);\n      d.low = +parseFloat(d.low);\n      d.close = +parseFloat(d.close);\n      d.volume = +parseInt(d.TickVolume);\n\n      return d;\n    };\n  }\n}\n\nexport default Live_Arbitrage_Single;\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Live_Arbitrage_Single } from \"../Pages/Live_Arbitrage_Single\";\nimport { useSelector } from \"react-redux\";\n\nconst LiveArbitrageSingleRoutes = () => {\n  const { ETF } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/live-arbitrage-single/:ETF\"\n        component={Live_Arbitrage_Single}\n      />\n      <Redirect\n        from=\"/live-arbitrage-single\"\n        to={`/live-arbitrage-single/${ETF}`}\n      />\n    </Switch>\n  );\n};\n\nexport default LiveArbitrageSingleRoutes;\n"],"sourceRoot":""}