{"version":3,"sources":["Common_Components/Loader/Loader.jsx","Common_Components/PieChart/CommonPieChart.jsx","Component/Table.js","Component/CombinedPieCharts.jsx","Component/LineChartForHistArb.js","Component/ScatterPlott.js","Component/StockCharts/CandleStickChartWithMACDIndicator.js","Component/StockCharts/updatingDataWrapper.js","Component/StockCharts/Chart.js","Component/StockPriceChart.js","Pages/Live_Arbitrage_Single/LiveStatusWindow.jsx","Pages/Live_Arbitrage_Single/LiveArbitrageTable.jsx","Pages/Live_Arbitrage_Single/Live_Arbitrage_Main.jsx","Routes/LiveArbitrageSingleRoutes.jsx"],"names":["spinnerStyle","fontSize","Loader","className","style","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","convertData","data","element","convertedData","Object","entries","forEach","key","push","CommonPieChart","state","chartname","activeIndex","COLORS","onPieEnter","index","setState","prevProps","this","tempData","width","height","activeShape","dataKey","onMouseEnter","map","entry","length","PureComponent","stringConstructor","constructor","arrayConstructor","objectConstructor","whatIsIt","object","undefined","RenderRow","k","keys","i","RenderRowClickable","onClick","submitFn","AppTable","getKeys","someJSON","MainKeys","size","striped","bordered","hover","variant","unshift","getHeader","Key1","row","values","clickableTable","CombinedPieCharts","useState","show","setShow","handleClose","dialogClassName","onHide","Header","closeButton","Title","Body","xs","md","etfmoversDictCount","highestChangeDictCount","Footer","LineChartForHistArb","console","log","padding","top","right","left","bottom","strokeDasharray","type","dot","ScatterPlot","unit","cursor","React","Component","macdAppearance","macd","signal","divergence","mouseEdgeAppearance","textFill","strokeOpacity","strokeWidth","arrowWidth","CandleStickChartWithMACDIndicator","initialData","ratio","ema26","ema","id","options","windowSize","merge","c","accessor","ema12","macdCalculator","fast","slow","smaVolume50","sma","sourcePath","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","margin","seriesName","yExtents","high","low","tickStroke","axisAt","orient","showTicks","outerTickSize","ticks","at","displayFormat","format","yAccessor","itemType","edgeAt","close","open","origin","e","with","LabelAnnotation","when","usingProps","fontFamily","opacity","text","yScale","datum","volume","w","h","tickFormat","timeFormat","rectRadius","appearance","defaultProps","fitWidth","ChartComponent","UpdatingComponentHOC","slice","speed","onKeyPress","bind","document","addEventListener","interval","clearInterval","removeEventListener","keyCode","which","func","max","delta","min","setInterval","ref","displayName","getDisplayName","updatingDataWrapper","didupdate","nextProps","DataCopy","LiveStatusWindow","Card","bg","HighPrice","OpenPrice","ClosePrice","LowPrice","CurrentTime","LiveColor","ETFStatus","Signal","SignalStrength","LiveArbitrage","LiveSpread","last_minute_signal","LiveArbitrageTable","Table","Time","reverse","cls","getRowsData","Live_Arbitrage_Single","Full_Day_Arbitrage_Data","Full_Day_Prices","scatterPlotData","LiveVWPrice","parseDate","timeParse","pnlstatementforday","ArbitrageLineChart","CandlestickSignals","isLoading","dataFetchInterval","Date","getSeconds","UpdateArbitragDataTables","fetchETFLiveData","intervalId","match","params","ETF","axios","get","then","res","JSON","parse","Arbitrage","tsvParse","Prices","parseData","SignalCategorization","catch","err","SignalInfo","Strength","parseFloat","parseInt","TickVolume","LiveArbitrageSingleRoutes","useSelector","navbar","ProtectedRoute","path","component","from","to"],"mappings":"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","file":"static/js/7.e1e454e1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst spinnerStyle = {\n  fontSize:'14px',\n  \n};\n\nconst Loader = () => {\n  return (\n    <div className=\"loader center\">\n      <i className=\"fa fa-spinner fa-spin\" style={spinnerStyle}></i>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${value}`}</text>\n    </g>\n  );\n};\n\nconst convertData = (data = {}, element = \"\") => {\n  const convertedData = [];\n  Object.entries(data).forEach(([key, value]) =>\n    convertedData.push({ name: key, value: value[element] })\n  );\n  return convertedData;\n};\n\nclass CommonPieChart extends PureComponent {\n  state = {\n    data: [],\n    chartname: \"\",\n    activeIndex: 0,\n    COLORS: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { data, element } = this.props;\n\n    if (data !== prevProps.data && typeof data === \"object\") {\n      const tempData = convertData(data, element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.data === \"object\") {\n      const tempData = convertData(this.props.data, this.props.element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <PieChart width={350} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={this.state.data}\n          cx={175}\n          cy={150}\n          innerRadius={25}\n          outerRadius={90}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell\n              key={index}\n              fill={this.state.COLORS[index % this.state.COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default CommonPieChart;\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../static/css/TableStyle.css'\r\n\r\nvar stringConstructor = \"test\".constructor;\r\nvar arrayConstructor = [].constructor;\r\nvar objectConstructor = ({}).constructor;\r\n\r\nfunction whatIsIt(object) {\r\n  if (object === null) {\r\n    return \"null\";\r\n  }\r\n  if (object === undefined) {\r\n    return \"undefined\";\r\n  }\r\n  if (object.constructor === stringConstructor) {\r\n    return \"String\";\r\n  }\r\n  if (object.constructor === arrayConstructor) {\r\n    return \"Array\";\r\n  }\r\n  if (object.constructor === objectConstructor) {\r\n    return \"Object\";\r\n  }\r\n  return \"don't know\";\r\n}\r\n\r\nconst AppTable = (props) => {\r\n  // getting all te keys to the json data to diectly fetch the data later\r\n  const getKeys = function(someJSON){\r\n    return Object.keys(someJSON);\r\n  }\r\n\r\n  const MainKeys = getKeys(props.data);\r\n  \r\n  // getting the headings for the heading of the table\r\n  const getHeader = function(){\r\n    // console.log(whatIsIt(props.data[MainKeys[0]]));\r\n    var keys = (whatIsIt(props.data[MainKeys[0]]) === \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    keys.unshift(\"\");\r\n    // console.log(keys);\r\n    return keys.map((key, index)=>{\r\n      // console.log(key);\r\n      return <th key={key}>{key}</th>\r\n    })\r\n  }\r\n  \r\n  // getting data for each of the rows\r\n  const getRowsData = function(){\r\n    // var keys = (whatIsIt(props.data[MainKeys[0]]) != \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    return MainKeys.map((Key1, index) => {\r\n      var row = (typeof(props.data[Key1]) == Object) ? props.data[Key1].values() : props.data[Key1];\r\n      // console.log(row);\r\n    \r\n      if (props.clickableTable=='True'){\r\n        //console.log(\"Clickable was called\");\r\n        return <RenderRowClickable k={Key1} key={index} data={row} submitFn={props.submitFn}/>\r\n      } else{\r\n        //console.log(\"None-Clickable was called\");\r\n        return <RenderRow k={Key1} key={index} data={row} />\r\n      }\r\n    }) \r\n  }\r\n  \r\n  const TableStyling = {\r\n    fontSize: '11px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n      <Table size=\"sm\" striped bordered hover variant=\"dark\" style={TableStyling}>\r\n      <thead className=\"TableHead\">\r\n        <tr>{getHeader()}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {getRowsData()}\r\n      </tbody>\r\n      </Table>\r\n    </div>          \r\n  );\r\n}\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRow = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRowClickable = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr onClick={() => props.submitFn(props.k)}>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppTable","import React, { useState } from \"react\";\nimport { Button, Modal, Row, Card, Col } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../Common_Components/PieChart\";\n\nconst CombinedPieCharts = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\n        Etf Movers\n      </Button>\n\n      <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Underlying Holdings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col xs={12} md={12}>\n              <Card>\n                <Card.Header className=\"CustomCardHeader text-white CustomBackGroundColor\">\n                  Holdings\n                </Card.Header>\n                <Card.Body className=\"CustomCardBody text-white\">\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Etf Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.etfmoversDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Market Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.highestChangeDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CombinedPieCharts;\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Brush,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst LineChartForHistArb = (props) => {\n  const { data } = props;\n  console.log(data);\n  return (\n    <>\n      {data.length ? (\n        <ResponsiveContainer\n          width=\"100%\"\n          height={280}\n          padding={{ top: 0, right: 0, left: 0, bottom: 0 }}\n        >\n          <LineChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis className=\"recharts-cartesian-axis-tick\" dataKey=\"Time\" stroke=\"#58FF33\"/>\n            <YAxis className=\"recharts-cartesian-axis-tick\" stroke=\"#58FF33\"/>\n            <Tooltip />\n            <Legend />\n            <Brush dataKey=\"Time\" height={30} stroke=\"#8884d8\" />\n            <Line\n              type=\"monotone\"\n              dataKey=\"Arbitrage in $\"\n              stroke=\"#8884d8\"\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n};\n\nexport default LineChartForHistArb;\n","import React from \"react\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  \n} from \"recharts\";\n\nclass ScatterPlot extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { data, width, height } = this.props;\n    return (\n      <ScatterChart width={width || 400} height={height || 240}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          stroke=\"#58FF33\"\n          dataKey={\"Net Asset Value Change%\"}\n          type=\"number\"\n          name=\"Net Asset Value Chage %\"\n          unit=\"%\"\n        />\n        <YAxis\n          stroke=\"#58FF33\"\n          dataKey={\"ETF Change Price %\"}\n          type=\"number\"\n          name=\"ETF Change Price %\"\n          unit=\"%\"\n        />\n        <Scatter name=\"A school\" data={data} fill=\"#3336FF\" />\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n      </ScatterChart>\n    );\n  }\n}\n\nexport default ScatterPlot;\n","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tAreaSeries,\n\tCandlestickSeries,\n\tLineSeries,\n\tMACDSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tMACDTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, macd, sma } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\n\nimport { LabelAnnotation,Annotate, Label } from \"react-stockcharts/lib/annotation\";\n\nconst macdAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfill: {\n\t\tdivergence: \"#4682B4\"\n\t},\n};\n\nconst mouseEdgeAppearance = {\n\ttextFill: \"#542605\",\n\tstroke: \"#05233B\",\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tarrowWidth: 5,\n\tfill: \"#BCDEFA\",\n};\n\n\nclass CandleStickChartWithMACDIndicator extends React.Component {\n\trender() {\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst smaVolume50 = sma()\n\t\t\t.id(3)\n\t\t\t.options({\n\t\t\t\twindowSize: 50,\n\t\t\t\tsourcePath: \"volume\",\n\t\t\t})\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\n\t\t\t.accessor(d => d.smaVolume50);\n\n\t\tconst calculatedData = smaVolume50(macdCalculator(ema12(ema26(initialData))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst longAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"green\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D1\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.low),\n\t\t};\n\n\t\tconst shortAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"red\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D3\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.high),\n\t\t};\n\n\t\tconst colorOfEMA = {\n\t\t\tfill: \"red\"\n\t\t}\n\n\t\treturn (\n\t\t\t<ChartCanvas height={550}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 5, bottom: 5 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t>\n\t\t\t\t<Chart id={1} height={300}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema26.accessor(), ema12.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<LineSeries yAccessor={ema26.accessor()} stroke={ema26.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()}/>\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema26.accessor()} fill={ema26.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema12.accessor()} fill={ema12.stroke()} />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close}\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#A2F5BF\" : \"#F9ACAA\"}\n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#0B4228\" : \"#6A1B19\"}\n\t\t\t\t\t\ttextFill={d => d.close > d.open ? \"#0B4228\" : \"#420806\"}\n\t\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\tarrowWidth={2}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema26.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema26.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema26.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema12.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema12.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema12.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Sold\"}\n\t\t\t\t\t\tusingProps={longAnnotationProps} />\n\t\t\t\t\t\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Bought\"}\n\t\t\t\t\t\tusingProps={shortAnnotationProps} />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2} height={100}\n\t\t\t\t\tyExtents={[d => d.volume, smaVolume50.accessor()]}\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={3} height={100}\n\t\t\t\t\tyExtents={macdCalculator.accessor()}\n\t\t\t\t\torigin={(w, h) => [0, h - 150]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={2} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")}\n\t\t\t\t\t\trectRadius={5}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<MACDSeries yAccessor={d => d.macd}\n\t\t\t\t\t\t{...macdAppearance} />\n\t\t\t\t\t<MACDTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.macd}\n\t\t\t\t\t\toptions={macdCalculator.options()}\n\t\t\t\t\t\tappearance={macdAppearance}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor stroke=\"#FFFFFF\" />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithMACDIndicator.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithMACDIndicator.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithMACDIndicator = fitWidth(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithMACDIndicator;\n","\nimport React from \"react\";\n\nfunction getDisplayName(ChartComponent) {\n\tconst name = ChartComponent.displayName || ChartComponent.name || \"ChartComponent\";\n\treturn name;\n}\n\nexport default function updatingDataWrapper(ChartComponent) {\n\tconst LENGTH = 130;\n\n\tclass UpdatingComponentHOC extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tlength: LENGTH,\n\t\t\t\tdata: this.props.data.slice(0, LENGTH),\n\t\t\t};\n\t\t\tthis.speed = 1000;\n\t\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t\t}\n\t\tcomponentDidMount() {\n\t\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tcomponentWillUnmount() {\n\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tonKeyPress(e) {\n\t\t\tconst keyCode = e.which;\n\t\t\tconsole.log(keyCode);\n\t\t\tswitch (keyCode) {\n\t\t\tcase 50: {\n\t\t\t\t\t// 2 (50) - Start alter data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 80:\n\t\t\t\t\t// P (80)\n\t\t\tcase 49: {\n\t\t\t\t\t// 1 (49) - Start Push data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 27: {\n\t\t\t\t\t// ESC (27) - Clear interval\n\t\t\t\tthis.func = null;\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 107: {\n\t\t\t\t\t// + (107) - increase the this.speed\n\t\t\t\tthis.speed = Math.max(this.speed / 2, 50);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 109:\n\t\t\tcase 189: {\n\t\t\t\t\t// - (189, 109) - reduce the this.speed\n\t\t\t\tconst delta = Math.min(this.speed, 1000);\n\t\t\t\tthis.speed = this.speed + delta;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t\tif (this.func) {\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tconsole.log(\"this.speed  = \", this.speed);\n\t\t\t\tthis.interval = setInterval(this.func, this.speed);\n\t\t\t}\n\t\t}\n\t\trender() {\n\t\t\tconst { type } = this.props;\n\t\t\tconst { data } = this.state;\n\n\t\t\treturn <ChartComponent ref=\"component\" data={data} type={type} />;\n\t\t}\n\t}\n\tUpdatingComponentHOC.defaultProps = {\n\t\ttype: \"svg\",\n\t};\n\tUpdatingComponentHOC.displayName = `updatingDataWrapper(${ getDisplayName(ChartComponent) })`;\n\n\treturn UpdatingComponentHOC;\n}","\nimport CandleStickChartWithMACDIndicator from \"./CandleStickChartWithMACDIndicator\";\nimport updatingDataWrapper from \"./updatingDataWrapper\";\n\nconst CandleStickChartWithUpdatingData = updatingDataWrapper(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithUpdatingData;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Chart from './StockCharts/Chart';\nimport CandleStickChartWithMACDIndicator from './StockCharts/CandleStickChartWithMACDIndicator';\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nclass ChartComponent extends React.Component {\n\t\n\tstate={\n\t\tdata: this.props.data,\n\t\tdidupdate:false\n\t}\n\t\n\tshouldComponentUpdate(nextProps) {\n\t  // You don't have to do this check first, but it can help prevent an unneeded render\n\t  \tif (nextProps.data.data !== this.state.data && nextProps.data.data!==undefined) {\n\t\t\tvar DataCopy =  this.state.data;\n\t  \t\tDataCopy = nextProps.data.data;\n\t  \t\tthis.setState({ \n\t  \t\t\tdata:DataCopy,\n\t  \t\t\tdidupdate:true\n\t  \t\t});\n\t  \t\treturn true\n\t  \t}\n\t  \treturn false\n\t}\n\n\trender() {\n\t\tif (this.state.data == '') {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\t\tif (this.state.didupdate){\n\t\t\tconsole.log(this.state.data);\n\t\t\treturn (\n\t\t\t<CandleStickChartWithMACDIndicator data={this.state.data} />\n\t\t\t)\t\n\t\t\tthis.state.didupdate=false;\n\t\t}\n\t}\n}\n\nexport default ChartComponent;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../../static/css/Live_Arbitrage.css\";\n\nconst LiveStatusWindow = (props) => {\n  return (\n    <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n      <Card.Header>\n      <div>\n        <span className=\"h4\"></span>\n        H: <span className=\"text-muted\">{props.HighPrice} </span>\n        O: <span className=\"text-muted\">{props.OpenPrice} </span>\n        C: <span className=\"text-muted\">{props.ClosePrice} </span>\n        L: <span className=\"text-muted\">{props.LowPrice} </span>\n      </div>\n        <div>\n          Time: <span className=\"text-muted\">{props.CurrentTime}</span>\n        </div>\n      </Card.Header>\n\n      <Card.Body>\n        <div>\n            <span className={props.LiveColor}  style={{fontSize:\"15px\"}}>\n              ETF Status: {props.ETFStatus}\n            </span>\n        </div>\n        <div>\n            <span className={props.LiveColor}  style={{fontSize:\"15px\"}}>Signal: {props.Signal}</span>\n        </div>\n        <div>\n          <span className={props.LiveColor} style={{fontSize:\"15px\"}}>\n            Strength: {props.SignalStrength}\n          </span>\n        </div>\n\n        <div>\n          <span className=\"\">$ Arbitrage: {props.LiveArbitrage}</span>\n        </div>\n        <div>\n          <span className=\"\">$ Spread: {props.LiveSpread}</span>\n        </div>\n        <div>\n          <span className=\"\">Candlestick Observed: {props.last_minute_signal}</span>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LiveStatusWindow;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst LiveArbitrageTable = (props) => {\n  console.log(props)\n  if (props.data[\"Arbitrage in $\"] == undefined) {\n    return \"Loading\";\n  }\n  const getKeys = function (someJSON) {\n    return Object.keys(someJSON);\n  };\n\n  const getRowsData = () => {\n    const Time = getKeys(props.data.Time).reverse();\n    return Time.map((key, index) => {\n      let cls = \"\";\n\n      if (props.data[\"Over Bought/Sold\"][key] == \"Over Bought\") {\n        cls = \"red\";\n      } else if (props.data[\"Over Bought/Sold\"][key] == \"Over Sold\") {\n        cls = \"green\";\n      } else {\n        cls = \"\";\n      }\n\n      return (\n        <tr key={index}>\n          <td className={cls}>{props.data[\"Time\"][key]}</td>\n          <td className={cls}>{props.data[\"Arbitrage in $\"][key]}</td>\n          <td className={cls}>{props.data[\"ETF Trading Spread in $\"][key]}</td>\n          <td className={cls}>{props.data[\"Magnitude of Arbitrage\"][key]}</td>\n          <td className={cls}>{props.data[\"Over Bought/Sold\"][key]}</td>\n          <td>{props.data[\"ETF Price\"][key]}</td>\n          <td>{props.data[\"ETF Change Price %\"][key]}</td>\n          <td>{props.data[\"TickVolume\"][key]}</td>\n          <td>{props.data[\"ETFMover%1_ticker\"][key]}</td>\n          <td>{props.data[\"Change%1_ticker\"][key]}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className=\"Table\">\n      <Table size=\"sm\" striped bordered hover variant=\"dark\">\n        <thead className=\"TableHead\">\n          <tr>\n            <td>Time</td>\n            <td>$Arbitrage</td>\n            <td>$Spread</td>\n            <td>$Absolute Arbitrage</td>\n            <td>Over Bought/Sold</td>\n            <td>Price</td>\n            <td>T</td>\n            <td>TickVolume</td>\n            <th>Etf Mover</th>\n            <th>Most Change%</th>\n          </tr>\n        </thead>\n        <tbody>{getRowsData()}</tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default LiveArbitrageTable;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport { tsvParse, csvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport ChartComponent from \"../../Component/StockPriceChart\";\nimport AppTable from \"../../Component/Table.js\";\nimport LiveStatusWindow from \"./LiveStatusWindow\";\nimport \"../../static/css/Live_Arbitrage.css\";\nimport CombinedPieCharts from \"../../Component/CombinedPieCharts\";\nimport LiveArbitrageTable from \"./LiveArbitrageTable\";\nimport LineChartForHistArb from \"../../Component/LineChartForHistArb\";\nimport { Loader } from \"../../Common_Components/Loader\";\nimport ScatterPlot from \"../../Component/ScatterPlott\";\nimport { CommonNavBar } from \"../../Common_Components/NavBar\";\nimport { CommonPieChart } from \"../../Common_Components/PieChart\";\nimport \"./Styles/style.css\";\nimport { CardGroup } from \"react-bootstrap\";\n\nclass Live_Arbitrage_Single extends React.Component {\n  state = {\n    Full_Day_Arbitrage_Data: {},\n    Full_Day_Prices: \"\",\n    scatterPlotData: \"\",\n    LiveArbitrage: \"\",\n    LiveSpread: \"\",\n    // Prices\n    LiveVWPrice: \"\",\n    OpenPrice: \"\",\n    ClosePrice: \"\",\n    HighPrice: \"\",\n    LowPrice: \"\",\n    parseDate: timeParse(\"%Y-%m-%d %H:%M:%S\"),\n    CurrentTime: \"\",\n    // Signal\n    ETFStatus: \"\",\n    Signal: \"\",\n    SignalStrength: \"\",\n    pnlstatementforday: \"\",\n    LiveColor: \"\",\n    ArbitrageLineChart: \"\",\n    etfmoversDictCount: \"\",\n    highestChangeDictCount: \"\",\n    CandlestickSignals:[],\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.state.isLoading = true;\n    this.fetchETFLiveData();\n    this.UpdateArbitragDataTables(false);\n    this.intervalId = this.dataFetchInterval();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.ETF !== this.props.match.params.ETF) {\n      this.state.isLoading = true;\n      clearInterval(this.intervalId);\n      this.fetchETFLiveData();\n      this.UpdateArbitragDataTables(false);\n      this.intervalId = this.dataFetchInterval();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  dataFetchInterval = () =>\n    setInterval(() => {\n      if (new Date().getSeconds() == 8) {\n        this.UpdateArbitragDataTables(true);\n        this.fetchETFLiveData();\n      }\n    }, 1000);\n\n  fetchETFLiveData() {\n    const { ETF } = this.props.match.params;\n    if (ETF) {\n      axios\n        .get(`/api/ETfLiveArbitrage/Single/${ETF}`)\n        .then((res) => {\n          this.setState({\n            ...this.state,\n            Full_Day_Arbitrage_Data: JSON.parse(res.data.Arbitrage),\n            Full_Day_Prices: {\n              data: tsvParse(\n                res.data.Prices,\n                this.parseData(this.state.parseDate)\n              ),\n            },\n            pnlstatementforday: JSON.parse(res.data.pnlstatementforday),\n            SignalCategorization: JSON.parse(res.data.SignalCategorization),\n            scatterPlotData: JSON.parse(res.data.scatterPlotData),\n            ArbitrageLineChart: res.data.ArbitrageLineChart,\n            etfmoversDictCount: JSON.parse(res.data.etfmoversDictCount),\n            highestChangeDictCount: JSON.parse(res.data.highestChangeDictCount),\n            CandlestickSignals: res.data.CandlestickSignals,\n            last_minute_signal: res.data.last_minute_signal,\n            isLoading: false,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  UpdateArbitragDataTables() {\n    const { ETF } = this.props.match.params;\n    if (ETF) {\n      axios\n        .get(`/api/ETfLiveArbitrage/Single/UpdateTable/${ETF}`)\n        .then((res) => {\n          this.setState({\n            ...this.state,\n            LiveArbitrage: res.data.Arbitrage[\"Arbitrage in $\"][0],\n            LiveSpread: res.data.Arbitrage[\"ETF Trading Spread in $\"][0],\n            CurrentTime: res.data.Arbitrage[\"Time\"][0],\n            LiveVWPrice: res.data.Prices[\"VWPrice\"][0],\n            OpenPrice: res.data.Prices[\"open\"][0],\n            ClosePrice: res.data.Prices[\"close\"][0],\n            HighPrice: res.data.Prices[\"high\"][0],\n            LowPrice: res.data.Prices[\"low\"][0],\n            ETFStatus: res.data.SignalInfo.ETFStatus,\n            Signal: res.data.SignalInfo.Signal,\n            SignalStrength: res.data.SignalInfo.Strength,\n            LiveColor:\n              res.data.Arbitrage[\"Arbitrage in $\"][0] > 0\n                ? \"text-danger\"\n                : res.data.Arbitrage[\"Arbitrage in $\"][0] == 0\n                ? \"text-muted\"\n                : \"text-success\",\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  render() {\n    const { ETF } = this.props.match.params;\n    const {\n      HighPrice,\n      OpenPrice,\n      ClosePrice,\n      LowPrice,\n      SignalStrength,\n      CurrentTime,\n      ETFStatus,\n      Signal,\n      LiveArbitrage,\n      LiveSpread,\n      LiveColor,\n      scatterPlotData,\n      SignalCategorization,\n      pnlstatementforday,\n      last_minute_signal,\n    } = this.state;\n\n    return (\n      <>\n        <CommonNavBar />\n        <div className=\"container-fluid font-size-sm\">\n          <div className=\"row\">\n            \n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n              <div className=\"row\">\n                \n                <div className=\"col-lg-8 col-md-8 col-sm-12 padding-0\">\n                    <div className=\"FullPageDiv\"  style={{ height: \"92vh\" }}>\n                      <Card bg=\"dark\" text=\"white\">\n                        <Card.Header className=\"flex-row\">\n                          <span>Live Arbitrage {ETF}</span>\n                          <div className=\"margin-left-auto\">\n                            <CombinedPieCharts\n                              etfmoversDictCount={this.state.etfmoversDictCount}\n                              highestChangeDictCount={this.state.highestChangeDictCount}\n                            />\n                          </div>\n                        </Card.Header>\n                        <Card.Body className=\"padding-1px overflow-auto\">\n                          {this.state.isLoading ? (\n                            <Loader />\n                          ) : (\n                            <LiveArbitrageTable\n                              data={this.state.Full_Day_Arbitrage_Data}\n                            />\n                          )}\n                        </Card.Body>\n                      </Card>\n                    </div>\n                </div>\n                  \n                <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                        <LiveStatusWindow\n                          HighPrice={HighPrice}\n                          OpenPrice={OpenPrice}\n                          ClosePrice={ClosePrice}\n                          LowPrice={LowPrice}\n                          SignalStrength={SignalStrength}\n                          CurrentTime={CurrentTime}\n                          ETFStatus={ETFStatus}\n                          Signal={Signal}\n                          LiveArbitrage={LiveArbitrage}\n                          LiveSpread={LiveSpread}\n                          LiveColor={LiveColor}\n                          last_minute_signal={last_minute_signal}\n                        />\n                    </div>\n\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                          <Card className=\"height-100\" bg=\"dark\" text=\"white\">\n                          <Card.Header>Alpha Candle Stick Pattern Signals</Card.Header>\n\n                          <Card.Body className=\"padding-1px overflow-auto\">\n                            <Table size=\"sm\" striped bordered hover variant=\"dark\" >\n                                <thead>\n                                  <tr>\n                                    <th>Candle Type</th>\n                                    <th>Last Occurrence</th>\n                                    <th>Trade Signal</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {this.state.CandlestickSignals.map((data, index)=>  <tr key={index}>\n                                    <td>{data[0]}</td>\n                                    <td>{data[1]}</td>\n                                    <td>{data[2]}</td>\n                                    </tr>\n                                    )\n                                  }\n                                </tbody>\n                              </Table>\n                          </Card.Body>\n                        </Card>\n                    </div>\n\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                        <Card className=\"height-100\" bg=\"dark\" text=\"white\">\n                          <Card.Header>Signal Performace</Card.Header>\n\n                          <Card.Body className=\"padding-1px\">\n                            {this.state.isLoading ? (\n                              <Loader />\n                            ) : (\n                              <AppTable data={pnlstatementforday} />\n                            )}\n                          </Card.Body>\n                        </Card>\n                    </div>\n\n                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                      <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                          <Card.Header>Arbitrage Spread</Card.Header>\n                        <Card.Body className=\"padding-1px\">\n                            {this.state.isLoading ? (\n                              <Loader />\n                            ) : (\n                              <AppTable data={SignalCategorization} />\n                            )}\n                          </Card.Body>\n                        </Card>\n                    </div>\n\n\n                  </div>\n                </div>\n\n                \n              </div>\n            </div>\n            \n            <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n              <div className=\"row\">\n\n                <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                  <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                    <Card.Header>Price Chart</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      <ChartComponent data={this.state.Full_Day_Prices} />\n                    </Card.Body>\n                  </Card>\n                </div>\n\n                \n                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                  <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                    <Card.Header>Arb Time Series</Card.Header>\n\n                    <Card.Body className=\"padding-1px\">\n                      {this.state.isLoading ? (\n                        <Loader />\n                      ) : (\n                        <LineChartForHistArb data={this.state.ArbitrageLineChart} />\n                      )}\n                    </Card.Body>\n                  </Card>\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n                  <Card bg=\"dark\" text=\"white\" className=\"height-100\">\n                    <Card.Header>ETF Change % Vs NAV change %</Card.Header>\n\n                    <Card.Body className=\"padding-1px\">\n                      {this.state.isLoading ? (\n                        <Loader />\n                      ) : (\n                        <ScatterPlot data={scatterPlotData} />\n                      )}\n                    </Card.Body>\n                  </Card>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n\n\n\n        </div>\n      </>\n    );\n  }\n\n  // Parse Data For Stock Price Chart\n  parseData(parse) {\n    return function (d) {\n      d.date = parse(d.date);\n      d.open = +parseFloat(d.open);\n      d.high = +parseFloat(d.high);\n      d.low = +parseFloat(d.low);\n      d.close = +parseFloat(d.close);\n      d.volume = +parseInt(d.TickVolume);\n\n      return d;\n    };\n  }\n}\n\nexport default Live_Arbitrage_Single;\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Live_Arbitrage_Single } from \"../Pages/Live_Arbitrage_Single\";\nimport { useSelector } from \"react-redux\";\n\nconst LiveArbitrageSingleRoutes = () => {\n  const { ETF } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/live-arbitrage-single/:ETF\"\n        component={Live_Arbitrage_Single}\n      />\n      <Redirect\n        from=\"/live-arbitrage-single\"\n        to={`/live-arbitrage-single/${ETF}`}\n      />\n    </Switch>\n  );\n};\n\nexport default LiveArbitrageSingleRoutes;\n"],"sourceRoot":""}