{"version":3,"sources":["Common_Components/Loader/Loader.jsx","Common_Components/PieChart/CommonPieChart.jsx","Component/Table.js","Component/CombinedPieCharts.jsx","Component/LineChartForHistArb.js","Component/ScatterPlott.js","Component/StockCharts/CandleStickChartWithMACDIndicator.js","Component/StockCharts/updatingDataWrapper.js","Component/StockCharts/Chart.js","Component/StockPriceChart.js","Pages/Historical_Arbitrage/EtfArbitrageTable.jsx","Pages/Historical_Arbitrage/DailyChangeUnderlying.jsx","Pages/Historical_Arbitrage/Historical_Arbitrage_Main.jsx","Routes/HistArbiageRoutes.jsx"],"names":["spinnerStyle","fontSize","Loader","className","style","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","convertData","data","element","convertedData","Object","entries","forEach","key","push","CommonPieChart","state","chartname","activeIndex","COLORS","onPieEnter","index","setState","prevProps","this","tempData","width","height","activeShape","dataKey","onMouseEnter","map","entry","length","PureComponent","stringConstructor","constructor","arrayConstructor","objectConstructor","whatIsIt","object","undefined","RenderRow","k","keys","i","RenderRowClickable","onClick","submitFn","AppTable","getKeys","someJSON","MainKeys","size","striped","bordered","hover","variant","unshift","getHeader","Key1","row","values","clickableTable","CombinedPieCharts","useState","show","setShow","handleClose","dialogClassName","onHide","Header","closeButton","Title","Body","xs","md","etfmoversDictCount","highestChangeDictCount","Footer","LineChartForHistArb","console","log","padding","top","right","left","bottom","strokeDasharray","type","dot","ScatterPlot","unit","cursor","React","Component","macdAppearance","macd","signal","divergence","mouseEdgeAppearance","textFill","strokeOpacity","strokeWidth","arrowWidth","CandleStickChartWithMACDIndicator","initialData","ratio","ema26","ema","id","options","windowSize","merge","c","accessor","ema12","macdCalculator","fast","slow","smaVolume50","sma","sourcePath","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","margin","seriesName","yExtents","high","low","tickStroke","axisAt","orient","showTicks","outerTickSize","ticks","at","displayFormat","format","yAccessor","itemType","edgeAt","close","open","origin","e","with","LabelAnnotation","when","usingProps","fontFamily","opacity","text","yScale","datum","volume","w","h","tickFormat","timeFormat","rectRadius","appearance","defaultProps","fitWidth","ChartComponent","UpdatingComponentHOC","slice","speed","onKeyPress","bind","document","addEventListener","interval","clearInterval","removeEventListener","keyCode","which","func","max","delta","min","setInterval","ref","displayName","getDisplayName","updatingDataWrapper","didupdate","nextProps","DataCopy","EtfArbitrageTable","Table","Array","isArray","cls","DailyChangeUnderlyingFunc","symbol","DailyChangepct","HistoricalArbitrage","etfArbitrageTableData","historicalArbitrageData","scatterPlotData","etfPriceData","ArbitrageCumSum","isLoading","underlyingPerformance","parseDate","timeParse","fetchData","ETF","startDate","Axios","get","then","etfhistoricaldata","PNLStatementForTheDay","tsvParse","etfPrices","parseData","SignalCategorization","catch","err","etfUnderlyingPerformance","res","parse","parseFloat","parseInt","match","params","prevPropsETF","prevPropsStartDate","Card","bg","DailyChangeUnderlying","connect","navbar","HistArbiageRoutes","useSelector","ProtectedRoute","path","component","from","to"],"mappings":"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","file":"static/js/8.19d8b5bf.chunk.js","sourcesContent":["import React from \"react\";\n\nconst spinnerStyle = {\n  fontSize:'14px',\n  \n};\n\nconst Loader = () => {\n  return (\n    <div className=\"loader center\">\n      <i className=\"fa fa-spinner fa-spin\" style={spinnerStyle}></i>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${value}`}</text>\n    </g>\n  );\n};\n\nconst convertData = (data = {}, element = \"\") => {\n  const convertedData = [];\n  Object.entries(data).forEach(([key, value]) =>\n    convertedData.push({ name: key, value: value[element] })\n  );\n  return convertedData;\n};\n\nclass CommonPieChart extends PureComponent {\n  state = {\n    data: [],\n    chartname: \"\",\n    activeIndex: 0,\n    COLORS: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { data, element } = this.props;\n\n    if (data !== prevProps.data && typeof data === \"object\") {\n      const tempData = convertData(data, element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.data === \"object\") {\n      const tempData = convertData(this.props.data, this.props.element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <PieChart width={350} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={this.state.data}\n          cx={175}\n          cy={150}\n          innerRadius={25}\n          outerRadius={90}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell\n              key={index}\n              fill={this.state.COLORS[index % this.state.COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default CommonPieChart;\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../static/css/TableStyle.css'\r\n\r\nvar stringConstructor = \"test\".constructor;\r\nvar arrayConstructor = [].constructor;\r\nvar objectConstructor = ({}).constructor;\r\n\r\nfunction whatIsIt(object) {\r\n  if (object === null) {\r\n    return \"null\";\r\n  }\r\n  if (object === undefined) {\r\n    return \"undefined\";\r\n  }\r\n  if (object.constructor === stringConstructor) {\r\n    return \"String\";\r\n  }\r\n  if (object.constructor === arrayConstructor) {\r\n    return \"Array\";\r\n  }\r\n  if (object.constructor === objectConstructor) {\r\n    return \"Object\";\r\n  }\r\n  return \"don't know\";\r\n}\r\n\r\nconst AppTable = (props) => {\r\n  // getting all te keys to the json data to diectly fetch the data later\r\n  const getKeys = function(someJSON){\r\n    return Object.keys(someJSON);\r\n  }\r\n\r\n  const MainKeys = getKeys(props.data);\r\n  \r\n  // getting the headings for the heading of the table\r\n  const getHeader = function(){\r\n    // console.log(whatIsIt(props.data[MainKeys[0]]));\r\n    var keys = (whatIsIt(props.data[MainKeys[0]]) === \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    keys.unshift(\"\");\r\n    // console.log(keys);\r\n    return keys.map((key, index)=>{\r\n      // console.log(key);\r\n      return <th key={key}>{key}</th>\r\n    })\r\n  }\r\n  \r\n  // getting data for each of the rows\r\n  const getRowsData = function(){\r\n    // var keys = (whatIsIt(props.data[MainKeys[0]]) != \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    return MainKeys.map((Key1, index) => {\r\n      var row = (typeof(props.data[Key1]) == Object) ? props.data[Key1].values() : props.data[Key1];\r\n      // console.log(row);\r\n    \r\n      if (props.clickableTable=='True'){\r\n        //console.log(\"Clickable was called\");\r\n        return <RenderRowClickable k={Key1} key={index} data={row} submitFn={props.submitFn}/>\r\n      } else{\r\n        //console.log(\"None-Clickable was called\");\r\n        return <RenderRow k={Key1} key={index} data={row} />\r\n      }\r\n    }) \r\n  }\r\n  \r\n  const TableStyling = {\r\n    fontSize: '11px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n      <Table size=\"sm\" striped bordered hover variant=\"dark\" style={TableStyling}>\r\n      <thead className=\"TableHead\">\r\n        <tr>{getHeader()}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {getRowsData()}\r\n      </tbody>\r\n      </Table>\r\n    </div>          \r\n  );\r\n}\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRow = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRowClickable = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr onClick={() => props.submitFn(props.k)}>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppTable","import React, { useState } from \"react\";\nimport { Button, Modal, Row, Card, Col } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../Common_Components/PieChart\";\n\nconst CombinedPieCharts = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\n        Etf Movers\n      </Button>\n\n      <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Underlying Holdings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col xs={12} md={12}>\n              <Card>\n                <Card.Header className=\"CustomCardHeader text-white CustomBackGroundColor\">\n                  Holdings\n                </Card.Header>\n                <Card.Body className=\"CustomCardBody text-white\">\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Etf Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.etfmoversDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Market Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.highestChangeDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CombinedPieCharts;\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Brush,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst LineChartForHistArb = (props) => {\n  const { data } = props;\n  console.log(data);\n  return (\n    <>\n      {data.length ? (\n        <ResponsiveContainer\n          width=\"100%\"\n          height={280}\n          padding={{ top: 0, right: 0, left: 0, bottom: 0 }}\n        >\n          <LineChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis className=\"recharts-cartesian-axis-tick\" dataKey=\"Time\" stroke=\"#58FF33\"/>\n            <YAxis className=\"recharts-cartesian-axis-tick\" stroke=\"#58FF33\"/>\n            <Tooltip />\n            <Legend />\n            <Brush dataKey=\"Time\" height={30} stroke=\"#8884d8\" />\n            <Line\n              type=\"monotone\"\n              dataKey=\"Arbitrage in $\"\n              stroke=\"#8884d8\"\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n};\n\nexport default LineChartForHistArb;\n","import React from \"react\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  \n} from \"recharts\";\n\nclass ScatterPlot extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { data, width, height } = this.props;\n    return (\n      <ScatterChart width={width || 400} height={height || 240}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          stroke=\"#58FF33\"\n          dataKey={\"Net Asset Value Change%\"}\n          type=\"number\"\n          name=\"Net Asset Value Chage %\"\n          unit=\"%\"\n        />\n        <YAxis\n          stroke=\"#58FF33\"\n          dataKey={\"ETF Change Price %\"}\n          type=\"number\"\n          name=\"ETF Change Price %\"\n          unit=\"%\"\n        />\n        <Scatter name=\"A school\" data={data} fill=\"#3336FF\" />\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n      </ScatterChart>\n    );\n  }\n}\n\nexport default ScatterPlot;\n","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tAreaSeries,\n\tCandlestickSeries,\n\tLineSeries,\n\tMACDSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tMACDTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, macd, sma } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\n\nimport { LabelAnnotation,Annotate, Label } from \"react-stockcharts/lib/annotation\";\n\nconst macdAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfill: {\n\t\tdivergence: \"#4682B4\"\n\t},\n};\n\nconst mouseEdgeAppearance = {\n\ttextFill: \"#542605\",\n\tstroke: \"#05233B\",\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tarrowWidth: 5,\n\tfill: \"#BCDEFA\",\n};\n\n\nclass CandleStickChartWithMACDIndicator extends React.Component {\n\trender() {\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst smaVolume50 = sma()\n\t\t\t.id(3)\n\t\t\t.options({\n\t\t\t\twindowSize: 50,\n\t\t\t\tsourcePath: \"volume\",\n\t\t\t})\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\n\t\t\t.accessor(d => d.smaVolume50);\n\n\t\tconst calculatedData = smaVolume50(macdCalculator(ema12(ema26(initialData))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst longAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"green\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D1\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.low),\n\t\t};\n\n\t\tconst shortAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"red\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D3\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.high),\n\t\t};\n\n\t\tconst colorOfEMA = {\n\t\t\tfill: \"red\"\n\t\t}\n\n\t\treturn (\n\t\t\t<ChartCanvas height={550}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 5, bottom: 5 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t>\n\t\t\t\t<Chart id={1} height={300}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema26.accessor(), ema12.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<LineSeries yAccessor={ema26.accessor()} stroke={ema26.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()}/>\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema26.accessor()} fill={ema26.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema12.accessor()} fill={ema12.stroke()} />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close}\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#A2F5BF\" : \"#F9ACAA\"}\n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#0B4228\" : \"#6A1B19\"}\n\t\t\t\t\t\ttextFill={d => d.close > d.open ? \"#0B4228\" : \"#420806\"}\n\t\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\tarrowWidth={2}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema26.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema26.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema26.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema12.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema12.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema12.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Sold\"}\n\t\t\t\t\t\tusingProps={longAnnotationProps} />\n\t\t\t\t\t\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Bought\"}\n\t\t\t\t\t\tusingProps={shortAnnotationProps} />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2} height={100}\n\t\t\t\t\tyExtents={[d => d.volume, smaVolume50.accessor()]}\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={3} height={100}\n\t\t\t\t\tyExtents={macdCalculator.accessor()}\n\t\t\t\t\torigin={(w, h) => [0, h - 150]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={2} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")}\n\t\t\t\t\t\trectRadius={5}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<MACDSeries yAccessor={d => d.macd}\n\t\t\t\t\t\t{...macdAppearance} />\n\t\t\t\t\t<MACDTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.macd}\n\t\t\t\t\t\toptions={macdCalculator.options()}\n\t\t\t\t\t\tappearance={macdAppearance}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor stroke=\"#FFFFFF\" />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithMACDIndicator.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithMACDIndicator.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithMACDIndicator = fitWidth(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithMACDIndicator;\n","\nimport React from \"react\";\n\nfunction getDisplayName(ChartComponent) {\n\tconst name = ChartComponent.displayName || ChartComponent.name || \"ChartComponent\";\n\treturn name;\n}\n\nexport default function updatingDataWrapper(ChartComponent) {\n\tconst LENGTH = 130;\n\n\tclass UpdatingComponentHOC extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tlength: LENGTH,\n\t\t\t\tdata: this.props.data.slice(0, LENGTH),\n\t\t\t};\n\t\t\tthis.speed = 1000;\n\t\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t\t}\n\t\tcomponentDidMount() {\n\t\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tcomponentWillUnmount() {\n\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tonKeyPress(e) {\n\t\t\tconst keyCode = e.which;\n\t\t\tconsole.log(keyCode);\n\t\t\tswitch (keyCode) {\n\t\t\tcase 50: {\n\t\t\t\t\t// 2 (50) - Start alter data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 80:\n\t\t\t\t\t// P (80)\n\t\t\tcase 49: {\n\t\t\t\t\t// 1 (49) - Start Push data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 27: {\n\t\t\t\t\t// ESC (27) - Clear interval\n\t\t\t\tthis.func = null;\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 107: {\n\t\t\t\t\t// + (107) - increase the this.speed\n\t\t\t\tthis.speed = Math.max(this.speed / 2, 50);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 109:\n\t\t\tcase 189: {\n\t\t\t\t\t// - (189, 109) - reduce the this.speed\n\t\t\t\tconst delta = Math.min(this.speed, 1000);\n\t\t\t\tthis.speed = this.speed + delta;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t\tif (this.func) {\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tconsole.log(\"this.speed  = \", this.speed);\n\t\t\t\tthis.interval = setInterval(this.func, this.speed);\n\t\t\t}\n\t\t}\n\t\trender() {\n\t\t\tconst { type } = this.props;\n\t\t\tconst { data } = this.state;\n\n\t\t\treturn <ChartComponent ref=\"component\" data={data} type={type} />;\n\t\t}\n\t}\n\tUpdatingComponentHOC.defaultProps = {\n\t\ttype: \"svg\",\n\t};\n\tUpdatingComponentHOC.displayName = `updatingDataWrapper(${ getDisplayName(ChartComponent) })`;\n\n\treturn UpdatingComponentHOC;\n}","\nimport CandleStickChartWithMACDIndicator from \"./CandleStickChartWithMACDIndicator\";\nimport updatingDataWrapper from \"./updatingDataWrapper\";\n\nconst CandleStickChartWithUpdatingData = updatingDataWrapper(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithUpdatingData;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Chart from './StockCharts/Chart';\nimport CandleStickChartWithMACDIndicator from './StockCharts/CandleStickChartWithMACDIndicator';\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nclass ChartComponent extends React.Component {\n\t\n\tstate={\n\t\tdata: this.props.data,\n\t\tdidupdate:false\n\t}\n\t\n\tshouldComponentUpdate(nextProps) {\n\t  // You don't have to do this check first, but it can help prevent an unneeded render\n\t  \tif (nextProps.data.data !== this.state.data && nextProps.data.data!==undefined) {\n\t\t\tvar DataCopy =  this.state.data;\n\t  \t\tDataCopy = nextProps.data.data;\n\t  \t\tthis.setState({ \n\t  \t\t\tdata:DataCopy,\n\t  \t\t\tdidupdate:true\n\t  \t\t});\n\t  \t\treturn true\n\t  \t}\n\t  \treturn false\n\t}\n\n\trender() {\n\t\tif (this.state.data == '') {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\t\tif (this.state.didupdate){\n\t\t\tconsole.log(this.state.data);\n\t\t\treturn (\n\t\t\t<CandleStickChartWithMACDIndicator data={this.state.data} />\n\t\t\t)\t\n\t\t\tthis.state.didupdate=false;\n\t\t}\n\t}\n}\n\nexport default ChartComponent;","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst EtfArbitrageTable = (props) => {\n  if (props.data == {} || props.data == undefined) {\n    return \"Loading\";\n  }\n\n  const { data } = props;\n\n  \nconsole.log(data)\n  return (\n    <Table\n      size=\"sm\"\n      striped\n      bordered\n      hover\n      variant=\"dark\"\n      className=\"font-size-sm\"\n    >\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>$Arbitrage</th>\n          <th>$Spread</th>\n          <th>$Absolute Arbitrage</th>\n          <th>Over Bought/Sold</th>\n          <th>ETF Price</th>\n          <th>T</th>\n          <th>Etf Mover</th>\n          <th>Most Change%</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(data) &&\n          data.map((data, index) => {\n            let cls = \"\";\n            if (data[\"Over Bought/Sold\"] == \"Over Bought\") {\n              cls = \"red\";\n            } else if (data[\"Over Bought/Sold\"] == \"Over Sold\") {\n              cls = \"green\";\n            } else {\n              cls = \"\";\n            }\n            return (\n              <tr key={index}>\n                <td className={cls}>{data[\"Time\"] || \"\"}</td>\n                <td className={cls}>{data[\"Arbitrage in $\"] || \"\"}</td>\n                <td className={cls}>{data[\"$Spread\"] || \"\"}</td>\n                <td className={cls}>{data[\"Absolute Arbitrage\"] || \"\"}</td>\n                <td className={cls}>{data[\"Over Bought/Sold\"] || \"\"}</td>\n                <td>{data[\"ETF Price\"] || \"\"}</td>\n                <td>{data[\"T\"] || \"\"}</td>\n                <td>{data[\"ETFMover%1_ticker\"] || \"\"}</td>\n                <td>{data[\"Change%1_ticker\"] || \"\"}</td>\n              </tr>\n            );\n          })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default EtfArbitrageTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { escapeRegExp } from \"lodash\";\nimport orderBy from \"lodash/orderBy\";\n\nimport \"./Styles/arbitrage.css\";\n\nconst DailyChangeUnderlyingFunc = ({ data }) => {\n  return (\n    <Table size=\"sm\" striped bordered hover variant=\"dark\" >\n      <thead>\n        <tr>\n          <th className=\"cursor-pointer\">Ticker</th>\n          <th>Daily Change %</th>\n          <th>Volume</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(data) &&\n          data.map(({ symbol, DailyChangepct, volume }, index) => (\n            <tr key={`symbol${index}`}>\n              <td>{symbol && symbol}</td>\n              <td>{DailyChangepct && DailyChangepct}</td>\n              <td>{volume && volume}</td>\n            </tr>\n          ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default DailyChangeUnderlyingFunc;\n","import React from \"react\";\nimport Axios from \"axios\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { tsvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport \"./Styles/arbitrage.css\";\nimport EtfArbitrageTable from \"./EtfArbitrageTable\";\n\nimport DailyChangeUnderlyingFunc from \"./DailyChangeUnderlying\";\n\nimport LineChartForHistArb from \"../../Component/LineChartForHistArb\";\nimport ChartComponent from \"../../Component/StockPriceChart\";\nimport CombinedPieCharts from \"../../Component/CombinedPieCharts\";\nimport AppTable from \"../../Component/Table\";\n\nimport { connect } from \"react-redux\";\nimport { Loader } from \"../../Common_Components/Loader\";\nimport ScatterPlot from \"../../Component/ScatterPlott\";\nimport { CommonNavBar } from \"../../Common_Components/NavBar\";\nimport { CardGroup } from \"react-bootstrap\";\n\nclass HistoricalArbitrage extends React.Component {\n  state = {\n    etfArbitrageTableData: null,\n    historicalArbitrageData: \"\",\n    scatterPlotData: \"\",\n    etfmoversDictCount: null,\n    etfPriceData: \"\",\n    ArbitrageCumSum: [],\n    highestChangeDictCount: null,\n    isLoading: true,\n    underlyingPerformance: [],\n  };\n  parseDate = timeParse(\"%Y-%m-%d %H:%M:%S\");\n\n  parseData(parse) {\n    return function (d) {\n      d.date = parse(d.date);\n      d[\"Over Bought/Sold\"] = d[\"Over Bought/Sold\"];\n      d.open = +parseFloat(d.open);\n      d.high = +parseFloat(d.high);\n      d.low = +parseFloat(d.low);\n      d.close = +parseFloat(d.close);\n      d.volume = +parseInt(d.volume);\n\n      return d;\n    };\n  }\n\n  fetchData = (ETF, startDate) => {\n    if (ETF && startDate) {\n      this.setState({ ...this.state, isLoading: true });\n      Axios.get(`/api/PastArbitrageData/${ETF}/${startDate}`)\n        .then(({ data }) => {\n          console.log(data);\n          this.setState({\n            ...this.state,\n            etfArbitrageTableData: data.etfhistoricaldata,\n            PNLStatementForTheDay: data.PNLStatementForTheDay,\n            etfPriceData: {\n              data: tsvParse(data.etfPrices, this.parseData(this.parseDate)),\n            },\n            scatterPlotData: data.scatterPlotData,\n            etfmoversDictCount: data.etfmoversDictCount,\n            highestChangeDictCount: data.highestChangeDictCount,\n            SignalCategorization: <AppTable data={data.SignalCategorization} />,\n            ArbitrageCumSum: [...data.ArbitrageCumSum],\n            isLoading: false,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  etfUnderlyingPerformance = (ETF, startDate) => {\n    if (ETF && startDate) {\n      this.setState({ ...this.state, isLoading: true });\n      Axios.get(`/api/PastArbitrageData/DailyChange/${ETF}/${startDate}`)\n        .then((res) => {\n          console.log(res);\n          this.setState({\n            ...this.state,\n            underlyingPerformance: [...res.data],\n            isLoading: false,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  componentDidMount() {\n    const { ETF, startDate } = this.props.match.params;\n\n    this.fetchData(ETF, startDate);\n    this.etfUnderlyingPerformance(ETF, startDate);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      ETF: prevPropsETF,\n      startDate: prevPropsStartDate,\n    } = prevProps.match.params;\n    const { ETF, startDate } = this.props.match.params;\n\n    if (prevPropsETF !== ETF || prevPropsStartDate !== startDate) {\n      this.fetchData(ETF, startDate);\n      this.etfUnderlyingPerformance(ETF, startDate);\n    }\n  }\n\n  render() {\n    const { ETF, startDate } = this.props.match.params;\n    const {\n      isLoading,\n      etfArbitrageTableData,\n      ArbitrageCumSum,\n      etfmoversDictCount,\n      highestChangeDictCount,\n      PNLStatementForTheDay,\n      SignalCategorization,\n      underlyingPerformance,\n      etfPriceData,\n      scatterPlotData,\n    } = this.state;\n    return (\n    <>\n      <CommonNavBar />\n       <div className=\"container-fluid font-size-sm\">\n          <div className=\"row\">\n          \n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                <div className=\"row\">\n                  \n                  <div className=\"col-lg-8 col-md-8 col-sm-12 padding-0\">\n                    <div className=\"etfArbitrageTable\"  style={{ height: \"92vh\" }}>\n                      <Card bg=\"dark\" text=\"light\">\n                        <Card.Header className=\"flex-row\">\n                          <span>\n                            Histortical Data {ETF} {startDate}\n                          </span>\n\n                          <div className=\"margin-left-auto\">\n                            <CombinedPieCharts\n                              etfmoversDictCount={etfmoversDictCount}\n                              highestChangeDictCount={highestChangeDictCount}\n                            />\n                          </div>\n                        </Card.Header>\n                        <Card.Body className=\"padding-1px overflow-auto\">\n                          {isLoading ? (\n                            <Loader />\n                          ) : (\n                            <EtfArbitrageTable data={etfArbitrageTableData} />\n                          )}\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                    <div className=\"row\">\n\n                      <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                         <Card className=\"height-100\" bg=\"dark\" text=\"light\">\n                            <Card.Header>Signal Performance</Card.Header>\n                            <Card.Body className=\"padding-1px\">\n                              {isLoading ? (\n                                <Loader />\n                              ) : (\n                                <Table size=\"sm\" striped bordered hover variant=\"dark\">\n                                  <tbody>\n                                    {typeof PNLStatementForTheDay === \"object\" &&\n                                      Object.entries(PNLStatementForTheDay).map(\n                                        ([key, value]) => (\n                                          <tr key={key}>\n                                            <td>{key}</td>\n                                            <td>{value}</td>\n                                          </tr>\n                                        )\n                                      )}\n                                  </tbody>\n                                </Table>\n                              )}\n                            </Card.Body>\n                          </Card>\n                      </div>\n\n                       <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                          <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                            <Card.Header>Arbitrage Spread</Card.Header>\n                            <Card.Body className=\"padding-1px\">\n                              {isLoading ? <Loader /> : SignalCategorization}\n                            </Card.Body>\n                          </Card>\n                        </div>\n\n                      <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                          <Card bg=\"dark\" text=\"light\">\n                            <Card.Header>Underlyings Daily Change</Card.Header>\n                            <Card.Body style={{height:\"40vh\"}} className=\"overflow-auto padding-sm padding-1px\">\n                              {this.state.isLoading ? (\n                                <Loader />\n                              ) : (\n                                <DailyChangeUnderlyingFunc data={underlyingPerformance} />\n                              )}\n                            </Card.Body>\n                        </Card>\n                      </div>\n\n                    </div>\n                  </div>\n\n                </div>\n            </div>\n\n\n            <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n              <div className=\"row\">\n                \n               <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                  <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                    <Card.Header>Price Chart</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      <ChartComponent data={etfPriceData} />\n                    </Card.Body>\n                  </Card>\n               </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                  <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                    <Card.Header>Arb Time Series</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      {isLoading ? (\n                        <Loader />\n                      ) : (\n                        <LineChartForHistArb data={ArbitrageCumSum} />\n                      )}\n                    </Card.Body>\n                  </Card>\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n                  <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                    <Card.Header>ETF Change % Vs NAV change %</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      <ScatterPlot data={scatterPlotData}  />\n                    </Card.Body>\n                  </Card>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ETF: state.navbar.ETF,\n    startDate: state.navbar.startDate,\n  };\n};\n\nexport default connect(mapStateToProps, null)(HistoricalArbitrage);\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { HistoricalArbitrage } from \"../Pages/Historical_Arbitrage\";\nimport { useSelector } from \"react-redux\";\n\nconst HistArbiageRoutes = () => {\n  const { ETF, startDate } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/historical-arbitrage/:ETF/:startDate\"\n        component={HistoricalArbitrage}\n      />\n         <Redirect\n      \n      from=\"/historical-arbitrage/:ETF\"\n      to={`/historical-arbitrage/:ETF/${startDate}`}\n    />\n      <Redirect\n        from=\"/historical-arbitrage\"\n        to={`/historical-arbitrage/${ETF}/${startDate}`}\n      />\n    </Switch>\n  );\n};\n\nexport default HistArbiageRoutes;\n"],"sourceRoot":""}