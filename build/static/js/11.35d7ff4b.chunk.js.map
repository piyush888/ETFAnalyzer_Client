{"version":3,"sources":["Common_Components/Loader/Loader.jsx","Common_Components/PieChart/CommonPieChart.jsx","Pages/ETF_Description/ETF_Descriptions/DescriptionTable.jsx","Pages/ETF_Description/ETF_Holdings/PieChartModal.jsx","Pages/ETF_Description/ETF_Holdings/HoldingsTable.jsx","Pages/ETF_Description/PNL/PnlTable.jsx","Pages/ETF_Description/ETF_Same_Issuer/SameIssuerTable.jsx","Pages/ETF_Description/ETF_Similar_Asset_Management/SimilarAssetUnderManagement.jsx","Pages/ETF_Description/ETF_Same_Industry/SameIndustryTable.jsx","Pages/ETF_Description/ETF_Description.jsx","Routes/EtfDescRoutes.jsx"],"names":["spinnerStyle","fontSize","Loader","className","style","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","convertData","data","element","convertedData","Object","entries","forEach","key","push","CommonPieChart","state","chartname","activeIndex","COLORS","onPieEnter","index","setState","prevProps","this","tempData","width","height","activeShape","dataKey","onMouseEnter","map","entry","length","PureComponent","DescriptionTable","DescriptionData","useState","order","setTableOrder","orderType","setOrderType","useEffect","keys","sort","Card","Header","Body","Table","size","striped","bordered","hover","variant","onClick","reverse","PieChartModal","show","setShow","handleClose","Button","Modal","onHide","closeButton","Title","Footer","HoldingsTable","ETF","startDate","tableData","setTableData","searchString","setSearchString","filterData","setFilterData","isLoading","setLoading","Axios","get","then","catch","err","console","log","setTimeout","re","RegExp","escapeRegExp","filter","result","test","TickerSymbol","onChange","debounce","e","target","leading","sortedData","orderBy","Array","isArray","TickerName","TickerWeight","PnlTable","res","Date","SameIssuerTable","IssuerName","setIsLoading","etfTicker","ETFName","TotalAssetsUnderMgmt","SimilarAssetUnderManagement","SimilarTotalAsstUndMgmt","SameIndustryTable","EtfDbCategory","ETF_Description","HoldingsData","SameIssuerETFs","EtfsWithSameEtfDbCategory","OHLCDailyData","PNLOverDates","LoadingStatement","magnitudeOfArbitrage","fetchEtfdesc","ETFDataObject","Issuer","ETFdbCategory","match","params","prevPropsETF","prevPropsStartDate","Row","Col","xs","md","React","Component","compose","connect","EtfDescRoutes","useSelector","navbar","ProtectedRoute","path","component","from","to"],"mappings":"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","file":"static/js/11.35d7ff4b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst spinnerStyle = {\n\tfontSize:'14px'\n};\n\nconst Loader = () => {\n  return (\n    <div className=\"loader center\">\n      <i className=\"fa fa-spinner fa-spin\" style={spinnerStyle}></i>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${value}`}</text>\n    </g>\n  );\n};\n\nconst convertData = (data = {}, element = \"\") => {\n  const convertedData = [];\n  Object.entries(data).forEach(([key, value]) =>\n    convertedData.push({ name: key, value: value[element] })\n  );\n  return convertedData;\n};\n\nclass CommonPieChart extends PureComponent {\n  state = {\n    data: [],\n    chartname: \"\",\n    activeIndex: 0,\n    COLORS: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { data, element } = this.props;\n\n    if (data !== prevProps.data && typeof data === \"object\") {\n      const tempData = convertData(data, element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.data === \"object\") {\n      const tempData = convertData(this.props.data, this.props.element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <PieChart width={350} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={this.state.data}\n          cx={175}\n          cy={150}\n          innerRadius={25}\n          outerRadius={90}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell\n              key={index}\n              fill={this.state.COLORS[index % this.state.COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default CommonPieChart;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\n\nconst DescriptionTable = (props) => {\n  const { DescriptionData } = props;\n\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    if (typeof DescriptionData === \"object\") {\n      const order = Object.keys(DescriptionData).sort();\n      setTableOrder(order);\n    }\n  }, [DescriptionData]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(DescriptionData).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(DescriptionData).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        ETF Description\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Name\n              </th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof DescriptionData === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key && key}</td>\n                  <td>{DescriptionData[key] && DescriptionData[key]} </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DescriptionTable;\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../../../Common_Components/PieChart\";\n\nconst PieChartModal = ({ data, element }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button\n        className=\"margin-left-auto padding-1px\"\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={handleShow}\n      >\n        PieChart\n      </Button>\n\n      {show && (\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>ETF Holdings</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"margin-auto\">\n            <CommonPieChart data={data} element=\"TickerWeight\" />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default PieChartModal;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PieChartModal from \"./PieChartModal\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst HoldingsTable = (props) => {\n  const { ETF, startDate } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (startDate && ETF) {\n      Axios.get(`/api/ETfDescription/getHoldingsData/${ETF}/${startDate}`)\n        .then(({ data }) => {\n          setTableData([...data]);\n          setFilterData([...data]);\n          setLoading(false);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [ETF, startDate]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.TickerSymbol);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"TickerSymbol\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"TickerSymbol\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Card>\n          <Card.Header className=\"text-white bg-color-dark flex-row\">\n            ETF Holdings\n            <input\n              className=\"margin-left-auto d-inline-block\"\n              name=\"search\"\n              onChange={debounce(handleSearchChange, 500, { leading: true })}\n              value={searchString}\n            />\n            <PieChartModal data={tableData} element={\"TickerWeight\"} />\n          </Card.Header>\n\n          <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n            <Table size=\"sm\" striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"cursor-pointer\" onClick={changeOrder}>\n                    Symbol\n                  </th>\n                  <th>TickerName</th>\n                  <th>TickerWeight</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.isArray(filterData) &&\n                  filterData.map((data) => (\n                    <tr key={data.TickerSymbol}>\n                      <td>{data.TickerSymbol}</td>\n                      <td>{data.TickerName && data.TickerName}</td>\n                      <td> {data.TickerWeight && data.TickerWeight} </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default HoldingsTable;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Card, Table } from \"react-bootstrap\";\n\nconst PnlTable = (props) => {\n  const { ETF } = props;\n\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\n      `/api/PastArbitrageData/CommonDataAcrossEtf/${ETF}`\n    )\n      .then((res) => setTableData(res.data))\n      .catch((err) => console.log(err));\n  }, [ETF]);\n\n  return (\n    <Card style={{width:\"100%\"}}>\n      <Card.Header className=\"text-white bg-color-dark\">PNL Table</Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\">Date</th>\n              <th># R.Buy</th>\n              <th># R.Sell</th>\n              <th># T.Buy</th>\n              <th># T.Sell</th>\n              <th>% R.Buy</th>\n              <th>% R.Sell</th>\n              <th>Buy Return%</th>\n              <th>Sell Return%</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(tableData) &&\n              tableData.map((data) => {\n                return (\n                  <tr key={data.Date}>\n                    <td>{data.Date}</td>\n                    <td>{data[\"# R.Buy\"]}</td>\n                    <td>{data[\"# R.Sell\"]}</td>\n                    <td>{data[\"# T.Buy\"]}</td>\n                    <td>{data[\"# T.Sell\"]}</td>\n                    <td>{data[\"% R.Buy\"]}</td>\n                    <td>{data[\"% R.Sell\"]}</td>\n                    <td className={data[\"Buy Return%\"] < 0 ? \"red\" : \"green\"}>\n                      {data[\"Buy Return%\"]}\n                    </td>\n                    <td className={data[\"Sell Return%\"] < 0 ? \"red\" : \"green\"}>\n                      {data[\"Sell Return%\"]}\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PnlTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst SameIssuerTable = (props) => {\n  const { IssuerName } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (IssuerName) {\n      Axios.get(`/api/ETfDescription/getETFWithSameIssuer/${IssuerName}`)\n        .then(({ data }) => {\n          setTableData(data);\n          setFilterData(data);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [IssuerName]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.etfTicker);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark flex-row\">\n        ETF in Same Issuer\n        <input\n          className=\"margin-left-auto d-inline-block\"\n          name=\"search\"\n          onChange={debounce(handleSearchChange, 500, { leading: true })}\n          value={searchString}\n        />\n      </Card.Header>\n\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Table size=\"sm\" striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th className=\"cursor-pointer\" onClick={changeOrder}>\n                  Symbol\n                </th>\n                <th>ETF Name</th>\n                <th>TotalAssetsUnderMgmt</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Array.isArray(filterData) &&\n                filterData.map(\n                  ({ ETFName, TotalAssetsUnderMgmt, etfTicker }) => (\n                    <tr key={etfTicker}>\n                      <td>{etfTicker && etfTicker}</td>\n                      <td>{ETFName && ETFName}</td>\n                      <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                    </tr>\n                  )\n                )}\n            </tbody>\n          </Table>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SameIssuerTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { escapeRegExp } from \"lodash\";\nimport orderBy from \"lodash/orderBy\";\n\nconst SimilarAssetUnderManagement = (props) => {\n  const { SimilarTotalAsstUndMgmt } = props;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    const sortedData = orderBy(SimilarTotalAsstUndMgmt, [\"etfTicker\"], [\"asc\"]);\n\n    setOrderType(\"DSC\");\n    setTableData(sortedData);\n  }, [SimilarAssetUnderManagement]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(\n        SimilarTotalAsstUndMgmt,\n        [\"etfTicker\"],\n        [\"asc\"]\n      );\n\n      setOrderType(\"DSC\");\n      setTableData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(\n        SimilarTotalAsstUndMgmt,\n        [\"etfTicker\"],\n        [\"desc\"]\n      );\n      setOrderType(\"ASC\");\n      setTableData(sortedData);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        Similar Asset under Management\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Symbol\n              </th>\n              <th>ETF Name</th>\n              <th>Total Asset</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(tableData) &&\n              tableData.map(\n                ({ ETFName, TotalAssetsUnderMgmt, etfTicker }, index) => (\n                  <tr key={`etfTicker${index}`}>\n                    <td>{etfTicker && etfTicker}</td>\n                    <td>{ETFName && ETFName}</td>\n                    <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                  </tr>\n                )\n              )}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SimilarAssetUnderManagement;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport orderBy from \"lodash/orderBy\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport filter from \"lodash/filter\";\nimport debounce from \"lodash/debounce\";\nimport { Loader } from \"../../../Common_Components/Loader\";\n\nconst SameIndustryTable = (props) => {\n  const { EtfDbCategory } = props;\n  const [tableData, setTableData] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [filterData, setFilterData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (EtfDbCategory) {\n      Axios.get(`/api/ETfDescription/getETFsWithSameETFdbCategory/${EtfDbCategory}`)\n        .then(({ data }) => {\n          setTableData(data);\n          setFilterData(data);\n          setIsLoading(false)\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [EtfDbCategory]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (searchString.length < 1 && tableData.length !== 0) {\n        return setFilterData(tableData);\n      }\n      if (tableData.length !== 0) {\n        const re = new RegExp(escapeRegExp(searchString), \"i\");\n        const isMatch = (result) => re.test(result.etfTicker);\n        setFilterData(filter(tableData, isMatch));\n      }\n    }, 300);\n  }, [searchString]);\n\n  const handleSearchChange = (e) => {\n    setSearchString(e.target.value);\n  };\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"asc\"]);\n\n      setOrderType(\"DSC\");\n      setFilterData(sortedData);\n    }\n    if (orderType === \"DSC\") {\n      const sortedData = orderBy(filterData, [\"etfTicker\"], [\"desc\"]);\n      setOrderType(\"ASC\");\n      setFilterData(sortedData);\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Card>\n          <Card.Header className=\"text-white bg-color-dark flex-row\">\n            ETF in Same Industry : Technology Equities\n            <input\n              className=\"margin-left-auto d-inline-block\"\n              name=\"search\"\n              onChange={debounce(handleSearchChange, 500, { leading: true })}\n              value={searchString}\n            />\n          </Card.Header>\n          <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n            <Table size=\"sm\" striped bordered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th className=\"cursor-pointer\" onClick={changeOrder}>\n                    Symbol\n                  </th>\n                  <th>ETF Name</th>\n                  <th>TotalAssetsUnderMgmt</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.isArray(filterData) &&\n                  filterData.map(\n                    ({ ETFName, TotalAssetsUnderMgmt, etfTicker }) => (\n                      <tr key={etfTicker}>\n                        <td>{etfTicker && etfTicker}</td>\n                        <td>{ETFName && ETFName}</td>\n                        <td>{TotalAssetsUnderMgmt && TotalAssetsUnderMgmt}</td>\n                      </tr>\n                    )\n                  )}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default SameIndustryTable;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { DescriptionTable } from \"./ETF_Descriptions\";\nimport { ETFHoldings } from \"./ETF_Holdings\";\nimport { PNL } from \"./PNL\";\nimport { EtfSameIssuer } from \"./ETF_Same_Issuer\";\nimport { SimilarAssetUnderManagement } from \"./ETF_Similar_Asset_Management\";\nimport { EtfSameIndustry } from \"./ETF_Same_Industry\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { Loader } from \"../../Common_Components/Loader\";\nimport { CommonNavBar } from \"../../Common_Components/NavBar\";\n\nclass ETF_Description extends React.Component {\n  state = {\n    DescriptionData: null,\n    HoldingsData: \"\",\n    SameIssuerETFs: \"\",\n    IssuerName: null,\n    SimilarTotalAsstUndMgmt: \"\",\n    EtfsWithSameEtfDbCategory: \"\",\n    EtfDbCategory: null,\n    OHLCDailyData: \"\",\n    PNLOverDates: \"\",\n    LoadingStatement: \"Loading.. PNL for \" + this.props.ETF,\n    magnitudeOfArbitrage: \"\",\n  };\n\n  fetchEtfdesc = (ETF, startDate) => {\n    if (ETF && startDate) {\n      Axios.get(`/api/ETfDescription/EtfData/${ETF}/${startDate}`)\n        .then((res) => {\n          const { ETFDataObject, SimilarTotalAsstUndMgmt } = res.data;\n          this.setState({\n            ...this.state,\n            DescriptionData: ETFDataObject,\n            SimilarTotalAsstUndMgmt: SimilarTotalAsstUndMgmt,\n            IssuerName: ETFDataObject.Issuer,\n            EtfDbCategory: ETFDataObject.ETFdbCategory,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  componentDidMount() {\n    const { startDate, ETF } = this.props.match.params;\n    this.fetchEtfdesc(ETF, startDate);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      ETF: prevPropsETF,\n      startDate: prevPropsStartDate,\n    } = prevProps.match.params;\n    const { ETF, startDate } = this.props.match.params;\n\n    if (prevPropsETF !== ETF || prevPropsStartDate !== startDate) {\n      this.fetchEtfdesc(ETF, startDate);\n    }\n  }\n\n  render() {\n    const {\n      DescriptionData,\n      IssuerName,\n      SimilarTotalAsstUndMgmt,\n      EtfDbCategory,\n    } = this.state;\n\n    const { startDate, ETF } = this.props.match.params;\n    return (\n      <>\n        <CommonNavBar />\n        <Row>\n          <Col xs={12} md={12}>\n            <Row>\n              <Col xs={12} md={3}>\n                {DescriptionData ? (\n                  <DescriptionTable DescriptionData={DescriptionData} />\n                ) : (\n                  <Loader />\n                )}\n              </Col>\n\n              {/*\n        <Col xs={12} md={8}>\n          <Card>\n            <Card.Header className=\"text-white BlackHeaderForModal\">Price Chart</Card.Header>\n            <Card.Body style={{'backgroundColor':'#292b2c'}}>\n              <ChartComponent data={this.state.OHLCDailyData} />\n            </Card.Body>\n          </Card>\n        </Col>\n      */}\n\n              <Col xs={12} md={3}>\n                <ETFHoldings ETF={ETF} startDate={startDate} />\n              </Col>\n\n              <Col xs={12} md={6}>\n                <PNL ETF={ETF} />\n              </Col>\n\n              <Col xs={12} md={4}>\n                <EtfSameIssuer IssuerName={IssuerName} />\n              </Col>\n\n              <Col xs={12} md={4}>\n                {SimilarTotalAsstUndMgmt && (\n                  <SimilarAssetUnderManagement\n                    SimilarTotalAsstUndMgmt={SimilarTotalAsstUndMgmt}\n                  />\n                )}\n              </Col>\n\n              <Col xs={12} md={4}>\n                {EtfDbCategory && (\n                  <EtfSameIndustry EtfDbCategory={EtfDbCategory} />\n                )}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default compose(connect(null, null))(ETF_Description);\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ETF_Description from \"../Pages/ETF_Description/ETF_Description\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { useSelector } from \"react-redux\";\n\nconst EtfDescRoutes = () => {\n  const { ETF, startDate } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/ETF-Description/:ETF/:startDate\"\n        component={ETF_Description}\n      />\n      <Redirect\n      \n      from=\"/ETF-Description/:ETF\"\n      to={`/ETF-Description/:ETF/${startDate}`}\n    />\n      <Redirect\n      \n        from=\"/ETF-Description\"\n        to={`/ETF-Description/${ETF}/${startDate}`}\n      />\n    </Switch>\n  );\n};\n\nexport default EtfDescRoutes;\n"],"sourceRoot":""}