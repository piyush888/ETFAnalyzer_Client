{"version":3,"sources":["Component/LineChartForHistArb.js","Component/ScatterPlott.js","Common_Components/PieChart/CommonPieChart.jsx","Component/CombinedPieCharts.jsx","Component/StockCharts/CandleStickChartWithMACDIndicator.js","Component/StockPriceChart.js","Common_Components/Loader/Loader.jsx","../node_modules/lodash/orderBy.js","Pages/Historical_Arbitrage/EtfArbitrageTable.jsx","Pages/Historical_Arbitrage/DailyChangeUnderlying.jsx","Component/Table.js","Pages/Historical_Arbitrage/Historical_Arbitrage_Main.jsx","Routes/HistArbiageRoutes.jsx"],"names":["LineChartForHistArb","props","data","length","width","height","padding","top","right","left","bottom","strokeDasharray","className","dataKey","stroke","type","dot","ScatterPlot","this","style","name","unit","fill","cursor","React","Component","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","r","convertData","element","convertedData","Object","entries","forEach","key","push","CommonPieChart","state","chartname","activeIndex","COLORS","onPieEnter","index","setState","prevProps","tempData","activeShape","onMouseEnter","map","entry","PureComponent","CombinedPieCharts","useState","show","setShow","handleClose","Button","variant","size","onClick","Modal","dialogClassName","onHide","Header","closeButton","Title","Body","Row","Col","xs","md","Card","etfmoversDictCount","highestChangeDictCount","Footer","macdAppearance","macd","signal","divergence","mouseEdgeAppearance","textFill","strokeOpacity","strokeWidth","arrowWidth","CandleStickChartWithMACDIndicator","initialData","ratio","ema26","ema","id","options","windowSize","merge","c","accessor","ema12","macdCalculator","fast","slow","smaVolume50","sma","sourcePath","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","margin","seriesName","yExtents","high","low","tickStroke","axisAt","orient","showTicks","outerTickSize","ticks","at","displayFormat","format","yAccessor","itemType","edgeAt","close","open","origin","e","console","log","with","LabelAnnotation","when","usingProps","fontFamily","fontSize","opacity","text","yScale","datum","volume","w","h","tickFormat","timeFormat","rectRadius","appearance","defaultProps","fitWidth","ChartComponent","Array","isArray","spinnerStyle","Loader","baseOrderBy","require","module","exports","collection","iteratees","orders","guard","undefined","EtfArbitrageTable","Table","striped","bordered","hover","cls","DailyChangeUnderlyingFunc","symbol","DailyChangepct","stringConstructor","constructor","arrayConstructor","objectConstructor","whatIsIt","object","RenderRow","k","keys","i","RenderRowClickable","submitFn","AppTable","getKeys","someJSON","MainKeys","unshift","getHeader","Key1","row","values","clickableTable","HistoricalArbitrage","etfArbitrageTableData","historicalArbitrageData","scatterPlotData","etfPriceData","ArbitrageCumSum","isLoading","underlyingPerformance","parseDate","timeParse","fetchData","ETF","startDate","Axios","get","then","etfhistoricaldata","PNLStatementForTheDay","tsvParse","etfPrices","parseData","SignalCategorization","catch","err","etfUnderlyingPerformance","res","parse","parseFloat","parseInt","match","params","prevPropsETF","prevPropsStartDate","bg","DailyChangeUnderlying","connect","navbar","HistArbiageRoutes","useSelector","ProtectedRoute","path","component","from","to"],"mappings":"kHAAA,6BA8CeA,IAjCa,SAACC,GAAW,IAC9BC,EAASD,EAATC,KAER,OACE,oCACGA,EAAKC,OACJ,kBAAC,IAAD,CACEC,MAAM,OACNC,OAAQ,IACRC,QAAS,CAAEC,IAAK,EAAGC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,IAE9C,kBAAC,IAAD,CAAWR,KAAMA,GACjB,kBAAC,IAAD,CAAeS,gBAAgB,QAC7B,kBAAC,IAAD,CAAOC,UAAU,+BAA+BC,QAAQ,OAAOC,OAAO,YACtE,kBAAC,IAAD,CAAOF,UAAU,+BAA+BE,OAAO,YACvD,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOD,QAAQ,OAAOR,OAAQ,GAAIS,OAAO,YACzC,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,iBACRC,OAAO,UACPE,KAAK,MAKX,iC,8FC7BFC,E,uKACM,IACAf,EAASgB,KAAKjB,MAAdC,KACR,OACE,yBAAKiB,MAAO,CAAEf,MAAO,OAAQC,OAAQ,MACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CACES,OAAO,UACPD,QAAS,0BACTE,KAAK,SACLK,KAAK,0BACLC,KAAK,MAEP,kBAAC,IAAD,CACEP,OAAO,UACPD,QAAS,qBACTE,KAAK,SACLK,KAAK,qBACLC,KAAK,MAEP,kBAAC,IAAD,CAASD,KAAK,WAAWlB,KAAMA,EAAMoB,KAAK,YAC1C,kBAAC,IAAD,CAASC,OAAQ,CAAEZ,gBAAiB,gB,GAvBtBa,IAAMC,WA+BjBR,O,2JCvCTS,EAAoB,SAACzB,GACzB,IAAM0B,EAASC,KAAKC,GAAK,IAEvBC,EAUE7B,EAVF6B,GACAC,EASE9B,EATF8B,GACAC,EAQE/B,EARF+B,SACAC,EAOEhC,EAPFgC,YACAC,EAMEjC,EANFiC,YACAC,EAKElC,EALFkC,WACAC,EAIEnC,EAJFmC,SACAd,EAGErB,EAHFqB,KACAe,EAEEpC,EAFFoC,QACAC,EACErC,EADFqC,MAEIC,EAAMX,KAAKW,KAAKZ,EAASK,GACzBQ,EAAMZ,KAAKY,KAAKb,EAASK,GACzBS,EAAKX,GAAMI,EAAc,IAAMM,EAC/BE,EAAKX,GAAMG,EAAc,IAAMK,EAC/BI,EAAKb,GAAMI,EAAc,IAAMM,EAC/BI,EAAKb,GAAMG,EAAc,IAAMK,EAC/BM,EAAKF,EAA2B,IAArBH,GAAO,EAAI,GAAK,GAC3BM,EAAKF,EACLG,EAAaP,GAAO,EAAI,QAAU,MAExC,OACE,2BACE,0BAAMQ,EAAGlB,EAAImB,EAAGlB,EAAImB,GAAI,EAAGH,WAAW,SAASzB,KAAMA,GAClDe,EAAQjB,MAEX,kBAAC,IAAD,CACEU,GAAIA,EACJC,GAAIA,EACJE,YAAaA,EACbC,YAAaA,EACbC,WAAYA,EACZC,SAAUA,EACVd,KAAMA,IAER,kBAAC,IAAD,CACEQ,GAAIA,EACJC,GAAIA,EACJI,WAAYA,EACZC,SAAUA,EACVH,YAAaC,EAAc,EAC3BA,YAAaA,EAAc,GAC3BZ,KAAMA,IAER,0BACE6B,EAAC,WAAMV,EAAN,YAAYC,EAAZ,YAAkBC,EAAlB,YAAwBC,EAAxB,YAA8BC,EAA9B,YAAoCC,GACrChC,OAAQQ,EACRA,KAAK,SAEP,4BAAQQ,GAAIe,EAAId,GAAIe,EAAIM,EAAG,EAAG9B,KAAMA,EAAMR,OAAO,SACjD,0BACEkC,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GACzBS,EAAGH,EACHC,WAAYA,EACZzB,KAAK,QAJP,UAKKgB,MAKLe,EAAc,WAA8B,IAA7BnD,EAA4B,uDAArB,GAAIoD,EAAiB,uDAAP,GAClCC,EAAgB,GAItB,OAHAC,OAAOC,QAAQvD,GAAMwD,SAAQ,mCAAEC,EAAF,KAAOrB,EAAP,YAC3BiB,EAAcK,KAAK,CAAExC,KAAMuC,EAAKrB,MAAOA,EAAMgB,QAExCC,GA4DMM,E,4MAxDbC,MAAQ,CACN5D,KAAM,GACN6D,UAAW,GACXC,YAAa,EACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,Y,EAmB5CC,WAAa,SAAChE,EAAMiE,GAClB,EAAKC,SAAS,CACZJ,YAAaG,K,iEAlBEE,GAAY,IAAD,EACFnD,KAAKjB,MAAvBC,EADoB,EACpBA,KAAMoD,EADc,EACdA,QAEd,GAAIpD,IAASmE,EAAUnE,MAAwB,kBAATA,EAAmB,CACvD,IAAMoE,EAAWjB,EAAYnD,EAAMoD,GACnCpC,KAAKkD,SAAL,2BAAmBlD,KAAK4C,OAAxB,IAA+B5D,KAAMoE,Q,0CAKvC,GAA+B,kBAApBpD,KAAKjB,MAAMC,KAAmB,CACvC,IAAMoE,EAAWjB,EAAYnC,KAAKjB,MAAMC,KAAMgB,KAAKjB,MAAMqD,SACzDpC,KAAKkD,SAAL,2BAAmBlD,KAAK4C,OAAxB,IAA+B5D,KAAMoE,Q,+BAU/B,IAAD,OACP,OACE,kBAAC,IAAD,CAAUlE,MAAO,IAAKC,OAAQ,KAC5B,kBAAC,IAAD,CACE2D,YAAa9C,KAAK4C,MAAME,YACxBO,YAAa7C,EACbxB,KAAMgB,KAAK4C,MAAM5D,KACjB4B,GAAI,IACJC,GAAI,IACJE,YAAa,GACbC,YAAa,GACbZ,KAAK,UACLT,QAAQ,QACR2D,aAActD,KAAKgD,YAElBhD,KAAK4C,MAAM5D,KAAKuE,KAAI,SAACC,EAAOP,GAAR,OACnB,kBAAC,IAAD,CACER,IAAKQ,EACL7C,KAAM,EAAKwC,MAAMG,OAAOE,EAAQ,EAAKL,MAAMG,OAAO9D,mB,GAhDnCwE,iBCZdC,IA1DW,SAAC3E,GAAW,IAAD,EACX4E,oBAAS,GADE,mBAC5BC,EAD4B,KACtBC,EADsB,KAG7BC,EAAc,kBAAMD,GAAQ,IAElC,OACE,oCACE,kBAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,QAHrB,kBAAML,GAAQ,KAG7B,cAIA,kBAACM,EAAA,EAAD,CAAOC,gBAAgB,WAAWR,KAAMA,EAAMS,OAAQP,GACpD,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,6BAEF,kBAACL,EAAA,EAAMM,KAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACf,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKR,OAAN,CAAa5E,UAAU,qDAAvB,YAGA,kBAACoF,EAAA,EAAKL,KAAN,CAAW/E,UAAU,6BACnB,kBAACgF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,gCACE,2CAEF,kBAAC,EAAD,CACE7F,KAAMD,EAAMgG,mBACZ3C,QAAS,WAGb,kBAACuC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,gCACE,8CAEF,kBAAC,EAAD,CACE7F,KAAMD,EAAMiG,uBACZ5C,QAAS,iBASzB,kBAAC+B,EAAA,EAAMc,OAAP,KACE,kBAAClB,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAASJ,GAArC,c,wLClBJoB,EAAiB,CACtBtF,OAAQ,CACPuF,KAAM,UACNC,OAAQ,WAEThF,KAAM,CACLiF,WAAY,YAIRC,EAAsB,CAC3BC,SAAU,UACV3F,OAAQ,UACR4F,cAAe,EACfC,YAAa,EACbC,WAAY,EACZtF,KAAM,WAIDuF,E,uKACK,IAAD,EAC0C3F,KAAKjB,MAA/Cc,EADA,EACAA,KAAY+F,EADZ,EACM5G,KAAmBE,EADzB,EACyBA,MAAO2G,EADhC,EACgCA,MAClCC,EAAQC,gBACZC,GAAG,GACHC,QAAQ,CAAEC,WAAY,KACtBC,OAAM,SAAClE,EAAGmE,GAAQnE,EAAE6D,MAAQM,KAC5BC,UAAS,SAAApE,GAAC,OAAIA,EAAE6D,SAEZQ,EAAQP,gBACZC,GAAG,GACHC,QAAQ,CAAEC,WAAY,KACtBC,OAAM,SAAClE,EAAGmE,GAAOnE,EAAEqE,MAAQF,KAC3BC,UAAS,SAAApE,GAAC,OAAIA,EAAEqE,SAEZC,EAAiBpB,iBACrBc,QAAQ,CACRO,KAAM,GACNC,KAAM,GACNrB,OAAQ,IAERe,OAAM,SAAClE,EAAGmE,GAAOnE,EAAEkD,KAAOiB,KAC1BC,UAAS,SAAApE,GAAC,OAAIA,EAAEkD,QAEZuB,EAAcC,gBAClBX,GAAG,GACHC,QAAQ,CACRC,WAAY,GACZU,WAAY,WAEZT,OAAM,SAAClE,EAAGmE,GAAOnE,EAAEyE,YAAcN,KACjCC,UAAS,SAAApE,GAAC,OAAIA,EAAEyE,eAEZG,EAAiBH,EAAYH,EAAeD,EAAMR,EAAMF,MAhCtD,EAiCekB,iCACrBC,mBAAkB,SAAA9E,GAAC,OAAIA,EAAE+E,OAMvBC,CAAeJ,GAJlB7H,EApCO,EAoCPA,KACAkI,EArCO,EAqCPA,OACAC,EAtCO,EAsCPA,UACAC,EAvCO,EAuCPA,iBAyBD,OACC,kBAAC,IAAD,CAAajI,OAAQ,IACpBD,MAAOA,EACP2G,MAAOA,EACPwB,OAAQ,CAAE9H,KAAM,GAAID,MAAO,GAAID,IAAK,EAAGG,OAAQ,GAC/CK,KAAMA,EACNyH,WAAW,OACXtI,KAAMA,EACNkI,OAAQA,EACRC,UAAWA,EACXC,iBAAkBA,GAElB,kBAAC,IAAD,CAAOpB,GAAI,EAAG7G,OAAQ,IACrBoI,SAAU,CAAC,SAAAtF,GAAC,MAAI,CAACA,EAAEuF,KAAMvF,EAAEwF,MAAM3B,EAAMO,WAAYC,EAAMD,YACzDjH,QAAS,CAAEC,IAAK,GAAIG,OAAQ,KAE5B,kBAAC,QAAD,CAAOkI,WAAW,UAAU9H,OAAO,UAAU+H,OAAO,SAASC,OAAO,SAASC,WAAW,EAAOC,cAAe,IAC9G,kBAAC,QAAD,CAAOJ,WAAW,UAAU9H,OAAO,UAAU+H,OAAO,QAAQC,OAAO,QAAQG,MAAO,IAElF,kBAAC,mBAAD,eACCC,GAAG,QACHJ,OAAO,QACPK,cAAeC,YAAO,QAClB5C,IAGL,kBAAC,oBAAD,MACA,kBAAC,aAAD,CAAY6C,UAAWrC,EAAMO,WAAYzG,OAAQkG,EAAMlG,WACvD,kBAAC,aAAD,CAAYuI,UAAW7B,EAAMD,WAAYzG,OAAQ0G,EAAM1G,WAEvD,kBAAC,oBAAD,CAAmBuI,UAAWrC,EAAMO,WAAYjG,KAAM0F,EAAMlG,WAC5D,kBAAC,oBAAD,CAAmBuI,UAAW7B,EAAMD,WAAYjG,KAAMkG,EAAM1G,WAE5D,kBAAC,gBAAD,CAAewI,SAAS,OAAOR,OAAO,QAAQS,OAAO,QACpDF,UAAW,SAAAlG,GAAC,OAAIA,EAAEqG,OAClBlI,KAAM,SAAA6B,GAAC,OAAIA,EAAEqG,MAAQrG,EAAEsG,KAAO,UAAY,WAC1C3I,OAAQ,SAAAqC,GAAC,OAAIA,EAAEqG,MAAQrG,EAAEsG,KAAO,UAAY,WAC5ChD,SAAU,SAAAtD,GAAC,OAAIA,EAAEqG,MAAQrG,EAAEsG,KAAO,UAAY,WAC9C/C,cAAe,EACfC,YAAa,EACbC,WAAY,IAGb,kBAAC,cAAD,CAAa8C,OAAQ,EAAE,GAAI,KAC3B,kBAAC,uBAAD,CACCtE,QAAS,SAAAuE,GAAC,OAAIC,QAAQC,IAAIF,IAC1BD,OAAQ,EAAE,GAAI,IACdvC,QAAS,CACR,CACCkC,UAAWrC,EAAMO,WACjBxG,KAAM,MACND,OAAQkG,EAAMlG,SACdsG,WAAYJ,EAAMG,UAAUC,YAE7B,CACCiC,UAAW7B,EAAMD,WACjBxG,KAAM,MACND,OAAQ0G,EAAM1G,SACdsG,WAAYI,EAAML,UAAUC,eAK/B,kBAAC,WAAD,CAAU0C,KAAMC,kBACfC,KAAM,SAAA7G,GAAC,MAA8B,cAA1BA,EAAE,qBACb8G,WAvFwB,CAC3BC,WAAY,uBACZC,SAAU,GACV7I,KAAM,QACN8I,QAAS,GACTC,KAAM,SACNpH,EAAG,mBAAuBqH,EAAvB,EAAGA,QAAH,EAAWC,MAAyB5B,SAmFrC,kBAAC,WAAD,CAAUmB,KAAMC,kBACfC,KAAM,SAAA7G,GAAC,MAA8B,gBAA1BA,EAAE,qBACb8G,WAlFyB,CAC5BC,WAAY,uBACZC,SAAU,GACV7I,KAAM,MACN8I,QAAS,GACTC,KAAM,SACNpH,EAAG,mBAAuBqH,EAAvB,EAAGA,QAAH,EAAWC,MAAyB7B,WA8EtC,kBAAC,IAAD,CAAOxB,GAAI,EAAG7G,OAAQ,IACrBoI,SAAU,CAAC,SAAAtF,GAAC,OAAIA,EAAEqH,QAAQ5C,EAAYL,YACtCmC,OAAQ,SAACe,EAAGC,GAAJ,MAAU,CAAC,EAAGA,EAAI,OAE1B,kBAAC,QAAD,CAAO9B,WAAW,UAAUC,OAAO,OAAOC,OAAO,OAAOG,MAAO,EAAG0B,WAAYvB,YAAO,SAErF,kBAAC,mBAAD,eACCF,GAAG,OACHJ,OAAO,OACPK,cAAeC,YAAO,QAClB5C,IAGL,kBAAC,YAAD,CAAW6C,UAAW,SAAAlG,GAAC,OAAIA,EAAEqH,QAAQlJ,KAAM,SAAA6B,GAAC,OAAIA,EAAEqG,MAAQrG,EAAEsG,KAAO,UAAY,aAC/E,kBAAC,aAAD,CAAYJ,UAAWzB,EAAYL,WAAYzG,OAAQ8G,EAAY9G,SAAUQ,KAAMsG,EAAYtG,UAEhG,kBAAC,IAAD,CAAO4F,GAAI,EAAG7G,OAAQ,IACrBoI,SAAUhB,EAAeF,WACzBmC,OAAQ,SAACe,EAAGC,GAAJ,MAAU,CAAC,EAAGA,EAAI,MAAMpK,QAAS,CAAEC,IAAK,GAAIG,OAAQ,KAE5D,kBAAC,QAAD,CAAOkI,WAAW,UAAU9H,OAAO,UAAU+H,OAAO,SAASC,OAAO,WACpE,kBAAC,QAAD,CAAOF,WAAW,UAAU9H,OAAO,UAAU+H,OAAO,QAAQC,OAAO,QAAQG,MAAO,IAElF,kBAAC,mBAAD,eACCC,GAAG,SACHJ,OAAO,SACPK,cAAeyB,YAAW,SAC1BC,WAAY,GACRrE,IAEL,kBAAC,mBAAD,eACC0C,GAAG,QACHJ,OAAO,QACPK,cAAeC,YAAO,QAClB5C,IAGL,kBAAC,aAAD,eAAY6C,UAAW,SAAAlG,GAAC,OAAIA,EAAEkD,OACzBD,IACL,kBAAC,cAAD,CACCsD,OAAQ,EAAE,GAAI,IACdL,UAAW,SAAAlG,GAAC,OAAIA,EAAEkD,MAClBc,QAASM,EAAeN,UACxB2D,WAAY1E,KAGd,kBAAC,kBAAD,CAAiBtF,OAAO,iB,GAtLoBU,IAAMC,WAmMtDoF,EAAkCkE,aAAe,CAChDhK,KAAM,OAKQ8F,MAFfA,EAAoCmE,mBAASnE,GCjP9BoE,IATQ,SAAC,GAAc,IAAZ/K,EAAW,EAAXA,KAExB,OAAIgL,MAAMC,QAAQjL,GACT,kBAAC,EAAD,CAAmCA,KAAMA,IAEzC,uC,uFCPLkL,EAAe,CACnBjB,SAAS,QAYIkB,EARA,WACb,OACE,yBAAKzK,UAAU,iBACb,uBAAGA,UAAU,wBAAwBO,MAAOiK,O,0CCVlD,IAAIE,EAAcC,EAAQ,KACtBJ,EAAUI,EAAQ,KA6CtBC,EAAOC,QAdP,SAAiBC,EAAYC,EAAWC,EAAQC,GAC9C,OAAkB,MAAdH,EACK,IAEJP,EAAQQ,KACXA,EAAyB,MAAbA,EAAoB,GAAK,CAACA,IAGnCR,EADLS,EAASC,OAAQC,EAAYF,KAE3BA,EAAmB,MAAVA,EAAiB,GAAK,CAACA,IAE3BN,EAAYI,EAAYC,EAAWC,M,gNCqB7BG,G,OA7DW,SAAC9L,GACzB,GAAIA,EAAMC,MAAQ,SAAoB4L,GAAd7L,EAAMC,KAC5B,MAAO,UAF0B,IAK3BA,EAASD,EAATC,KAIR,OADF0J,QAAQC,IAAI3J,GAER,kBAAC8L,EAAA,EAAD,CACE7G,KAAK,KACL8G,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLjH,QAAQ,OACRtE,UAAU,gBAEV,+BACE,4BACE,oCACA,0CACA,uCACA,mDACA,gDACA,yCACA,iCACA,yCACA,8CAGJ,+BACGsK,MAAMC,QAAQjL,IACbA,EAAKuE,KAAI,SAACvE,EAAMiE,GACd,IAAIiI,EAAM,GAQV,OANEA,EAD8B,eAA5BlM,EAAK,oBACD,MAC+B,aAA5BA,EAAK,oBACR,QAEA,GAGN,wBAAIyD,IAAKQ,GACP,wBAAIvD,UAAWwL,GAAMlM,EAAI,MAAY,IACrC,wBAAIU,UAAWwL,GAAMlM,EAAK,mBAAqB,IAC/C,wBAAIU,UAAWwL,GAAMlM,EAAI,SAAe,IACxC,wBAAIU,UAAWwL,GAAMlM,EAAK,uBAAyB,IACnD,wBAAIU,UAAWwL,GAAMlM,EAAK,qBAAuB,IACjD,4BAAKA,EAAK,cAAgB,IAC1B,4BAAKA,EAAI,GAAS,IAClB,4BAAKA,EAAK,sBAAwB,IAClC,4BAAKA,EAAK,oBAAsB,YCrBjCmM,G,cAxBmB,SAAC,GAAc,IAAZnM,EAAW,EAAXA,KACnC,OACE,kBAAC8L,EAAA,EAAD,CAAO7G,KAAK,KAAK8G,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACjH,QAAQ,QAC9C,+BACE,4BACE,wBAAItE,UAAU,kBAAd,UACA,8CACA,wCAGJ,+BACGsK,MAAMC,QAAQjL,IACbA,EAAKuE,KAAI,WAAqCN,GAArC,IAAGmI,EAAH,EAAGA,OAAQC,EAAX,EAAWA,eAAgB/B,EAA3B,EAA2BA,OAA3B,OACP,wBAAI7G,IAAG,gBAAWQ,IAChB,4BAAKmI,GAAUA,GACf,4BAAKC,GAAkBA,GACvB,4BAAK/B,GAAUA,W,2BCtBzBgC,G,OAAoB,OAAOC,aAC3BC,EAAmB,GAAGD,YACtBE,EAAqB,GAAIF,YAE7B,SAASG,EAASC,GAChB,OAAe,OAAXA,EACK,YAEMf,IAAXe,EACK,YAELA,EAAOJ,cAAgBD,EAClB,SAELK,EAAOJ,cAAgBC,EAClB,QAELG,EAAOJ,cAAgBE,EAClB,SAEF,aAGT,IAwDMG,EAAY,SAAC7M,GACjB,MAA6B,WAAzB2M,EAAS3M,EAAMC,MAEf,4BACE,wBAAIU,UAAU,QAAQX,EAAM8M,GAC5B,4BAAK9M,EAAMC,OAMb,4BACE,wBAAIU,UAAU,QAAQX,EAAM8M,GAE1BvJ,OAAOwJ,KAAK/M,EAAMC,MAAMuE,KAAI,SAACd,EAAKsJ,GAAN,OAC1B,wBAAItJ,IAAKsJ,GAAIhN,EAAMC,KAAKyD,SAU9BuJ,EAAqB,SAACjN,GAC1B,MAA6B,WAAzB2M,EAAS3M,EAAMC,MAEf,4BACE,wBAAIU,UAAU,QAAQX,EAAM8M,GAC5B,4BAAK9M,EAAMC,OAMb,wBAAIkF,QAAS,kBAAMnF,EAAMkN,SAASlN,EAAM8M,KACtC,wBAAInM,UAAU,QAAQX,EAAM8M,GAE1BvJ,OAAOwJ,KAAK/M,EAAMC,MAAMuE,KAAI,SAACd,EAAKsJ,GAAN,OAC1B,wBAAItJ,IAAKsJ,GAAIhN,EAAMC,KAAKyD,SAQrByJ,EAxGE,SAACnN,GAEhB,IAAMoN,EAAU,SAASC,GACvB,OAAO9J,OAAOwJ,KAAKM,IAGfC,EAAWF,EAAQpN,EAAMC,MAmC/B,OACE,yBAAKU,UAAU,SACb,kBAACoL,EAAA,EAAD,CAAO7G,KAAK,KAAK8G,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACjH,QAAQ,OAAO/D,MANtC,CACnBgJ,SAAU,SAMR,2BAAOvJ,UAAU,aACf,4BApCY,WAEhB,IAAIoM,EAA8C,WAAtCJ,EAAS3M,EAAMC,KAAKqN,EAAS,KAAqBF,EAAQpN,EAAMC,KAAKqN,EAAS,KAAO,GAGjG,OAFAP,EAAKQ,QAAQ,IAENR,EAAKvI,KAAI,SAACd,EAAKQ,GAEpB,OAAO,wBAAIR,IAAKA,GAAMA,MA6Bf8J,KAEP,+BAxBKF,EAAS9I,KAAI,SAACiJ,EAAMvJ,GACzB,IAAIwJ,SAAc1N,EAAMC,KAAKwN,IAAUlK,OAAUvD,EAAMC,KAAKwN,GAAME,SAAW3N,EAAMC,KAAKwN,GAGxF,MAA0B,QAAtBzN,EAAM4N,eAED,kBAAC,EAAD,CAAoBd,EAAGW,EAAM/J,IAAKQ,EAAOjE,KAAMyN,EAAKR,SAAUlN,EAAMkN,WAGpE,kBAAC,EAAD,CAAWJ,EAAGW,EAAM/J,IAAKQ,EAAOjE,KAAMyN,W,kCClC/CG,E,4MACJhK,MAAQ,CACNiK,sBAAuB,KACvBC,wBAAyB,GACzBC,gBAAiB,GACjBhI,mBAAoB,KACpBiI,aAAc,GACdC,gBAAiB,GACjBjI,uBAAwB,KACxBkI,WAAW,EACXC,sBAAuB,I,EAEzBC,UAAYC,YAAU,qB,EAgBtBC,UAAY,SAACC,EAAKC,GACZD,GAAOC,IACT,EAAKtK,SAAL,2BAAmB,EAAKN,OAAxB,IAA+BsK,WAAW,KAC1CO,IAAMC,IAAN,iCAAoCH,EAApC,YAA2CC,IACxCG,MAAK,YAAe,IAAZ3O,EAAW,EAAXA,KAEP,EAAKkE,SAAL,2BACK,EAAKN,OADV,IAEEiK,sBAAuB7N,EAAK4O,kBAC5BC,sBAAuB7O,EAAK6O,sBAC5Bb,aAAcc,YAAS9O,EAAK+O,UAAW,EAAKC,UAAU,EAAKZ,YAC3DL,gBAAgB,YAAK/N,EAAK+N,iBAC1BhI,mBAAoB/F,EAAK+F,mBACzBC,uBAAwBhG,EAAKgG,uBAC7BiJ,qBAAsB,kBAAC,EAAD,CAAUjP,KAAMA,EAAKiP,uBAC3ChB,gBAAgB,YAAKjO,EAAKiO,iBAC1BC,WAAW,QAGdgB,OAAM,SAACC,GACNzF,QAAQC,IAAIwF,Q,EAKpBC,yBAA2B,SAACb,EAAKC,GAC3BD,GAAOC,IACT,EAAKtK,SAAL,2BAAmB,EAAKN,OAAxB,IAA+BsK,WAAW,KAC1CO,IAAMC,IAAN,6CAAgDH,EAAhD,YAAuDC,IACpDG,MAAK,SAACU,GACL3F,QAAQC,IAAI0F,GACZ,EAAKnL,SAAL,2BACK,EAAKN,OADV,IAEEuK,sBAAsB,YAAKkB,EAAIrP,MAC/BkO,WAAW,QAGdgB,OAAM,SAACC,GAAD,OAASzF,QAAQC,IAAIwF,Q,wDAnDxBG,GACR,OAAO,SAAUrM,GASf,OARAA,EAAE+E,KAAOsH,EAAMrM,EAAE+E,MACjB/E,EAAE,oBAAsBA,EAAE,oBAC1BA,EAAEsG,MAAQgG,WAAWtM,EAAEsG,MACvBtG,EAAEuF,MAAQ+G,WAAWtM,EAAEuF,MACvBvF,EAAEwF,KAAO8G,WAAWtM,EAAEwF,KACtBxF,EAAEqG,OAASiG,WAAWtM,EAAEqG,OACxBrG,EAAEqH,QAAUkF,SAASvM,EAAEqH,QAEhBrH,K,0CA6CU,IAAD,EACSjC,KAAKjB,MAAM0P,MAAMC,OAApCnB,EADU,EACVA,IAAKC,EADK,EACLA,UAEbxN,KAAKsN,UAAUC,EAAKC,GACpBxN,KAAKoO,yBAAyBb,EAAKC,K,yCAGlBrK,GAAY,IAAD,EAIxBA,EAAUsL,MAAMC,OAFbC,EAFqB,EAE1BpB,IACWqB,EAHe,EAG1BpB,UAH0B,EAKDxN,KAAKjB,MAAM0P,MAAMC,OAApCnB,EALoB,EAKpBA,IAAKC,EALe,EAKfA,UAETmB,IAAiBpB,GAAOqB,IAAuBpB,IACjDxN,KAAKsN,UAAUC,EAAKC,GACpBxN,KAAKoO,yBAAyBb,EAAKC,M,+BAI7B,IAAD,EACoBxN,KAAKjB,MAAM0P,MAAMC,OAApCnB,EADD,EACCA,IAAKC,EADN,EACMA,UADN,EAaHxN,KAAK4C,MAVPsK,EAHK,EAGLA,UACAL,EAJK,EAILA,sBACAI,EALK,EAKLA,gBACAlI,EANK,EAMLA,mBACAC,EAPK,EAOLA,uBACA6I,EARK,EAQLA,sBACAI,EATK,EASLA,qBACAd,EAVK,EAULA,sBACAH,EAXK,EAWLA,aACAD,EAZK,EAYLA,gBAEF,OACA,oCACE,kBAAC,IAAD,MACC,yBAAKrN,UAAU,gCACZ,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,oBAAqBO,MAAO,CAAEd,OAAQ,SACnD,kBAAC2F,EAAA,EAAD,CAAM+J,GAAG,OAAO1F,KAAK,SACnB,kBAACrE,EAAA,EAAKR,OAAN,CAAa5E,UAAU,YACrB,kDACoB6N,EADpB,IAC0BC,GAG1B,yBAAK9N,UAAU,oBACb,kBAACgE,EAAA,EAAD,CACEqB,mBAAoBA,EACpBC,uBAAwBA,MAI9B,kBAACF,EAAA,EAAKL,KAAN,CAAW/E,UAAU,6BAClBwN,EACC,kBAAC/C,EAAA,EAAD,MAEA,kBAAC,EAAD,CAAmBnL,KAAM6N,QAOnC,yBAAKnN,UAAU,+BACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,iCACZ,kBAACoF,EAAA,EAAD,CAAMpF,UAAU,aAAamP,GAAG,OAAO1F,KAAK,SACzC,kBAACrE,EAAA,EAAKR,OAAN,2BACA,kBAACQ,EAAA,EAAKL,KAAN,CAAW/E,UAAU,eAClBwN,EACC,kBAAC/C,EAAA,EAAD,MAEA,kBAACW,EAAA,EAAD,CAAO7G,KAAK,KAAK8G,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACjH,QAAQ,QAC9C,+BACoC,kBAA1B6J,GACNvL,OAAOC,QAAQsL,GAAuBtK,KACpC,mCAAEd,EAAF,KAAOrB,EAAP,YACE,wBAAIqB,IAAKA,GACP,4BAAKA,GACL,4BAAKrB,YAW1B,yBAAK1B,UAAU,iCACZ,kBAACoF,EAAA,EAAD,CAAM+J,GAAG,OAAO1F,KAAK,QAAQzJ,UAAU,cACrC,kBAACoF,EAAA,EAAKR,OAAN,yBACA,kBAACQ,EAAA,EAAKL,KAAN,CAAW/E,UAAU,eAClBwN,EAAY,kBAAC/C,EAAA,EAAD,MAAa8D,KAKlC,yBAAKvO,UAAU,iCACX,kBAACoF,EAAA,EAAD,CAAM+J,GAAG,OAAO1F,KAAK,SACnB,kBAACrE,EAAA,EAAKR,OAAN,iCACA,kBAACQ,EAAA,EAAKL,KAAN,CAAWxE,MAAO,CAACd,OAAO,QAASO,UAAU,wCAC1CM,KAAK4C,MAAMsK,UACV,kBAAC/C,EAAA,EAAD,MAEA,kBAAC2E,EAAD,CAA2B9P,KAAMmO,WAarD,yBAAKzN,UAAU,yCACb,yBAAKA,UAAU,OAEd,yBAAKA,UAAU,iCACZ,kBAACoF,EAAA,EAAD,CAAM+J,GAAG,OAAO1F,KAAK,QAAQzJ,UAAU,cACrC,kBAACoF,EAAA,EAAKR,OAAN,oBACA,kBAACQ,EAAA,EAAKL,KAAN,CAAW/E,UAAU,eACnB,kBAAC,IAAD,CAAgBV,KAAMgO,OAK5B,yBAAKtN,UAAU,+BACb,kBAACoF,EAAA,EAAD,CAAM+J,GAAG,OAAO1F,KAAK,QAAQzJ,UAAU,cACrC,kBAACoF,EAAA,EAAKR,OAAN,wBACA,kBAACQ,EAAA,EAAKL,KAAN,CAAW/E,UAAU,eAClBwN,EACC,kBAAC/C,EAAA,EAAD,MAEA,kBAACrL,EAAA,EAAD,CAAqBE,KAAMiO,OAMnC,yBAAKvN,UAAU,yCACb,kBAACoF,EAAA,EAAD,CAAM+J,GAAG,OAAO1F,KAAK,QAAQzJ,UAAU,cACrC,kBAACoF,EAAA,EAAKR,OAAN,qCACA,kBAACQ,EAAA,EAAKL,KAAN,CAAW/E,UAAU,eACnB,kBAAC,IAAD,CAAaV,KAAM+N,gB,GAhOPzM,IAAMC,WAsPzBwO,eAPS,SAACnM,GACvB,MAAO,CACL2K,IAAK3K,EAAMoM,OAAOzB,IAClBC,UAAW5K,EAAMoM,OAAOxB,aAIY,KAAzBuB,CAA+BnC,GCpP/BqC,UArBW,WAAO,IAAD,EACHC,aAAY,SAACtM,GAAD,OAAWA,EAAMoM,UAAhDzB,EADsB,EACtBA,IAAKC,EADiB,EACjBA,UACb,OACE,kBAAC,IAAD,KACE,kBAAC2B,EAAA,EAAD,CACEC,KAAK,wCACLC,UAAWzC,IAEV,kBAAC,IAAD,CAEH0C,KAAK,6BACLC,GAAE,qCAAgC/B,KAElC,kBAAC,IAAD,CACE8B,KAAK,wBACLC,GAAE,gCAA2BhC,EAA3B,YAAkCC","file":"static/js/5.e90b2e38.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Brush,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst LineChartForHistArb = (props) => {\n  const { data } = props;\n \n  return (\n    <>\n      {data.length ? (\n        <ResponsiveContainer\n          width=\"100%\"\n          height={280}\n          padding={{ top: 0, right: 0, left: 0, bottom: 0 }}\n        >\n          <LineChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis className=\"recharts-cartesian-axis-tick\" dataKey=\"Time\" stroke=\"#58FF33\"/>\n            <YAxis className=\"recharts-cartesian-axis-tick\" stroke=\"#58FF33\"/>\n            <Tooltip />\n            <Legend />\n            <Brush dataKey=\"Time\" height={30} stroke=\"#8884d8\" />\n            <Line\n              type=\"monotone\"\n              dataKey=\"Arbitrage in $\"\n              stroke=\"#8884d8\"\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n};\n\nexport default LineChartForHistArb;\n","import React from \"react\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nclass ScatterPlot extends React.Component {\n  render() {\n    const { data } = this.props;\n    return (\n      <div style={{ width: \"100%\", height: 240 }}>\n        <ResponsiveContainer>\n          <ScatterChart>\n            <CartesianGrid />\n            <XAxis\n              stroke=\"#58FF33\"\n              dataKey={\"Net Asset Value Change%\"}\n              type=\"number\"\n              name=\"Net Asset Value Chage %\"\n              unit=\"%\"\n            />\n            <YAxis\n              stroke=\"#58FF33\"\n              dataKey={\"ETF Change Price %\"}\n              type=\"number\"\n              name=\"ETF Change Price %\"\n              unit=\"%\"\n            />\n            <Scatter name=\"A school\" data={data} fill=\"#3336FF\" />\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n          </ScatterChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nexport default ScatterPlot;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${value}`}</text>\n    </g>\n  );\n};\n\nconst convertData = (data = {}, element = \"\") => {\n  const convertedData = [];\n  Object.entries(data).forEach(([key, value]) =>\n    convertedData.push({ name: key, value: value[element] })\n  );\n  return convertedData;\n};\n\nclass CommonPieChart extends PureComponent {\n  state = {\n    data: [],\n    chartname: \"\",\n    activeIndex: 0,\n    COLORS: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { data, element } = this.props;\n\n    if (data !== prevProps.data && typeof data === \"object\") {\n      const tempData = convertData(data, element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.data === \"object\") {\n      const tempData = convertData(this.props.data, this.props.element);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <PieChart width={350} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={this.state.data}\n          cx={175}\n          cy={150}\n          innerRadius={25}\n          outerRadius={90}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell\n              key={index}\n              fill={this.state.COLORS[index % this.state.COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default CommonPieChart;\n","import React, { useState } from \"react\";\nimport { Button, Modal, Row, Card, Col } from \"react-bootstrap\";\nimport { CommonPieChart } from \"../Common_Components/PieChart\";\n\nconst CombinedPieCharts = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\n        Etf Movers\n      </Button>\n\n      <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Underlying Holdings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col xs={12} md={12}>\n              <Card>\n                <Card.Header className=\"CustomCardHeader text-white CustomBackGroundColor\">\n                  Holdings\n                </Card.Header>\n                <Card.Body className=\"CustomCardBody text-white\">\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Etf Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.etfmoversDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <center>\n                        <h5>Market Movers</h5>\n                      </center>\n                      <CommonPieChart\n                        data={props.highestChangeDictCount}\n                        element={\"Count\"}\n                      />\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default CombinedPieCharts;\n","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tAreaSeries,\n\tCandlestickSeries,\n\tLineSeries,\n\tMACDSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tMACDTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, macd, sma } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\n\nimport { LabelAnnotation,Annotate, Label } from \"react-stockcharts/lib/annotation\";\n\nconst macdAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfill: {\n\t\tdivergence: \"#4682B4\"\n\t},\n};\n\nconst mouseEdgeAppearance = {\n\ttextFill: \"#542605\",\n\tstroke: \"#05233B\",\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tarrowWidth: 5,\n\tfill: \"#BCDEFA\",\n};\n\n\nclass CandleStickChartWithMACDIndicator extends React.Component {\n\trender() {\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst smaVolume50 = sma()\n\t\t\t.id(3)\n\t\t\t.options({\n\t\t\t\twindowSize: 50,\n\t\t\t\tsourcePath: \"volume\",\n\t\t\t})\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\n\t\t\t.accessor(d => d.smaVolume50);\n\n\t\tconst calculatedData = smaVolume50(macdCalculator(ema12(ema26(initialData))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\tconst longAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"green\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D1\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.low),\n\t\t};\n\n\t\tconst shortAnnotationProps = {\n\t\t\tfontFamily: \"Glyphicons Halflings\",\n\t\t\tfontSize: 22,\n\t\t\tfill: \"red\",\n\t\t\topacity: 0.8,\n\t\t\ttext: \"\\u21D3\",\n\t\t\ty: ({ yScale, datum }) => yScale(datum.high),\n\t\t};\n\n\t\tconst colorOfEMA = {\n\t\t\tfill: \"red\"\n\t\t}\n\n\t\treturn (\n\t\t\t<ChartCanvas height={550}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 5, bottom: 5 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t>\n\t\t\t\t<Chart id={1} height={300}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema26.accessor(), ema12.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<LineSeries yAccessor={ema26.accessor()} stroke={ema26.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()}/>\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema26.accessor()} fill={ema26.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema12.accessor()} fill={ema12.stroke()} />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close}\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#A2F5BF\" : \"#F9ACAA\"}\n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#0B4228\" : \"#6A1B19\"}\n\t\t\t\t\t\ttextFill={d => d.close > d.open ? \"#0B4228\" : \"#420806\"}\n\t\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\tarrowWidth={2}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema26.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema26.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema26.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema12.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema12.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema12.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Sold\"}\n\t\t\t\t\t\tusingProps={longAnnotationProps} />\n\t\t\t\t\t\n\t\t\t\t\t<Annotate with={LabelAnnotation} \n\t\t\t\t\t\twhen={d => d['Over Bought/Sold'] === \"Over Bought\"}\n\t\t\t\t\t\tusingProps={shortAnnotationProps} />\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2} height={100}\n\t\t\t\t\tyExtents={[d => d.volume, smaVolume50.accessor()]}\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={3} height={100}\n\t\t\t\t\tyExtents={macdCalculator.accessor()}\n\t\t\t\t\torigin={(w, h) => [0, h - 150]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis tickStroke=\"#58FF33\" stroke=\"#58FF33\" axisAt=\"right\" orient=\"right\" ticks={2} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%H:%M\")}\n\t\t\t\t\t\trectRadius={5}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<MACDSeries yAccessor={d => d.macd}\n\t\t\t\t\t\t{...macdAppearance} />\n\t\t\t\t\t<MACDTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.macd}\n\t\t\t\t\t\toptions={macdCalculator.options()}\n\t\t\t\t\t\tappearance={macdAppearance}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor stroke=\"#FFFFFF\" />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithMACDIndicator.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithMACDIndicator.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithMACDIndicator = fitWidth(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithMACDIndicator;\n","import React from \"react\";\n\nimport CandleStickChartWithMACDIndicator from \"./StockCharts/CandleStickChartWithMACDIndicator\";\n\nconst ChartComponent = ({ data }) => {\n \n  if (Array.isArray(data)) {\n    return <CandleStickChartWithMACDIndicator data={data} />;\n  } else {\n    return <></>;\n  }\n};\n\nexport default ChartComponent;\n","import React from \"react\";\n\nconst spinnerStyle = {\n  fontSize:'14px',\n  \n};\n\nconst Loader = () => {\n  return (\n    <div className=\"loader center\">\n      <i className=\"fa fa-spinner fa-spin\" style={spinnerStyle}></i>\n    </div>\n  );\n};\n\nexport default Loader;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst EtfArbitrageTable = (props) => {\n  if (props.data == {} || props.data == undefined) {\n    return \"Loading\";\n  }\n\n  const { data } = props;\n\n  \nconsole.log(data)\n  return (\n    <Table\n      size=\"sm\"\n      striped\n      bordered\n      hover\n      variant=\"dark\"\n      className=\"font-size-sm\"\n    >\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>$Arbitrage</th>\n          <th>$Spread</th>\n          <th>$Absolute Arbitrage</th>\n          <th>Over Bought/Sold</th>\n          <th>ETF Price</th>\n          <th>T</th>\n          <th>Etf Mover</th>\n          <th>Most Change%</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(data) &&\n          data.map((data, index) => {\n            let cls = \"\";\n            if (data[\"Over Bought/Sold\"] == \"Over Bought\") {\n              cls = \"red\";\n            } else if (data[\"Over Bought/Sold\"] == \"Over Sold\") {\n              cls = \"green\";\n            } else {\n              cls = \"\";\n            }\n            return (\n              <tr key={index}>\n                <td className={cls}>{data[\"Time\"] || \"\"}</td>\n                <td className={cls}>{data[\"Arbitrage in $\"] || \"\"}</td>\n                <td className={cls}>{data[\"$Spread\"] || \"\"}</td>\n                <td className={cls}>{data[\"Absolute Arbitrage\"] || \"\"}</td>\n                <td className={cls}>{data[\"Over Bought/Sold\"] || \"\"}</td>\n                <td>{data[\"ETF Price\"] || \"\"}</td>\n                <td>{data[\"T\"] || \"\"}</td>\n                <td>{data[\"ETFMover%1_ticker\"] || \"\"}</td>\n                <td>{data[\"Change%1_ticker\"] || \"\"}</td>\n              </tr>\n            );\n          })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default EtfArbitrageTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { escapeRegExp } from \"lodash\";\nimport orderBy from \"lodash/orderBy\";\n\nimport \"./Styles/arbitrage.css\";\n\nconst DailyChangeUnderlyingFunc = ({ data }) => {\n  return (\n    <Table size=\"sm\" striped bordered hover variant=\"dark\" >\n      <thead>\n        <tr>\n          <th className=\"cursor-pointer\">Ticker</th>\n          <th>Daily Change %</th>\n          <th>Volume</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(data) &&\n          data.map(({ symbol, DailyChangepct, volume }, index) => (\n            <tr key={`symbol${index}`}>\n              <td>{symbol && symbol}</td>\n              <td>{DailyChangepct && DailyChangepct}</td>\n              <td>{volume && volume}</td>\n            </tr>\n          ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default DailyChangeUnderlyingFunc;\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../static/css/TableStyle.css'\r\n\r\nvar stringConstructor = \"test\".constructor;\r\nvar arrayConstructor = [].constructor;\r\nvar objectConstructor = ({}).constructor;\r\n\r\nfunction whatIsIt(object) {\r\n  if (object === null) {\r\n    return \"null\";\r\n  }\r\n  if (object === undefined) {\r\n    return \"undefined\";\r\n  }\r\n  if (object.constructor === stringConstructor) {\r\n    return \"String\";\r\n  }\r\n  if (object.constructor === arrayConstructor) {\r\n    return \"Array\";\r\n  }\r\n  if (object.constructor === objectConstructor) {\r\n    return \"Object\";\r\n  }\r\n  return \"don't know\";\r\n}\r\n\r\nconst AppTable = (props) => {\r\n  // getting all te keys to the json data to diectly fetch the data later\r\n  const getKeys = function(someJSON){\r\n    return Object.keys(someJSON);\r\n  }\r\n\r\n  const MainKeys = getKeys(props.data);\r\n  \r\n  // getting the headings for the heading of the table\r\n  const getHeader = function(){\r\n    // console.log(whatIsIt(props.data[MainKeys[0]]));\r\n    var keys = (whatIsIt(props.data[MainKeys[0]]) === \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    keys.unshift(\"\");\r\n    // console.log(keys);\r\n    return keys.map((key, index)=>{\r\n      // console.log(key);\r\n      return <th key={key}>{key}</th>\r\n    })\r\n  }\r\n  \r\n  // getting data for each of the rows\r\n  const getRowsData = function(){\r\n    // var keys = (whatIsIt(props.data[MainKeys[0]]) != \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    return MainKeys.map((Key1, index) => {\r\n      var row = (typeof(props.data[Key1]) == Object) ? props.data[Key1].values() : props.data[Key1];\r\n      // console.log(row);\r\n    \r\n      if (props.clickableTable=='True'){\r\n        //console.log(\"Clickable was called\");\r\n        return <RenderRowClickable k={Key1} key={index} data={row} submitFn={props.submitFn}/>\r\n      } else{\r\n        //console.log(\"None-Clickable was called\");\r\n        return <RenderRow k={Key1} key={index} data={row} />\r\n      }\r\n    }) \r\n  }\r\n  \r\n  const TableStyling = {\r\n    fontSize: '11px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n      <Table size=\"sm\" striped bordered hover variant=\"dark\" style={TableStyling}>\r\n      <thead className=\"TableHead\">\r\n        <tr>{getHeader()}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {getRowsData()}\r\n      </tbody>\r\n      </Table>\r\n    </div>          \r\n  );\r\n}\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRow = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRowClickable = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr onClick={() => props.submitFn(props.k)}>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppTable","import React from \"react\";\nimport Axios from \"axios\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { tsvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport \"./Styles/arbitrage.css\";\nimport EtfArbitrageTable from \"./EtfArbitrageTable\";\n\nimport DailyChangeUnderlyingFunc from \"./DailyChangeUnderlying\";\n\nimport LineChartForHistArb from \"../../Component/LineChartForHistArb\";\nimport ChartComponent from \"../../Component/StockPriceChart\";\nimport CombinedPieCharts from \"../../Component/CombinedPieCharts\";\nimport AppTable from \"../../Component/Table\";\n\nimport { connect } from \"react-redux\";\nimport { Loader } from \"../../Common_Components/Loader\";\nimport ScatterPlot from \"../../Component/ScatterPlott\";\nimport { CommonNavBar } from \"../../Common_Components/NavBar\";\nimport { CardGroup } from \"react-bootstrap\";\n\nclass HistoricalArbitrage extends React.Component {\n  state = {\n    etfArbitrageTableData: null,\n    historicalArbitrageData: \"\",\n    scatterPlotData: [],\n    etfmoversDictCount: null,\n    etfPriceData: \"\",\n    ArbitrageCumSum: [],\n    highestChangeDictCount: null,\n    isLoading: true,\n    underlyingPerformance: [],\n  };\n  parseDate = timeParse(\"%Y-%m-%d %H:%M:%S\");\n\n  parseData(parse) {\n    return function (d) {\n      d.date = parse(d.date);\n      d[\"Over Bought/Sold\"] = d[\"Over Bought/Sold\"];\n      d.open = +parseFloat(d.open);\n      d.high = +parseFloat(d.high);\n      d.low = +parseFloat(d.low);\n      d.close = +parseFloat(d.close);\n      d.volume = +parseInt(d.volume);\n\n      return d;\n    };\n  }\n\n  fetchData = (ETF, startDate) => {\n    if (ETF && startDate) {\n      this.setState({ ...this.state, isLoading: true });\n      Axios.get(`/api/PastArbitrageData/${ETF}/${startDate}`)\n        .then(({ data }) => {\n          \n          this.setState({\n            ...this.state,\n            etfArbitrageTableData: data.etfhistoricaldata,\n            PNLStatementForTheDay: data.PNLStatementForTheDay,\n            etfPriceData: tsvParse(data.etfPrices, this.parseData(this.parseDate)),\n            scatterPlotData: [...data.scatterPlotData],\n            etfmoversDictCount: data.etfmoversDictCount,\n            highestChangeDictCount: data.highestChangeDictCount,\n            SignalCategorization: <AppTable data={data.SignalCategorization} />,\n            ArbitrageCumSum: [...data.ArbitrageCumSum],\n            isLoading: false,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  etfUnderlyingPerformance = (ETF, startDate) => {\n    if (ETF && startDate) {\n      this.setState({ ...this.state, isLoading: true });\n      Axios.get(`/api/PastArbitrageData/DailyChange/${ETF}/${startDate}`)\n        .then((res) => {\n          console.log(res);\n          this.setState({\n            ...this.state,\n            underlyingPerformance: [...res.data],\n            isLoading: false,\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  componentDidMount() {\n    const { ETF, startDate } = this.props.match.params;\n\n    this.fetchData(ETF, startDate);\n    this.etfUnderlyingPerformance(ETF, startDate);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      ETF: prevPropsETF,\n      startDate: prevPropsStartDate,\n    } = prevProps.match.params;\n    const { ETF, startDate } = this.props.match.params;\n\n    if (prevPropsETF !== ETF || prevPropsStartDate !== startDate) {\n      this.fetchData(ETF, startDate);\n      this.etfUnderlyingPerformance(ETF, startDate);\n    }\n  }\n\n  render() {\n    const { ETF, startDate } = this.props.match.params;\n    const {\n      isLoading,\n      etfArbitrageTableData,\n      ArbitrageCumSum,\n      etfmoversDictCount,\n      highestChangeDictCount,\n      PNLStatementForTheDay,\n      SignalCategorization,\n      underlyingPerformance,\n      etfPriceData,\n      scatterPlotData,\n    } = this.state;\n    return (\n    <>\n      <CommonNavBar />\n       <div className=\"container-fluid font-size-sm\">\n          <div className=\"row\">\n          \n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                <div className=\"row\">\n                  \n                  <div className=\"col-lg-8 col-md-8 col-sm-12 padding-0\">\n                    <div className=\"etfArbitrageTable\"  style={{ height: \"92vh\" }}>\n                      <Card bg=\"dark\" text=\"light\">\n                        <Card.Header className=\"flex-row\">\n                          <span>\n                            Histortical Data {ETF} {startDate}\n                          </span>\n\n                          <div className=\"margin-left-auto\">\n                            <CombinedPieCharts\n                              etfmoversDictCount={etfmoversDictCount}\n                              highestChangeDictCount={highestChangeDictCount}\n                            />\n                          </div>\n                        </Card.Header>\n                        <Card.Body className=\"padding-1px overflow-auto\">\n                          {isLoading ? (\n                            <Loader />\n                          ) : (\n                            <EtfArbitrageTable data={etfArbitrageTableData} />\n                          )}\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                    <div className=\"row\">\n\n                      <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                         <Card className=\"height-100\" bg=\"dark\" text=\"light\">\n                            <Card.Header>Signal Performance</Card.Header>\n                            <Card.Body className=\"padding-1px\">\n                              {isLoading ? (\n                                <Loader />\n                              ) : (\n                                <Table size=\"sm\" striped bordered hover variant=\"dark\">\n                                  <tbody>\n                                    {typeof PNLStatementForTheDay === \"object\" &&\n                                      Object.entries(PNLStatementForTheDay).map(\n                                        ([key, value]) => (\n                                          <tr key={key}>\n                                            <td>{key}</td>\n                                            <td>{value}</td>\n                                          </tr>\n                                        )\n                                      )}\n                                  </tbody>\n                                </Table>\n                              )}\n                            </Card.Body>\n                          </Card>\n                      </div>\n\n                       <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                          <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                            <Card.Header>Arbitrage Spread</Card.Header>\n                            <Card.Body className=\"padding-1px\">\n                              {isLoading ? <Loader /> : SignalCategorization}\n                            </Card.Body>\n                          </Card>\n                        </div>\n\n                      <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                          <Card bg=\"dark\" text=\"light\">\n                            <Card.Header>Underlyings Daily Change</Card.Header>\n                            <Card.Body style={{height:\"40vh\"}} className=\"overflow-auto padding-sm padding-1px\">\n                              {this.state.isLoading ? (\n                                <Loader />\n                              ) : (\n                                <DailyChangeUnderlyingFunc data={underlyingPerformance} />\n                              )}\n                            </Card.Body>\n                        </Card>\n                      </div>\n\n                    </div>\n                  </div>\n\n                </div>\n            </div>\n\n\n            <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n              <div className=\"row\">\n                \n               <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                  <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                    <Card.Header>Price Chart</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      <ChartComponent data={etfPriceData} />\n                    </Card.Body>\n                  </Card>\n               </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                  <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                    <Card.Header>Arb Time Series</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      {isLoading ? (\n                        <Loader />\n                      ) : (\n                        <LineChartForHistArb data={ArbitrageCumSum} />\n                      )}\n                    </Card.Body>\n                  </Card>\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sm-12 padding-0\">\n                  <Card bg=\"dark\" text=\"light\" className=\"height-100\">\n                    <Card.Header>ETF Change % Vs NAV change %</Card.Header>\n                    <Card.Body className=\"padding-1px\">\n                      <ScatterPlot data={scatterPlotData}  />\n                    </Card.Body>\n                  </Card>\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ETF: state.navbar.ETF,\n    startDate: state.navbar.startDate,\n  };\n};\n\nexport default connect(mapStateToProps, null)(HistoricalArbitrage);\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { HistoricalArbitrage } from \"../Pages/Historical_Arbitrage\";\nimport { useSelector } from \"react-redux\";\n\nconst HistArbiageRoutes = () => {\n  const { ETF, startDate } = useSelector((state) => state.navbar);\n  return (\n    <Switch>\n      <ProtectedRoute\n        path=\"/historical-arbitrage/:ETF/:startDate\"\n        component={HistoricalArbitrage}\n      />\n         <Redirect\n      \n      from=\"/historical-arbitrage/:ETF\"\n      to={`/historical-arbitrage/:ETF/${startDate}`}\n    />\n      <Redirect\n        from=\"/historical-arbitrage\"\n        to={`/historical-arbitrage/${ETF}/${startDate}`}\n      />\n    </Switch>\n  );\n};\n\nexport default HistArbiageRoutes;\n"],"sourceRoot":""}